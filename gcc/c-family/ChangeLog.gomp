2017-05-16  Chung-Lin Tang  <cltang@codesourcery.com>

	* c-pragma.h (enum pragma_omp_clause): Add PRAGMA_OACC_CLAUSE_FINALIZE.

2017-05-15  Thomas Schwinge  <thomas@codesourcery.com>

	* c-cppbuiltin.c (c_cpp_builtins): Update "_OPENACC" to "201510".

2017-05-04  Cesar Philippidis  <cesar@codesourcery.com>

	* c-pragma.h (enum pragma_omp_clause): Add
	PRAGMA_OACC_CLAUSE_IF_PRESENT.

2017-04-13  Chung-Lin Tang  <cltang@codesourcery.com>

	* c-pragma.h (enum pragma_omp_clauses):
	Remove PRAGMA_OACC_CLAUSE_PRESENT_OR_COPY/COPYIN/COPYOUT/CREATE.

2016-06-10  Thomas Schwinge  <thomas@codesourcery.com>

	Backport trunk r235802:
	2016-05-03  Marek Polacek  <polacek@redhat.com>

	* c-common.h (enum c_omp_region_type): Remove stray comma.

2016-05-09  Cesar Philippidis  <cesar@codesourcery.com>

	Backport trunk r235651:
	2016-04-29  Cesar Philippidis  <cesar@codesourcery.com>

	PR middle-end/70626
	* c-common.h (c_oacc_split_loop_clauses): Add boolean argument.
	* c-omp.c (c_oacc_split_loop_clauses): Use it to duplicate
	reduction clauses in acc parallel loops.

2016-05-09  Cesar Philippidis  <cesar@codesourcery.com>

	Backport from trunk r235780:
	2016-05-02  Cesar Philippidis  <cesar@codesourcery.com>

	* c-common.h (enum c_omp_region_type): Define.

2016-05-09  Cesar Philippidis  <cesar@codesourcery.com>

	Backport trunk r235290:
	2016-04-20  Ilya Verbin  <ilya.verbin@intel.com>

	PR c++/69363
	* c-cilkplus.c (c_finish_cilk_clauses): Remove function.
	* c-common.h (c_finish_cilk_clauses): Remove declaration.

2016-01-05  Nathan Sidwell  <nathan@acm.org>

	* c.opt (fopenacc-dim=): New option.

2015-11-08  Tom de Vries  <tom@codesourcery.com>

	* c-omp.c (c_oacc_split_loop_clauses): Don't copy OMP_CLAUSE_REDUCTION,
	classify as loop clause.

2015-11-06  Cesar Philippidis  <cesar@codesourcery.com>

	* c-omp.c (c_oacc_split_loop_clauses): Make TILE, GANG, WORKER, VECTOR,
	AUTO, SEQ, INDEPENDENT and PRIVATE loop clauses.  Associate REDUCTION
	clauses with parallel and kernels and loops.

2015-08-31  Nathan Sidwell  <nathan@codesourcery.com>

	* c-common.c (DEF_FUNCTION_TYPE_VAR_6): Define.

2015-08-24  Cesar Philippidis  <cesar@codesourcery.com>

	* c-omp.c (c_oacc_split_loop_clauses): Don't propagate
	OMP_CLAUSE_FIRSTPRIVATE to acc loops with splitting the clauses.

2015-08-17  Nathan Sidwell  <nathan@codesourcery.com>

	* c-common (c_common_attribute_table) Remove oacc function.

2015-08-15  Nathan Sidwell  <nathan@codesourcery.com>

	* c-common.c (c_common_attribute_table): oacc function can take list.

2015-07-28  Nathan Sidwell  <nathan@codesourcery.com>

	* c-common.c (DEF_FUNCTION_TYPE_VAR_12): Delete.

2015-07-27  Julian Brown  <julian@codesourcery.com>

	* c-omp.c (c_oacc_extract_device_id, identifier_hasher)
	(c_oacc_filter_device_types): Remove dead code.

2015-06-15  Cesar Philippidis  <cesar@codesourcery.com>

	* c-common.h (c_oacc_split_loop_clauses): Declare.
	(oacc_extract_device_id): Remove declaration.
	(oacc_filter_device_types): Rename to ...
	(c_oacc_filter_device_types): ... this.
	* c-omp.c (oacc_extract_device_id): Rename to ...
	(c_oacc_extract_device_id): ... this and make static.
	(oacc_filter_device_types): Rename to ...
	(c_oacc_filter_device_types): ... this.
	(c_oacc_split_loop_clauses): New function.

2015-06-12  Cesar Philippidis  <cesar@codesourcery.com>

	* c-omp.c (oacc_extract_device_id): Recognize GOMP_DEVICE_DEFAULT.
	(struct identifier_hasher): New struct declaration.
	(oacc_filter_device_types): Report errors on duplicate device_type
	entries.

2015-06-10  Cesar Philippidis  <cesar@codesourcery.com>

	* c-omp.c (oacc_filter_device_types): Filter out
	device_type clauses even when the device_type isn't recognized.

2015-05-13  Cesar Philippidis  <cesar@codesourcery.com>

	* c-common.c (c_common_attribute_table): Add an "oacc function"
	attribute.

2015-05-13  Thomas Schwinge  <thomas@codesourcery.com>
	    Bernd Schmidt  <bernds@codesourcery.com>
	    Cesar Philippidis  <cesar@codesourcery.com>
	    Chung-Lin Tang  <cltang@codesourcery.com>
	    James Norris  <jnorris@codesourcery.com>
	    Joseph Myers  <joseph@codesourcery.com>
	    Julian Brown  <julian@codesourcery.com>
	    Tom de Vries  <tom@codesourcery.com>

	* c-common.c (DEF_FUNCTION_TYPE_VAR_11): Remove.
	(DEF_FUNCTION_TYPE_VAR_12): New macro.

2015-05-11  Thomas Schwinge  <thomas@codesourcery.com>
	    Bernd Schmidt  <bernds@codesourcery.com>
	    Cesar Philippidis  <cesar@codesourcery.com>
	    Chung-Lin Tang  <cltang@codesourcery.com>
	    James Norris  <jnorris@codesourcery.com>
	    Joseph Myers  <joseph@codesourcery.com>
	    Julian Brown  <julian@codesourcery.com>
	    Tom de Vries  <tom@codesourcery.com>

	* c-common.c (c_common_attribute_table): Set min_len to -1 for
	"omp declare target".  Add "oacc declare".
	* c-common.h (oacc_extract_device_id, oacc_filter_device_types):
	New prototypes.
	* c-omp.c (oacc_extract_device_id, oacc_filter_device_types): New
	functions.
	* c-pragma.c (oacc_pragmas): Add "atomic", "declare", "host_data",
	"routine".
	* c-pragma.h (pragma_kind): Add PRAGMA_OACC_ATOMIC,
	PRAGMA_OACC_DECLARE, PRAGMA_OACC_HOST_DATA, PRAGMA_OACC_ROUTINE.
	(pragma_omp_clause): Add PRAGMA_OACC_CLAUSE_BIND,
	PRAGMA_OACC_CLAUSE_DEVICE_RESIDENT,
	PRAGMA_OACC_CLAUSE_DEVICE_TYPE, PRAGMA_OACC_CLAUSE_INDEPENDENT,
	PRAGMA_OACC_CLAUSE_LINK, PRAGMA_OACC_CLAUSE_NOHOST,
	PRAGMA_OACC_CLAUSE_TILE, PRAGMA_OACC_CLAUSE_USE_DEVICE,
	PRAGMA_OACC_CLAUSE_DEFAULT, remove PRAGMA_OACC_CLAUSE_SELF.

2014-12-19  Jakub Jelinek  <jakub@redhat.com>

	* c-pragma.h (enum pragma_omp_clause): Rename
	OpenACC only clauses to PRAGMA_OACC_CLAUSE_* from
	PRAGMA_OMP_CLAUSE_*.  For clauses shared by OpenMP
	and OpenACC add PRAGMA_OACC_CLAUSE_* aliases to
	PRAGMA_OMP_CLAUSE_* values.

2014-12-17  Thomas Schwinge  <thomas@codesourcery.com>
	    Bernd Schmidt  <bernds@codesourcery.com>

	* c-pragma.h (enum pragma_omp_clause): Add PRAGMA_OMP_CLAUSE_AUTO,
	PRAGMA_OMP_CLAUSE_GANG, PRAGMA_OMP_CLAUSE_SEQ,
	PRAGMA_OMP_CLAUSE_VECTOR, and PRAGMA_OMP_CLAUSE_WORKER.

2014-12-17  Thomas Schwinge  <thomas@codesourcery.com>

	* c-omp.c (c_finish_oacc_wait): Use include/gomp-constants.h.

2014-11-05  James Norris  <jnorris@codesourcery.com>

	* c-pragma.c (oacc_pragmas): Add "cache".

2014-11-03  Cesar Philippidis  <cesar@codesourcery.com>

	* c-pragma.c (oacc_pragmas): Add entries for PRAGMA_OACC_ENTER_DATA
	and PRAGMA_OACC_EXIT_DATA.
	* c-pragma.h (pragma_kind): Likewise.

2014-10-15  James Norris  <jnorris@codesourcery.com>

	* c-common.h (c_finish_oacc_wait): New prototype.
	* c-pragma.h (enum pragma_kind): Add PRAGMA_OACC_CACHE,
	PRAGMA_OACC_WAIT.
	(enum pragma_omp_clause): Add PRAGMA_OMP_CLAUSE_ASYNC,
	PRAGMA_OMP_CLAUSE_WAIT.
	* c-omp.c (c_finish_oacc_wait): New function.

2014-06-06  Thomas Schwinge  <thomas@codesourcery.com>
	    James Norris  <jnorris@codesourcery.com>

	* c-pragma.c (oacc_pragmas): Add "update".
	* c-pragma.h (enum pragma_kind): Add PRAGMA_OACC_UPDATE.
	(enum pragma_omp_clause): Add PRAGMA_OMP_CLAUSE_HOST and
	PRAGMA_OMP_CLAUSE_SELF.

2014-03-20  Thomas Schwinge  <thomas@codesourcery.com>

	* c-omp.c (check_omp_for_incr_expr, c_finish_omp_for): Update
	comments.
	* c-pragma.c (oacc_pragmas): Sort PRAGMA_OACC_LOOP alphabetically.
	* c-pragma.h (enum pragma_kind): Likewise.

2014-03-18  Ilmir Usmanov  <i.usmanov@samsung.com>

	* c-pragma.h (enum pragma_kind): Add PRAGMA_OACC_LOOP.
	* c-pragma.c (oacc_pragmas): Add "loop".

2014-03-18  Thomas Schwinge  <thomas@codesourcery.com>

	* c-pragma.h (enum pragma_omp_clause): Add
	PRAGMA_OMP_CLAUSE_NUM_GANGS, PRAGMA_OMP_CLAUSE_NUM_WORKERS,
	PRAGMA_OMP_CLAUSE_VECTOR_LENGTH.

	* c-common.c (DEF_FUNCTION_TYPE_10): Define.

2014-02-28  Thomas Schwinge  <thomas@codesourcery.com>

	* c-pragma.c (oacc_pragmas): Add "kernels".
	* c-pragma.h (enum pragma_kind): Add PRAGMA_OACC_KERNELS.

2014-02-21  Thomas Schwinge  <thomas@codesourcery.com>

	* c-pragma.c (oacc_pragmas): Add "data".
	* c-pragma.h (enum pragma_kind): Add PRAGMA_OACC_DATA.

2014-01-28  Thomas Schwinge  <thomas@codesourcery.com>

	* c-pragma.h (pragma_omp_clause): Add PRAGMA_OMP_CLAUSE_COPY,
	PRAGMA_OMP_CLAUSE_COPYOUT, PRAGMA_OMP_CLAUSE_CREATE,
	PRAGMA_OMP_CLAUSE_DELETE, PRAGMA_OMP_CLAUSE_DEVICEPTR,
	PRAGMA_OMP_CLAUSE_PRESENT, PRAGMA_OMP_CLAUSE_PRESENT_OR_COPY,
	PRAGMA_OMP_CLAUSE_PRESENT_OR_COPYIN,
	PRAGMA_OMP_CLAUSE_PRESENT_OR_COPYOUT, and
	PRAGMA_OMP_CLAUSE_PRESENT_OR_CREATE.

2013-11-07  Thomas Schwinge  <thomas@codesourcery.com>

	* c-omp.c (c_omp_split_clauses): Catch OACC_PARALLEL.

	* c-pragma.h (pragma_kind): Add PRAGMA_OACC_PARALLEL.
	* c-pragma.c (oacc_pragmas): Add "parallel".

	* c-pragma.c (oacc_pragmas): New array.
	(c_pp_lookup_pragma, init_pragma): Handle it.

	* c-cppbuiltin.c (c_cpp_builtins): Conditionally define _OPENACC.

	* c.opt (fopenacc): New option.

2013-10-04  Jakub Jelinek  <jakub@redhat.com>

	* c-cppbuiltin.c (c_cpp_builtins): Predefine _OPENMP to
	201307 instead of 201107.

2013-09-26  Jakub Jelinek  <jakub@redhat.com>

	PR libgomp/58482
	* c-omp.c (c_omp_split_clauses) <case OMP_CLAUSE_REDUCTION>: Copy
	also OMP_CLAUSE_REDUCTION_PLACEHOLDER.

2013-09-25  Jakub Jelinek  <jakub@redhat.com>

	* c-common.h (c_finish_omp_taskgroup): New prototype.
	* c-omp.c (c_finish_omp_taskgroup): New function.

2013-07-14  Jakub Jelinek  <jakub@redhat.com>

	* c-omp.c (c_omp_declare_simd_clauses_to_numbers): Change first
	argument from a fndecl to its parms.

2013-07-06  Jakub Jelinek  <jakub@redhat.com>

	* c-pragma.h (enum pragma_kind): Remove PRAGMA_OMP_DECLARE_SIMD,
	PRAGMA_OMP_DECLARE_TARGET, PRAGMA_OMP_DISTRIBUTE_PARALLEL_FOR,
	PRAGMA_OMP_DISTRIBUTE_PARALLEL_FOR_SIMD, PRAGMA_OMP_DISTRIBUTE_SIMD,
	PRAGMA_OMP_FOR_SIMD, PRAGMA_OMP_PARALLEL_FOR,
	PRAGMA_OMP_PARALLEL_FOR_SIMD, PRAGMA_OMP_PARALLEL_SECTIONS,
	PRAGMA_OMP_TARGET_DATA, PRAGMA_OMP_TARGET_TEAMS,
	PRAGMA_OMP_TARGET_TEAMS_DISTRIBUTE,
	PRAGMA_OMP_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR,
	PRAGMA_OMP_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD,
	PRAGMA_OMP_TARGET_UPDATE, PRAGMA_OMP_TEAMS_DISTRIBUTE,
	PRAGMA_OMP_TEAMS_DISTRIBUTE_PARALLEL_FOR and
	PRAGMA_OMP_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD.

2013-06-21  Jakub Jelinek  <jakub@redhat.com>

	* c-omp.c (c_omp_split_clauses): Fix up OMP_CLAUSE_COLLAPSE
	handling.

2013-06-14  Jakub Jelinek  <jakub@redhat.com>

	* c-common.h: Move omp_clause_mask code earlier in the file.
	(c_omp_split_clauses): New prototype.
	(c_split_parallel_clauses): Removed.
	* c-pragma.h (enum pragma_kind): Add
	PRAGMA_OMP_DISTRIBUTE_PARALLEL_FOR,
	PRAGMA_OMP_DISTRIBUTE_PARALLEL_FOR_SIMD,
	PRAGMA_OMP_DISTRIBUTE_SIMD, PRAGMA_OMP_TARGET_TEAMS,
	PRAGMA_OMP_TARGET_TEAMS_DISTRIBUTE,
	PRAGMA_OMP_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR,
	PRAGMA_OMP_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD,
	PRAGMA_OMP_TEAMS_DISTRIBUTE,
	PRAGMA_OMP_TEAMS_DISTRIBUTE_PARALLEL_FOR,
	and PRAGMA_OMP_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD.
	* c-omp.c: Include c-pragma.h.
	(c_omp_split_clauses): New function.
	(c_split_parallel_clauses): Remove.

2013-06-12  Jakub Jelinek  <jakub@redhat.com>

	* c-pragma.h (enum pragma_omp_clause): Add
	PRAGMA_OMP_CLAUSE_THREAD_LIMIT.

2013-05-29  Jakub Jelinek  <jakub@redhat.com>

	* c-common.c (c_common_attribute_table): Add "omp declare target"
	attribute.
	(handle_omp_declare_target_attribute): New function.

2013-05-09  Jakub Jelinek  <jakub@redhat.com>

	* c-common.c (c_common_attribute_table): Add "omp declare simd"
	attribute.
	(handle_omp_declare_simd_attribute): New function.
	* c-common.h (c_omp_declare_simd_clauses_to_numbers,
	c_omp_declare_simd_clauses_to_decls): Declare.
	* c-omp.c (c_omp_declare_simd_clause_cmp,
	c_omp_declare_simd_clauses_to_numbers,
	c_omp_declare_simd_clauses_to_decls): New functions.

2013-04-30  Jakub Jelinek  <jakub@redhat.com>

	* c-omp.c (c_finish_omp_atomic): Add seq_cst argument, store it
	into OMP_ATOMIC_SEQ_CST bit.
	* c-common.h (c_finish_omp_atomic): Adjust prototype.

	* c-pragma.c (omp_pragmas): Add PRAGMA_OMP_DISTRIBUTE.

2013-04-10  Jakub Jelinek  <jakub@redhat.com>

	* c-common.c (DEF_FUNCTION_TYPE_8): Define.
	* c-omp.c (c_split_parallel_clauses): Handle OMP_CLAUSE_PROC_BIND.

2013-03-27  Jakub Jelinek  <jakub@redhat.com>

	* c-omp.c (c_finish_omp_for): Add code argument, pass it down to
	make_code.
	(c_split_parallel_clauses): Handle OMP_CLAUSE_SAFELEN,
	OMP_CLAUSE_ALIGNED and OMP_CLAUSE_LINEAR.
	* c-pragma.h (enum pragma_kind): Add PRAGMA_OMP_CANCEL,
	PRAGMA_OMP_CANCELLATION_POINT, PRAGMA_OMP_DECLARE_REDUCTION,
	PRAGMA_OMP_DECLARE_SIMD, PRAGMA_OMP_DECLARE_TARGET,
	PRAGMA_OMP_DISTRIBUTE, PRAGMA_OMP_END_DECLARE_TARGET,
	PRAGMA_OMP_FOR_SIMD, PRAGMA_OMP_PARALLEL_FOR_SIMD, PRAGMA_OMP_SIMD,
	PRAGMA_OMP_TARGET, PRAGMA_OMP_TARGET_DATA, PRAGMA_OMP_TARGET_UPDATE,
	PRAGMA_OMP_TASKGROUP and PRAGMA_OMP_TEAMS.
	(enum pragma_omp_clause): Add PRAGMA_OMP_CLAUSE_ALIGNED,
	PRAGMA_OMP_CLAUSE_DEPEND, PRAGMA_OMP_CLAUSE_DEVICE,
	PRAGMA_OMP_CLAUSE_DIST_SCHEDULE, PRAGMA_OMP_CLAUSE_FOR,
	PRAGMA_OMP_CLAUSE_FROM, PRAGMA_OMP_CLAUSE_INBRANCH,
	PRAGMA_OMP_CLAUSE_LINEAR, PRAGMA_OMP_CLAUSE_MAP,
	PRAGMA_OMP_CLAUSE_NOTINBRANCH, PRAGMA_OMP_CLAUSE_NUM_TEAMS,
	PRAGMA_OMP_CLAUSE_PARALLEL, PRAGMA_OMP_CLAUSE_PROC_BIND,
	PRAGMA_OMP_CLAUSE_SAFELEN, PRAGMA_OMP_CLAUSE_SECTIONS,
	PRAGMA_OMP_CLAUSE_SIMDLEN, PRAGMA_OMP_CLAUSE_TASKGROUP,
	PRAGMA_OMP_CLAUSE_TO and PRAGMA_OMP_CLAUSE_UNIFORM.
	* c-pragma.c (omp_pragmas): Add new OpenMP 4.0 constructs.
	* c-common.h (c_finish_omp_for): Add enum tree_code as second
	argument.
	(OMP_CLAUSE_MASK_1): Define.
	(omp_clause_mask): For HWI >= 64 new typedef for
	unsigned HOST_WIDE_INT, otherwise a class with needed ctors and
	operators.

2013-03-20  Jakub Jelinek  <jakub@redhat.com>

	* c-omp.c (c_finish_omp_atomic): Add swapped argument, if true,
	build the operation first with rhs, lhs arguments and use NOP_EXPR
	build_modify_expr.
	* c-common.h (c_finish_omp_atomic): Adjust prototype.

Copyright (C) 2013-2016 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Local Variables:
mode: change-log
change-log-default-name: "ChangeLog.gomp"
End:
