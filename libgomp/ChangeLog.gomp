2017-05-16  Chung-Lin Tang  <cltang@codesourcery.com>

	* openacc.h (acc_copyout_finalize): Declare new API function.
	(acc_copyout_finalize_async): Likewise.
	(acc_delete_finalize): Likewise.
	(acc_delete_finalize_async): Likewise.
	* openacc_lib.h (acc_copyout_finalize): Declare new API function.
	(acc_copyout_finalize_async): Likewise.
	(acc_delete_finalize): Likewise.
	(acc_delete_finalize_async): Likewise.
	* openacc.f90 (acc_copyout_finalize_32_h): Define.
	(acc_copyout_finalize_64_h): Likewise.
	(acc_copyout_finalize_array_h): Likewise.
	(acc_copyout_finalize_l): Likewise.
	(acc_copyout_finalize_async_32_h): Define.
	(acc_copyout_finalize_async_64_h): Likewise.
	(acc_copyout_finalize_async_array_h): Likewise.
	(acc_copyout_finalize_async_l): Likewise.
	(acc_delete_finalize_32_h): Define.
	(acc_delete_finalize_64_h): Likewise.
	(acc_delete_finalize_array_h): Likewise.
	(acc_delete_finalize_l): Likewise.
	(acc_delete_finalize_async_32_h): Define.
	(acc_delete_finalize_async_64_h): Likewise.
	(acc_delete_finalize_async_array_h): Likewise.
	(acc_delete_finalize_async_l): Likewise.
	* libgomp.map (OACC_2.5): Add acc_copyout_finalize* and
	acc_delete_finalize* entries.
	* libgomp.h (struct splay_tree_key_s): Add 'dynamic_refcount' field.
	(gomp_acc_remove_pointer): Adjust declaration.
	(gomp_remove_var): New declaration.
	* libgomp_g.h (GOACC_enter_exit_data): Adjust declaration.
	* oacc-mem.c (acc_map_data): Adjust new key refcount to
	REFCOUNT_INFINITY.
	(acc_unmap_data): Adjust key refcount to 1 for removal.
	(present_create_copy): Increment mapping refcounts when mapping exists,
	initialize dynamic refcount when creating new mapping.
	(FLAG_FINALIZE): Define macro.
	(delete_copyout): Adjust delete/copyout handling, add handling for
	FLAG_FINALIZE.
	(acc_delete_finalize): Define new API function.
	(acc_delete_finalize_async): Likewise.
	(acc_copyout_finalize): Likewise.
	(acc_copyout_finalize_async): Likewise.
	(gomp_acc_insert_pointer): Adjust handling.
	(gomp_acc_remove_pointer): Add finalize parameter, adjust handling.
	* oacc-parallel.c (GOACC_parallel_keyed): Disable async registering
	when no copyout needed.
	(GOACC_enter_exit_data): Add and handle finalize argument, adjust
	gomp_acc_insert_pointer and gomp_acc_remove_pointer calls.
	(GOACC_declare): Adjust calls to GOACC_enter_exit_data.
	* target.c (gomp_map_vars): Initialize dynamic_refcount.
	(gomp_remove_var): Abstract out key unreferencing into new function.
	(gomp_unmap_vars): Adjust to call gomp_remove_var.
	(gomp_unload_image_from_device): Likewise.
	(gomp_exit_data): Likewise.
	* testsuite/libgomp.oacc-c-c++-common/data-2.c: Adjust testcase for
	2.5 reference counting.
	* testsuite/libgomp.oacc-c-c++-common/lib-38.c: Likewise.
	* testsuite/libgomp.oacc-fortran/data-2.f90: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/data-4.c: New test.
	* testsuite/libgomp.oacc-c-c++-common/data-5.c: Likewise.
	* testsuite/libgomp.oacc-fortran/data-5.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/data-6.f90: Likewise.

2017-05-15  Thomas Schwinge  <thomas@codesourcery.com>

	* libgomp.texi (OpenACC Environment Variables): Mention
	"ACC_PROFLIB".
	(OpenACC Profiling Interface): Update.

	* libgomp.texi: Update for OpenACC 2.5.
	* openacc.f90 (openacc_version): Update to "201510".
	* openacc_lib.h (openacc_version): Likewise.
	* testsuite/libgomp.oacc-fortran/openacc_version-1.f: Update.
	* testsuite/libgomp.oacc-fortran/openacc_version-2.f90: Update.

	* oacc-async.c (acc_async_test, acc_async_test_all, acc_wait)
	(acc_wait_async, acc_wait_all, acc_wait_all_async): Set up
	profiling.
	* oacc-cuda.c (acc_get_current_cuda_device)
	(acc_get_current_cuda_context, acc_get_cuda_stream)
	(acc_set_cuda_stream): Likewise.
	* oacc-init.c (acc_set_device_type, acc_get_device_type)
	(acc_get_device_num): Likewise.
	* oacc-mem.c (acc_malloc, acc_free, memcpy_tofrom_device)
	(acc_map_data, acc_unmap_data, present_create_copy)
	(delete_copyout, update_dev_host): Likewise.
	* oacc-parallel.c (GOACC_data_start, GOACC_data_end)
	(GOACC_enter_exit_data, GOACC_update, GOACC_wait): Likewise.
	* oacc-profiling.c (goacc_profiling_setup_p): New function.
	(goacc_profiling_dispatch_p): Add a "bool" formal parameter.
	Adjust all users.
	* oacc-int.h (goacc_profiling_setup_p)
	(goacc_profiling_dispatch_p): Update.
	* plugin/plugin-nvptx.c (nvptx_exec, nvptx_wait, nvptx_wait_all):
	Generate more profiling events.
	* libgomp.texi (OpenACC Profiling Interface): Update.

2017-05-14  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/acc_prof-kernels-1.c: New
	file.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-2.c: Update.
	* testsuite/libgomp.oacc-c-c++-common/parallel-dims.c: Likewise.
	* testsuite/libgomp.oacc-fortran/kernels-loop-2.f95: Likewise.

	* testsuite/libgomp.oacc-c-c++-common/parallel-dims.c: Rewrite.
	* testsuite/libgomp.oacc-c++/c++.exp (check_effective_target_c)
	(check_effective_target_c++): New procs.
	* testsuite/libgomp.oacc-c/c.exp (check_effective_target_c)
	(check_effective_target_c++): Likewise.

2017-05-12  Cesar Philippidis  <cesar@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/par-reduction-3.c: New test.

2017-05-11  Cesar Philippidis  <cesar@codesourcery.com>

	* testsuite/libgomp.oacc-fortran/implicit_copy.f90: New test.

2017-05-09  Cesar Philippidis  <cesar@codesourcery.com>

	* oacc-parallel.c (GOACC_update): Handle GOMP_MAP_{TO,FROM} for the
	if_present data clauses.
	* testsuite/libgomp.oacc-c-c++-common/update-2.c: New test.
	* testsuite/libgomp.oacc-fortran/update-3.f90: New test.

2017-05-03  Cesar Philippidis  <cesar@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/loop-auto-1.c: Adjust test case
	to conform to the new behavior of the auto clause in OpenACC 2.5.

2017-05-01  Cesar Philippidis  <cesar@codesourcery.com>

	* testsuite/libgomp.oacc-c++/pr71959-a.C: Adjust test case conform
	to OpenACC 2.5 routines.
	* testsuite/libgomp.oacc-c-c++-common/declare-2.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/declare-3.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/declare-4.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/host_data-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/loop-default.h: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/mode-transitions.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/parallel-loop-2.h: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/routine-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/routine-3.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/routine-bind-nohost-1.c:
	Likewise.
	* testsuite/libgomp.oacc-fortran/host_data-2.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/host_data-3.f: Likewise.
	* testsuite/libgomp.oacc-fortran/host_data-4.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/routine-1.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/routine-2.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/routine-3.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/routine-4.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/routine-5.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/routine-9.f90: Likewise.

2017-04-20  Cesar Philippidis  <cesar@codesourcery.com>

	* testsuite/libgomp.oacc-fortran/allocatable-scalar.f90: Clean up
	test.

2017-04-19  Cesar Philippidis  <cesar@codesourcery.com>

	* oacc-parallel.c (GOACC_enter_exit_data): Add support for
	GOMP_MAP_DECLARE_{ALLOCATE,DEALLOCATE}.
	(GOACC_update): Add support for GOMP_MAP_ALWAYS_POINTER.
	* testsuite/libgomp.oacc-fortran/allocatable-scalar.f90: New test.
	* testsuite/libgomp.oacc-fortran/declare-allocatable-2.f90: New test.
	* testsuite/libgomp.oacc-fortran/declare-allocatable-3.f90: New test.
	* testsuite/libgomp.oacc-fortran/declare-allocatable-4.f90: New test.

2017-04-13  Chung-Lin Tang  <cltang@codesourcery.com>

	* oacc-mem.c (acc_create): Add FLAG_PRESENT to call of
	present_create_copy.
	(acc_create_async): Likewise.
	(acc_copyin): Likewise.
	(acc_copyin_async): Likewise.
	(acc_present_or_create): Remove definition and change to alias of
	acc_create.
	(acc_present_or_copyin): Remove definition and change to alias of
	acc_copyin.
	* oacc-parallel.c (GOACC_enter_exit_data): Add GOMP_MAP_FROM as
	handled map kind.
	* testsuite/libgomp.oacc-c-c++-common/data-already-1.c: Delete.
	* testsuite/libgomp.oacc-c-c++-common/data-already-2.c: Delete.
	* testsuite/libgomp.oacc-c-c++-common/data-already-3.c: Delete.
	* testsuite/libgomp.oacc-c-c++-common/data-already-4.c: Delete.
	* testsuite/libgomp.oacc-c-c++-common/data-already-5.c: Delete.
	* testsuite/libgomp.oacc-c-c++-common/data-already-6.c: Delete.
	* testsuite/libgomp.oacc-c-c++-common/data-already-7.c: Delete.
	* testsuite/libgomp.oacc-c-c++-common/data-already-8.c: Delete.
	* testsuite/libgomp.oacc-fortran/data-already-1.f: Delete.
	* testsuite/libgomp.oacc-fortran/data-already-2.f: Delete.
	* testsuite/libgomp.oacc-fortran/data-already-3.f: Delete.
	* testsuite/libgomp.oacc-fortran/data-already-4.f: Delete.
	* testsuite/libgomp.oacc-fortran/data-already-5.f: Delete.
	* testsuite/libgomp.oacc-fortran/data-already-6.f: Delete.
	* testsuite/libgomp.oacc-fortran/data-already-7.f: Delete.
	* testsuite/libgomp.oacc-fortran/data-already-8.f: Delete.
	* testsuite/libgomp.oacc-c-c++-common/lib-16.c: Remove dg-shouldfail.
	* testsuite/libgomp.oacc-c-c++-common/lib-25.c: Likewise.

2017-04-12  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/nested-2.c: Respect that
	"char" might mean "unsigned char".

2017-04-07  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.oacc-c++/template-reduction.C: Update.
	* testsuite/libgomp.oacc-c-c++-common/nested-2.c: Update.
	* testsuite/libgomp.oacc-fortran/data-4-2.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/default-1.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/non-scalar-data.f90: Likewise.

2017-04-05  Cesar Philippidis  <cesar@codesourcery.com>

	* libgomp.h: Declare gomp_acc_declare_allocate.
	* oacc-mem.c (gomp_acc_declare_allocate): New function.
	* oacc-parallel.c (GOACC_enter_exit_data): Handle
	GOMP_MAP_DECLARE_{ALLOCATE,DEALLOCATE}.
	* testsuite/libgomp.oacc-fortran/declare-allocatable-1.f90: New test.

2017-03-31  Cesar Philippidis  <cesar@codesourcery.com>

	* testsuite/libgomp.oacc-fortran/derived-type-1.f90: New test.
	* testsuite/libgomp.oacc-fortran/routine-8.f90: Adjust xfails.

2017-03-15  Cesar Philippidis  <cesar@codesourcery.com>

	Backport from trunk:
	2016-11-10  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.fortran/examples-4/declare_target-1.f90
	(fib_wrapper): Add map(from: x) clause.
	* testsuite/libgomp.fortran/examples-4/declare_target-2.f90
	(e_53_2): Likewise.
	* testsuite/libgomp.fortran/examples-4/declare_target-4.f90
	(accum): Add map(tmp) clause.
	* testsuite/libgomp.fortran/examples-4/declare_target-5.f90
	(accum): Add map(tofrom: tmp) clause.
	* testsuite/libgomp.fortran/examples-4/target_data-3.f90
	(gramSchmidt): Likewise.
	* testsuite/libgomp.fortran/examples-4/teams-2.f90 (dotprod): Add
	map(tofrom: sum) clause.
	* testsuite/libgomp.fortran/nestedfn5.f90 (foo): Add twice
	map (alloc: a, l) clause.  Add defaultmap(tofrom: scalar) clause.
	* testsuite/libgomp.fortran/pr66199-2.f90: Adjust for linear clause
	only allowed on the loop iterator.
	* testsuite/libgomp.fortran/target4.f90 (foo): Add map(t) clause.
	* testsuite/libgomp.fortran/taskloop2.f90: New test.
	* testsuite/libgomp.fortran/taskloop4.f90: New test.
	* testsuite/libgomp.fortran/doacross1.f90: New test.
	* testsuite/libgomp.fortran/doacross3.f90: New test.
	* testsuite/libgomp.fortran/taskloop1.f90: New test.
	* testsuite/libgomp.fortran/taskloop3.f90: New test.
	* testsuite/libgomp.fortran/doacross2.f90: New test.
	* testsuite/libgomp.c/doacross-1.c (main): Add missing
	#pragma omp atomic read.
	* testsuite/libgomp.c/doacross-2.c (main): Likewise.
	* testsuite/libgomp.c/doacross-3.c (main): Likewise.

2017-02-28  Thomas Schwinge  <thomas@codesourcery.com>

	* acc_prof.h: New file.
	* oacc-profiling-acc_register_library.c: Likewise.
	* oacc-profiling.c: Likewise.
	* Makefile.am (nodist_libsubinclude_HEADERS, libgomp_la_SOURCES):
	Add these, respectively.
	* Makefile.in: Regenerate.
	* libgomp/config/nvptx/oacc-profiling-acc_register_library.c:
	New empty file.
	* libgomp/config/nvptx/oacc-profiling.c: Likewise.
	* env.c (initialize_env): Call goacc_profiling_initialize.
	* libgomp-plugin.c: New function
	GOMP_PLUGIN_goacc_profiling_dispatch.
	* libgomp-plugin.h: Declare function
	GOMP_PLUGIN_goacc_profiling_dispatch.
	* oacc-plugin.c: New function GOMP_PLUGIN_goacc_thread.
	* oacc-plugin.h: Declare function GOMP_PLUGIN_goacc_thread.
	* libgomp.map (OACC_2.5): Add acc_prof_lookup, acc_prof_register,
	acc_prof_unregister, and acc_register_library.
	Add GOMP_PLUGIN_goacc_profiling_dispatch, and
	GOMP_PLUGIN_goacc_thread with new GOMP_PLUGIN_1.3 symbol version.
	* oacc-int.h (struct goacc_thread): Add "acc_prof_info
	*prof_info", "acc_api_info *api_info", and "bool
	prof_callbacks_enabled" members.
	Declare functions goacc_profiling_initialize,
	goacc_profiling_dispatch_p, and goacc_profiling_dispatch.
	* oacc-init.c (acc_init_1): Add "acc_construct_t", and "int"
	formal parameters.  Adjust all users.
	(acc_init_1, goacc_attach_host_thread_to_device, acc_init)
	(goacc_lazy_initialize): Update for OpenACC Profiling Interface.
	* oacc-parallel.c (GOACC_parallel_keyed): Likewise.
	* plugin/plugin-nvptx.c (cuda_map_create, cuda_map_destroy)
	(map_init, map_fini, map_pop, map_push): Add "struct goacc_thread
	*" formal parameter.  Adjust all users.
	(select_stream_for_async, event_gc, nvptx_exec, nvptx_host2dev)
	(nvptx_dev2host, nvptx_set_cuda_stream): Call
	GOMP_PLUGIN_goacc_thread instead of nvptx_thread.
	(cuda_map_create, cuda_map_destroy, nvptx_exec, nvptx_alloc)
	(nvptx_free, nvptx_host2dev, nvptx_dev2host): Update for OpenACC
	Profiling Interface.
	* libgomp.texi: New chapter "OpenACC Profiling Interface".
	* testsuite/libgomp.oacc-c-c++-common/acc_prof-dispatch-1.c: New
	file.
	* testsuite/libgomp.oacc-c-c++-common/acc_prof-init-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/acc_prof-parallel-1.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/acc_prof-valid_bytes-1.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/acc_prof-version-1.c:
	Likewise.

	* oacc-init.c (goacc_register, acc_init, goacc_lazy_initialize):
	Fix locking of cached_base_dev (guarded by acc_device_lock).
	(goacc_lazy_initialize): Don't call acc_init; copy code here,
	instead.

2017-02-27  Chung-Lin Tang  <cltang@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/gang-private-1.c: New test.

2017-02-17  Cesar Philippidis  <cesar@codesourcery.com>

	* plugin/plugin-nvptx.c (struct targ_fn_descriptor): Add num_regs
	member.
	(struct ptx_device): Add max_threads_per_block, warp_size,
	multiprocessor_count, max_threads_per_multiprocessor,
	max_registers_per_multiprocessor, max_shared_memory_per_multiprocessor
	members.
	(nvptx_open_device): Initialze the new ptx_device variables.
	(nvptx_exec): Don't probe the CUDA runtime for the hardware info.
	Use the new variables inside targ_fn_descriptor and ptx_device instead.
	(GOMP_OFFLOAD_load_image): Set num_gangs,
	register_allocation_{unit_size,granularity}.

2017-02-14  Thomas Schwinge  <thomas@codesourcery.com>

	* libgomp.map: Add OACC_2.5 version, and add acc_copyin_async,
	acc_copyin_async_32_h_, acc_copyin_async_64_h_,
	acc_copyin_async_array_h_, acc_copyout_async,
	acc_copyout_async_32_h_, acc_copyout_async_64_h_,
	acc_copyout_async_array_h_, acc_create_async,
	acc_create_async_32_h_, acc_create_async_64_h_,
	acc_create_async_array_h_, acc_delete_async,
	acc_delete_async_32_h_, acc_delete_async_64_h_,
	acc_delete_async_array_h_, acc_get_default_async,
	acc_get_default_async_h_, acc_memcpy_from_device_async,
	acc_memcpy_to_device_async, acc_set_default_async,
	acc_set_default_async_h_, acc_update_device_async,
	acc_update_device_async_32_h_, acc_update_device_async_64_h_,
	acc_update_device_async_array_h_, acc_update_self_async,
	acc_update_self_async_32_h_, acc_update_self_async_64_h_, and
	acc_update_self_async_array_h_.  Add GOMP_PLUGIN_1.2 version, and
	add GOMP_PLUGIN_acc_thread_default_async.

2017-02-13  Cesar Philippidis  <cesar@codesourcery.com>

	* plugin/plugin-nvptx.c (nvptx_exec): Adjust the default num_gangs.
	Add diagnostic when the hardware cannot support the requested
	num_workers.

2017-02-13  Chung-Lin Tang  <cltang@codesourcery.com>

	* oacc-async.c (acc_get_default_async): New API function.
	(acc_set_default_async): Likewise.
	* oacc-init.c ():
	* oacc-int.h (struct goacc_thread): Add default_async field.
	* oacc-mem.c (memcpy_tofrom_device): New function, combined from
	acc_memcpy_to/from_device functions, now with async parameter.
	(acc_memcpy_to_device): Modify to use memcpy_tofrom_device.
	(acc_memcpy_from_device): Likewise.
	(acc_memcpy_to_device_async): New API function.
	(acc_memcpy_from_device_async): Likewise.
	(present_create_copy): Add async parameter.
	(acc_create): Adjust present_create_copy call.
	(acc_copyin): Likewise.
	(acc_present_or_create): Likewise.
	(acc_present_or_copyin): Likewise.
	(acc_create_async): New API function.
	(acc_copyin_async): New API function.
	(delete_copyout): Add async parameter.
	(acc_delete): Adjust delete_copyout call.
	(acc_copyout): Likewise.
	(acc_delete_async): New API function.
	(acc_copyout_async): Likewise.
	(update_dev_host): Add async parameter.
	(acc_update_device): Adjust update_dev_host call.
	(acc_update_self): Likewise.
	(acc_update_device_async): New API function.
	(acc_update_self_async): Likewise.
	* oacc-plugin.c (GOMP_PLUGIN_acc_thread_default_async): New function.
	* oacc-plugin.h (GOMP_PLUGIN_acc_thread_default_async): Declare.
	* openacc.f90 (acc_async_default): Declare.
	(acc_set_default_async): Likewise.
	(acc_get_default_async): Likewise.
	* openacc_lib.h (acc_async_default): Declare.
	(acc_set_default_async): Likewise.
	(acc_get_default_async): Likewise.
	* testsuite/libgomp.oacc-c-c++-common/asyncwait-2.c: New test.
	* testsuite/libgomp.oacc-c-c++-common/lib-94.c: New test.
	* testsuite/libgomp.oacc-c-c++-common/lib-95.c: New test.
	* testsuite/libgomp.oacc-fortran/lib-16.f90: New test.

2017-02-08  Cesar Philippidis  <cesar@codesourcery.com>

	* testsuite/libgomp.oacc-fortran/reduction-9.f90: New test.

2017-02-02  Cesar Philippidis  <cesar@codesourcery.com>

	* target.c (gomp_map_pset): Handle PSETs to uninitialized arrays.
	* testsuite/libgomp.oacc-fortran/assumed-array.f90: New test.

2017-02-02  Thomas Schwinge  <thomas@codesourcery.com>

	Backport from trunk r245127:
	2017-02-02  Thomas Schwinge  <thomas@codesourcery.com>

	* plugin/plugin-nvptx.c (nvptx_exec): Make it static.

	Backport from trunk r245125:
	2017-02-02  Thomas Schwinge  <thomas@codesourcery.com>

	* libgomp-plugin.h (GOMP_OFFLOAD_openacc_parallel): Rename to
	GOMP_OFFLOAD_openacc_exec.  Adjust all users.
	(GOMP_OFFLOAD_openacc_get_current_cuda_device): Rename to
	GOMP_OFFLOAD_openacc_cuda_get_current_device.  Adjust all users.
	(GOMP_OFFLOAD_openacc_get_current_cuda_context): Rename to
	GOMP_OFFLOAD_openacc_cuda_get_current_context.  Adjust all users.
	(GOMP_OFFLOAD_openacc_get_cuda_stream): Rename to
	GOMP_OFFLOAD_openacc_cuda_get_stream.  Adjust all users.
	(GOMP_OFFLOAD_openacc_set_cuda_stream): Rename to
	GOMP_OFFLOAD_openacc_cuda_set_stream.  Adjust all users.

2017-01-31  Thomas Schwinge  <thomas@codesourcery.com>

	Backport from trunk r245062:
	2017-01-31  Thomas Schwinge  <thomas@codesourcery.com>

	* libgomp-plugin.h: #include <stdbool.h>.
	(GOMP_OFFLOAD_get_name, GOMP_OFFLOAD_get_caps)
	(GOMP_OFFLOAD_get_type, GOMP_OFFLOAD_get_num_devices)
	(GOMP_OFFLOAD_init_device, GOMP_OFFLOAD_fini_device)
	(GOMP_OFFLOAD_version, GOMP_OFFLOAD_load_image)
	(GOMP_OFFLOAD_unload_image, GOMP_OFFLOAD_alloc, GOMP_OFFLOAD_free)
	(GOMP_OFFLOAD_dev2host, GOMP_OFFLOAD_host2dev)
	(GOMP_OFFLOAD_dev2dev, GOMP_OFFLOAD_can_run, GOMP_OFFLOAD_run)
	(GOMP_OFFLOAD_async_run, GOMP_OFFLOAD_openacc_parallel)
	(GOMP_OFFLOAD_openacc_register_async_cleanup)
	(GOMP_OFFLOAD_openacc_async_test)
	(GOMP_OFFLOAD_openacc_async_test_all)
	(GOMP_OFFLOAD_openacc_async_wait)
	(GOMP_OFFLOAD_openacc_async_wait_async)
	(GOMP_OFFLOAD_openacc_async_wait_all)
	(GOMP_OFFLOAD_openacc_async_wait_all_async)
	(GOMP_OFFLOAD_openacc_async_set_async)
	(GOMP_OFFLOAD_openacc_create_thread_data)
	(GOMP_OFFLOAD_openacc_destroy_thread_data)
	(GOMP_OFFLOAD_openacc_get_current_cuda_device)
	(GOMP_OFFLOAD_openacc_get_current_cuda_context)
	(GOMP_OFFLOAD_openacc_get_cuda_stream)
	(GOMP_OFFLOAD_openacc_set_cuda_stream): New prototypes.
	* libgomp.h (struct acc_dispatch_t, struct gomp_device_descr): Use
	these.
	* plugin/plugin-hsa.c (GOMP_OFFLOAD_load_image)
	(GOMP_OFFLOAD_unload_image): Fix argument types.

2017-01-27  Cesar Philippidis  <cesar@codesourcery.com>

	* testsuite/libgomp.oacc-fortran/deviceptr-1.f90: Add -foffload-force.
	* testsuite/libgomp.oacc-fortran/non-scalar-data.f90: Likewise.

2017-01-27  Cesar Philippidis  <cesar@codesourcery.com>

	* target.c (gomp_map_pset): New function.
	(gomp_map_vars): Update GOMP_MAP_POINTER with GOMP_MAP_TO_PSET, when
	possible.

2017-01-27  Cesar Philippidis  <cesar@codesourcery.com>

	* plugin/plugin-nvptx.c (nvptx_exec): Make aware of
	GOMP_MAP_FIRSTPRIVATE_INT host addresses.
	* testsuite/libgomp.oacc-c++/firstprivate-int.C: New test.
	* testsuite/libgomp.oacc-c-c++-common/firstprivate-int.c: New test.
	* testsuite/libgomp.oacc-fortran/firstprivate-int.f90: New test.

2017-01-10  Chung-Lin Tang  <cltang@codesourcery.com>

	* target.c (struct da_dim): New struct declaration.
	(struct da_descr_type): Likewise.
	(struct da_info): Likewise.
	(gomp_dynamic_array_count_rows): New function.
	(gomp_dynamic_array_compute_info): Likewise.
	(gomp_dynamic_array_fill_rows_1): Likewise.
	(gomp_dynamic_array_fill_rows): Likewise.
	(gomp_dynamic_array_create_ptrblock): Likewise.
	(gomp_map_vars): Add code to handle dynamic array map kinds.
	* testsuite/libgomp.oacc-c-c++-common/da-1.c: New test.
	* testsuite/libgomp.oacc-c-c++-common/da-2.c: New test.
	* testsuite/libgomp.oacc-c-c++-common/da-3.c: New test.
	* testsuite/libgomp.oacc-c-c++-common/da-4.c: New test.
	* testsuite/libgomp.oacc-c-c++-common/da-utils.h: New test.

2016-11-18  Cesar Philippidis  <cesar@codesourcery.com>

	* plugin/plugin-nvptx.c (struct cuda_map): New.
	(struct ptx_stream): Replace d, h, h_begin, h_end, h_next, h_prev,
	h_tail with (cuda_map *) map.
	(cuda_map_create): New function.
	(cuda_map_destroy): New function.
	(map_init): Update to use a linked list of cuda_map objects.
	(map_fini): Likewise.
	(map_pop): Likewise.
	(map_push): Likewise.  Return CUdeviceptr instead of void.
	(init_streams_for_device): Remove stales references to ptx_stream
	members.
	(select_stream_for_async): Likewise.
	(nvptx_exec): Update call to map_init.

2016-11-16  Cesar Philippidis  <cesar@codesourcery.com>

	Backport from trunk:
	2016-05-26  Chung-Lin Tang  <cltang@codesourcery.com>

	libgomp/
	* target.c (gomp_device_copy): New function.
	(gomp_copy_host2dev): Likewise.
	(gomp_copy_dev2host): Likewise.
	(gomp_free_device_memory): Likewise.
	(gomp_map_vars_existing): Adjust to call gomp_copy_host2dev.
	(gomp_map_pointer): Likewise.
	(gomp_map_vars): Adjust to call gomp_copy_host2dev, handle
	NULL value from alloc_func plugin hook.
	(gomp_unmap_tgt): Adjust to call gomp_free_device_memory.
	(gomp_copy_from_async): Adjust to call gomp_copy_dev2host.
	(gomp_unmap_vars): Likewise.
	(gomp_update): Adjust to call gomp_copy_dev2host and
	gomp_copy_host2dev functions.
	(gomp_unload_image_from_device): Handle false value from
	unload_image_func plugin hook.
	(gomp_init_device): Handle false value from init_device_func
	plugin hook.
	(gomp_exit_data): Adjust to call gomp_copy_dev2host.
	(omp_target_free): Adjust to call gomp_free_device_memory.
	(omp_target_memcpy): Handle return values from host2dev_func,
	dev2host_func, and dev2dev_func plugin hooks.
	(omp_target_memcpy_rect_worker): Likewise.
	(gomp_target_fini): Handle false value from fini_device_func
	plugin hook.
	* libgomp.h (struct gomp_device_descr): Adjust return type of
	init_device_func, fini_device_func, unload_image_func, free_func,
	dev2host_func,host2dev_func, and dev2dev_func plugin hooks to 'bool'.
	* oacc-init.c (acc_shutdown_1): Handle false value from
	fini_device_func plugin hook.
	* oacc-host.c (host_init_device): Change return type to bool.
	(host_fini_device): Likewise.
	(host_unload_image): Likewise.
	(host_free): Likewise.
	(host_dev2host): Likewise.
	(host_host2dev): Likewise.
	* oacc-mem.c (acc_free): Handle plugin hook fatal error case.
	(acc_memcpy_to_device): Likewise.
	(acc_memcpy_from_device): Likewise.
	(delete_copyout): Add libfnname parameter, handle free_func
	hook fatal error case.
	(acc_delete): Adjust delete_copyout call.
	(acc_copyout): Likewise.
	(update_dev_host): Move gomp_mutex_unlock to after
	host2dev/dev2host hook calls.
	* plugin/plugin-hsa.c (hsa_warn): Adjust 'hsa_error' local variable
	to 'hsa_error_msg', for clarity.
	(hsa_fatal): Likewise.
	(hsa_error): New function.
	(init_hsa_context): Change return type to bool, adjust to return
	false on error.
	(GOMP_OFFLOAD_get_num_devices): Adjust to handle init_hsa_context
	return value.
	(GOMP_OFFLOAD_init_device): Change return type to bool, adjust to
	return false on error.
	(get_agent_info): Adjust to return NULL on error.
	(destroy_hsa_program): Change return type to bool, adjust to
	return false on error.
	(GOMP_OFFLOAD_load_image): Adjust to return -1 on error.
	(destroy_module): Change return type to bool, adjust to
	return false on error.
	(GOMP_OFFLOAD_unload_image): Likewise.
	(GOMP_OFFLOAD_fini_device): Likewise.
	(GOMP_OFFLOAD_alloc): Change to return NULL when called.
	(GOMP_OFFLOAD_free): Change to return false when called.
	(GOMP_OFFLOAD_dev2host): Likewise.
	(GOMP_OFFLOAD_host2dev): Likewise.
	(GOMP_OFFLOAD_dev2dev): Likewise.
	* plugin/plugin-nvptx.c (CUDA_CALL_ERET): New convenience macro.
	(CUDA_CALL): Likewise.
	(CUDA_CALL_ASSERT): Likewise.
	(map_init): Change return type to bool, use CUDA_CALL* macros.
	(map_fini): Likewise.
	(init_streams_for_device): Change return type to bool, adjust
	call to map_init.
	(fini_streams_for_device): Change return type to bool, adjust
	call to map_fini.
	(select_stream_for_async): Release stream_lock before calls to
	GOMP_PLUGIN_fatal, adjust call to map_init.
	(nvptx_init): Use CUDA_CALL* macros.
	(nvptx_attach_host_thread_to_device): Change return type to bool,
	use CUDA_CALL* macros.
	(nvptx_open_device): Use CUDA_CALL* macros.
	(nvptx_close_device): Change return type to bool, use CUDA_CALL*
	macros.
	(nvptx_get_num_devices): Use CUDA_CALL* macros.
	(link_ptx): Change return type to bool, use CUDA_CALL* macros.
	(nvptx_exec): Use CUDA_CALL* macros.
	(nvptx_alloc): Use CUDA_CALL* macros.
	(nvptx_free): Change return type to bool, use CUDA_CALL* macros.
	(nvptx_host2dev): Likewise.
	(nvptx_dev2host): Likewise.
	(nvptx_wait): Use CUDA_CALL* macros.
	(nvptx_wait_async): Likewise.
	(nvptx_wait_all): Likewise.
	(nvptx_wait_all_async): Likewise.
	(nvptx_set_cuda_stream): Adjust order of stream_lock acquire,
	use CUDA_CALL* macros, adjust call to map_fini.
	(GOMP_OFFLOAD_init_device): Change return type to bool,
	adjust code accordingly.
	(GOMP_OFFLOAD_fini_device): Likewise.
	(GOMP_OFFLOAD_load_image): Adjust calls to
	nvptx_attach_host_thread_to_device/link_ptx to handle errors,
	use CUDA_CALL* macros.
	(GOMP_OFFLOAD_unload_image): Change return type to bool, adjust
	return code.
	(GOMP_OFFLOAD_alloc): Adjust calls to code to handle error return.
	(GOMP_OFFLOAD_free): Change return type to bool, adjust calls to
	handle error return.
	(GOMP_OFFLOAD_dev2host): Likewise.
	(GOMP_OFFLOAD_host2dev): Likewise.
	(GOMP_OFFLOAD_openacc_register_async_cleanup): Use CUDA_CALL* macros.
	(GOMP_OFFLOAD_openacc_create_thread_data): Likewise.

2016-11-10  Cesar Philippidis  <cesar@codesourcery.com>

	* testsuite/libgomp.oacc-fortran/update-2.f90: New test.

2016-11-07  Cesar Philippidis  <cesar@codesourcery.com>

	Backport from trunk
	2016-11-02  Cesar Philippidis  <cesar@codesourcery.com>
		    Nathan Sidwell  <nathan@acm.org>

	* plugin/plugin-nvptx.c (nvptx_exec): Interrogate board attributes
	to determine default geometry.

2016-10-28  Cesar Philippidis  <cesar@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/broadcast-1.c: New test.

2016-10-19  Thomas Schwinge  <thomas@codesourcery.com>

	PR other/70945
	* testsuite/libgomp.oacc-c-c++-common/pr70945-1.c: New file.

2016-10-05  Nathan Sidwell  <nathan@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/tile-1.c: New.

2016-09-30  Nathan Sidwell  <nathan@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/parallel-loop-1.c: Remove
	tile test.
	* testsuite/libgomp.oacc-c-c++-common/parallel-loop-1.h: Likewise.
	* testsuite/libgomp.oacc-fortran/kernels-loop-1.f90: Likewise.

2016-09-23  Cesar Philippidis  <cesar@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/declare-vla.c: New test.

2016-09-15  Cesar Philippidis  <cesar@codesourcery.com>

	* testsuite/libgomp.oacc-fortran/common-block-1.f90: New test.
	* testsuite/libgomp.oacc-fortran/common-block-2.f90: New test.
	* testsuite/libgomp.oacc-fortran/common-block-3.f90: New test.

2016-08-30  Cesar Philippidis  <cesar@codesourcery.com>

	* testsuite/libgomp.oacc-fortran/assumed-size.f90: New test.

2016-08-30  Nathan Sidwell  <nathan@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/loop-auto-1.c: Set gang
	dimension.
	* testsuite/libgomp.oacc-fortran/nested-function-1.f90: Likewise.

2016-08-30  Nathan Sidwell  <nathan@codesourcery.com>

	* plugin/plugin-nvptx.c (nvptx_exec): Interrogate board attributes
	to determine default geometry.

2016-08-26  Nathan Sidwell  <nathan@codesourcery.com>

	* testsuite/libgomp.oacc-c++/pr71959.C: New.
	* testsuite/libgomp.oacc-c++/pr71959-a.C: New.

2016-08-24  Nathan Sidwell  <nathan@codesourcery.com>

	* testsuite/libgomp.oacc-c++/ref-1.C: New.

2016-08-23  Cesar Philippidis  <cesar@codesourcery.com>

	* oacc-parallel.c (GOACC_parallel_keyed): Add offset to devaddrs.
	* testsuite/libgomp.oacc-c-c++-common/data_offset.c: New test.
	* testsuite/libgomp.oacc-fortran/data_offset.f90: New test.

2016-08-18  Chung-Lin Tang  <cltang@codesourcery.com>

	Backport from mainline
	2016-08-18  Chung-Lin Tang  <cltang@codesourcery.com>

	PR middle-end/70895
	* testsuite/libgomp.oacc-fortran/reduction-7.f90: Add explicit
	firstprivate clauses.
	* testsuite/libgomp.oacc-fortran/reduction-6.f90: Remove explicit
	copy clauses.
	* testsuite/libgomp.oacc-c-c++-common/reduction-7.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/reduction-cplx-flt.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/reduction-flt.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/collapse-2.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/loop-red-wv-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/collapse-4.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/loop-red-v-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/reduction-cplx-dbl.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/loop-red-g-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/loop-red-gwv-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/loop-red-w-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/reduction-dbl.c: Likewise.

2016-08-17  Cesar Philippidis  <cesar@codesourcery.com>

	PR middle-end/70828
	* testsuite/libgomp.oacc-c-c++-common/pr70828.c: New test.
	* testsuite/libgomp.oacc-fortran/pr70828.f90: New test.

2016-08-12  Cesar Philippidis  <cesar@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/host_data-1.c: Increase test
	coverage.  Build with -Wall -Wextra.
	* testsuite/libgomp.oacc-fortran/host_data-2.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/cublas-fixed.h: New test.
	* testsuite/libgomp.oacc-fortran/host_data-3.f: New test.
	* testsuite/libgomp.oacc-fortran/host_data-4.f90: New test.

2016-08-11  Cesar Philippidis  <cesar@codesourcery.com>

	* testsuite/libgomp.oacc-fortran/host_data-1.f90: Remove stale xfail.
	* testsuite/libgomp.oacc-fortran/host_data-2.f90: New test.

2016-08-04  Thomas Schwinge  <thomas@codesourcery.com>

	Backport trunk r239126:
	* testsuite/libgomp.oacc-c++/routine-1-auto.C: New file.
	* testsuite/libgomp.oacc-c++/routine-1-template-auto.C: Likewise.
	* testsuite/libgomp.oacc-c++/routine-1-template-trailing-return-type.C:
	Likewise.
	* testsuite/libgomp.oacc-c++/routine-1-template.C: Likewise.
	* testsuite/libgomp.oacc-c++/routine-1-trailing-return-type.C:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/routine-1.c: Adjust.

	Backport trunk r239125:
	* testsuite/libgomp.oacc-c-c++-common/crash-1.c: Make it a "link"
	test, and don't hardcode -O0.

2016-08-03  Nathan Sidwell  <nathan@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/crash-1.c: New.

2016-07-29  Chung-Lin Tang  <cltang@codesourcery.com>

	* testsuite/libgomp.oacc-fortran/host_data-1.f90: Adjust testcase.

2016-07-27  Cesar Philippidis  <cesar@codesourcery.com>

	* testsuite/libgomp.oacc-fortran/abort-1.f90:
	* testsuite/libgomp.oacc-fortran/acc_on_device-1-2.f: Add test
	coverage.

2016-07-15  Cesar Philippidis  <cesar@codesourcery.com>

	Backport from trunk:
	* testsuite/libgomp.oacc-c-c++-common/zero_length_subarrays.c: New
	test.

2016-07-01  Cesar Philippidis  <cesar@codesourcery.com>

	Back port from trunk
	2016-06-29  Cesar Philippidis  <cesar@codesourcery.com>

	* gfortran.dg/goacc/asyncwait-2.f95: Updated expected diagnostics.
	* gfortran.dg/goacc/asyncwait-3.f95: Likewise.
	* gfortran.dg/goacc/asyncwait-4.f95: Add test coverage.

2016-06-30  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/avoid-offloading-1.c:
	Update.
	* testsuite/libgomp.oacc-fortran/avoid-offloading-1.f: Update.

2016-06-10  Thomas Schwinge  <thomas@codesourcery.com>

	PR middle-end/71373
	Backport from trunk r237291:
	2016-06-10  Thomas Schwinge  <thomas@codesourcery.com>
		    Cesar Philippidis  <cesar@codesourcery.com>

	* libgomp.oacc-c/nested-function-1.c: New file.
	* libgomp.oacc-c/nested-function-2.c: Likewise.
	* libgomp.oacc-fortran/nested-function-1.f90: Likewise.
	* libgomp.oacc-fortran/nested-function-2.f90: Likewise.
	* libgomp.oacc-fortran/nested-function-3.f90: Likewise.

	PR c/71381
	* testsuite/libgomp.oacc-fortran/cache-1.f90: Remove file.

	PR c/71381
	Backport from trunk r237290:
	* testsuite/libgomp.oacc-c-c++-common/cache-1.c: #include
	"../../../gcc/testsuite/c-c++-common/goacc/cache-1.c".
	* testsuite/libgomp.oacc-fortran/cache-1.f95: New file.

	* testsuite/libgomp.oacc-c++/template-reduction.C: Remove XFAIL.

2016-06-08  Chung-Lin Tang  <cltang@codesourcery.com>

	Backport from trunk r237070:
	2016-06-03  Chung-Lin Tang  <cltang@codesourcery.com>

	* testsuite/libgomp.oacc-fortran/reduction-8.f90: New testcase.
	* testsuite/libgomp.oacc-c-c++-common/reduction-8.c: New testcase.

2016-06-01  Cesar Philippidis  <cesar@codesourcery.com>

	Backport from trunk r237011.
	2016-06-01  Cesar Philippidis  <cesar@codesourcery.com>
	PR c/70688
	* pr70688.c: New file.

2016-05-27  Cesar Philippidis  <cesar@codesourcery.com>

	* testsuite/libgomp.oacc-c++/non-scalar-data.C: Adjust test.
	* testsuite/libgomp.oacc-c-c++-common/data-2-lib.c: New test.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-3.c: Adjust
	test.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-4.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/
	kernels-parallel-loop-data-enter-exit.c: Likewise.
	* testsuite/libgomp.oacc-fortran/lib-14.f90: Likewise.

	Backport trunk r236678:
	2016-05-24  Cesar Philippidis  <cesar@codesourcery.com>
	* oacc-mem.c (acc_malloc): Update handling of shared-memory targets.
	(acc_free): Likewise.
	(acc_memcpy_to_device): Likewise.
	(acc_memcpy_from_device): Likewise.
	(acc_deviceptr): Likewise.
	(acc_hostptr): Likewise.
	(acc_is_present): Likewise.
	(acc_map_data): Likewise.
	(acc_unmap_data): Likewise.
	(present_create_copy): Likewise.
	(delete_copyout): Likewise.
	(update_dev_host): Likewise.
	* testsuite/libgomp.oacc-c-c++-common/asyncwait-1.c: Remove xfail.
	* testsuite/libgomp.oacc-c-c++-common/data-2-lib.c: New test.
	* testsuite/libgomp.oacc-c-c++-common/data-2.c: Adjust test.
	* testsuite/libgomp.oacc-c-c++-common/data-3.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/enter_exit-lib.c: New test.
	* testsuite/libgomp.oacc-c-c++-common/lib-13.c: Adjust test so that
	it only runs on nvptx targets.
	* testsuite/libgomp.oacc-c-c++-common/lib-14.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-15.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-16.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-17.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-18.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-20.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-21.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-22.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-23.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-24.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-25.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-28.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-29.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-30.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-34.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-42.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-43.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-44.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-47.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-48.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-52.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-53.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-54.c: Likewise.

2016-05-06  Nathan Sidwell  <nathan@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/loop-auto-1.c: Adjust and
	add additional case.

2016-04-21  Thomas Schwinge  <thomas@codesourcery.com>

	Backport trunk r235339:
	2016-04-21  Alexander Monakov  <amonakov@ispras.ru>

	* plugin/plugin-nvptx.c (map_fini): Make cuMemFreeHost error
	non-fatal.

2016-04-08  Thomas Schwinge  <thomas@codesourcery.com>

	PR testsuite/70579
	PR testsuite/70580
	* testsuite/libgomp.oacc-c-c++-common/host_data-1.c: Initialize
	the runtime for acc_device_nvidia.
	* testsuite/libgomp.oacc-c-c++-common/if-1.c: Cope with
	"avoid offloading" situation.
	* libgomp.texi (Enabling OpenACC): Elaborate on interactions of
	"avoid offloading".

2016-04-04  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/asyncwait-1.c: Don't XFAIL.
	* testsuite/libgomp.oacc-c-c++-common/routine-1.c: Extend testing
	to cover more parallelism levels, and asynchronous kernel
	launches.
	* testsuite/libgomp.oacc-c-c++-common/data-3.c: Remove OpenACC
	present directives.
	* testsuite/libgomp.oacc-fortran/collapse-5.f90: Remove OpenACC
	copy directives.
	* testsuite/libgomp.oacc-fortran/collapse-6.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/collapse-7.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/collapse-8.f90: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/firstprivate-3.c: Remove
	file.
	* testsuite/libgomp.oacc-c-c++-common/firstprivate-4.c: Remove
	file, moving its content into...
	* testsuite/libgomp.oacc-c-c++-common/firstprivate-1.c: ... this
	file.
	* testsuite/libgomp.oacc-c-c++-common/private-vars-par-gang-1.c:
	Remove file, moving its content into...
	* testsuite/libgomp.oacc-c-c++-common/firstprivate-1.c: ... this
	file.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-4.c: Rename
	file to...
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-clauses.c:
	... this file.  Clean up dg-* directives.
	* testsuite/libgomp.oacc-c-c++-common/loop-auto-1.c: Use
	dg-warning directives instead of specifying the -w compiler
	option.
	* testsuite/libgomp.oacc-c-c++-common/loop-w-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/routine-g-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/routine-w-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/routine-4.c: Change
	parallelism used instead of specifying the -w compiler option.
	* testsuite/libgomp.oacc-fortran/routine-7.f90: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/loop-reduction-gang-np-1.c:
	Merge this file, and...
	* testsuite/libgomp.oacc-c-c++-common/loop-reduction-gv-np-1.c:
	... this file, and...
	* testsuite/libgomp.oacc-c-c++-common/loop-reduction-gw-np-1.c:
	... this file, and...
	* testsuite/libgomp.oacc-c-c++-common/loop-reduction-gwv-np-1.c:
	... this file, and...
	* testsuite/libgomp.oacc-c-c++-common/loop-reduction-gwv-np-2.c:
	... this file, and...
	* testsuite/libgomp.oacc-c-c++-common/loop-reduction-gwv-np-3.c:
	... this file, and...
	* testsuite/libgomp.oacc-c-c++-common/loop-reduction-gwv-np-4.c:
	... this file, and...
	* testsuite/libgomp.oacc-c-c++-common/loop-reduction-vector-p-1.c:
	... this file, and...
	* testsuite/libgomp.oacc-c-c++-common/loop-reduction-vector-p-2.c:
	... this file, and...
	* testsuite/libgomp.oacc-c-c++-common/loop-reduction-worker-p-1.c:
	... this file, and...
	* testsuite/libgomp.oacc-c-c++-common/loop-reduction-wv-p-1.c:
	... this file, and...
	* testsuite/libgomp.oacc-c-c++-common/loop-reduction-wv-p-2.c:
	... this file, and...
	* testsuite/libgomp.oacc-c-c++-common/loop-reduction-wv-p-3.c:
	... this file into...
	* testsuite/libgomp.oacc-c-c++-common/reduction-7.c: ... this new
	file.  Use dg-warning directives instead of specifying the -w
	compiler option.
	* testsuite/libgomp.oacc-c-c++-common/vec-partn-1.c: Merge this
	file, and...
	* testsuite/libgomp.oacc-c-c++-common/vec-partn-2.c: ... this
	file, and...
	* testsuite/libgomp.oacc-c-c++-common/vec-partn-3.c: ... this
	file, and...
	* testsuite/libgomp.oacc-c-c++-common/vec-partn-4.c: ... this
	file, and...
	* testsuite/libgomp.oacc-c-c++-common/vec-partn-5.c: ... this
	file, and...
	* testsuite/libgomp.oacc-c-c++-common/vec-partn-6.c: ... this
	file, and...
	* testsuite/libgomp.oacc-c-c++-common/vec-single-1.c: ... this
	file, and...
	* testsuite/libgomp.oacc-c-c++-common/vec-single-2.c: ... this
	file, and...
	* testsuite/libgomp.oacc-c-c++-common/vec-single-3.c: ... this
	file, and...
	* testsuite/libgomp.oacc-c-c++-common/vec-single-4.c: ... this
	file, and...
	* testsuite/libgomp.oacc-c-c++-common/vec-single-5.c: ... this
	file, and...
	* testsuite/libgomp.oacc-c-c++-common/vec-single-6.c: ... this
	file, and...
	* testsuite/libgomp.oacc-c-c++-common/vector-broadcast.c: ... this
	file, and...
	* testsuite/libgomp.oacc-c-c++-common/worker-partn-1.c: ... this
	file, and...
	* testsuite/libgomp.oacc-c-c++-common/worker-partn-2.c: ... this
	file, and...
	* testsuite/libgomp.oacc-c-c++-common/worker-partn-3.c: ... this
	file, and...
	* testsuite/libgomp.oacc-c-c++-common/worker-partn-4.c: ... this
	file, and...
	* testsuite/libgomp.oacc-c-c++-common/worker-partn-5.c: ... this
	file, and...
	* testsuite/libgomp.oacc-c-c++-common/worker-partn-6.c: ... this
	file, and...
	* testsuite/libgomp.oacc-c-c++-common/worker-partn-7.c: ... this
	file, and...
	* testsuite/libgomp.oacc-c-c++-common/worker-partn-8.c: ... this
	file, and...
	* testsuite/libgomp.oacc-c-c++-common/worker-single-1.c: ... this
	file, and...
	* testsuite/libgomp.oacc-c-c++-common/worker-single-1a.c: ... this
	file, and...
	* testsuite/libgomp.oacc-c-c++-common/worker-single-2.c: ... this
	file, and...
	* testsuite/libgomp.oacc-c-c++-common/worker-single-3.c: ... this
	file, and...
	* testsuite/libgomp.oacc-c-c++-common/worker-single-4.c: ... this
	file, and...
	* testsuite/libgomp.oacc-c-c++-common/worker-single-5.c: ... this
	file, and...
	* testsuite/libgomp.oacc-c-c++-common/worker-single-6.c: ... this
	file, and...
	* testsuite/libgomp.oacc-c-c++-common/mode-transitions.c: ... this
	new file.  Use dg-warning directives instead of specifying the -w
	compiler option.
	* testsuite/libgomp.oacc-c-c++-common/private-vars-local-gang-1.c:
	Merge this file, and...
	* testsuite/libgomp.oacc-c-c++-common/private-vars-local-worker-1.c:
	... this file, and...
	* testsuite/libgomp.oacc-c-c++-common/private-vars-local-worker-2.c:
	... this file, and...
	* testsuite/libgomp.oacc-c-c++-common/private-vars-local-worker-3.c:
	... this file, and...
	* testsuite/libgomp.oacc-c-c++-common/private-vars-local-worker-4.c:
	... this file, and...
	* testsuite/libgomp.oacc-c-c++-common/private-vars-local-worker-5.c:
	... this file, and...
	* testsuite/libgomp.oacc-c-c++-common/private-vars-loop-gang-1.c:
	... this file, and...
	* testsuite/libgomp.oacc-c-c++-common/private-vars-loop-gang-2.c:
	... this file, and...
	* testsuite/libgomp.oacc-c-c++-common/private-vars-loop-gang-3.c:
	... this file, and...
	* testsuite/libgomp.oacc-c-c++-common/private-vars-loop-gang-4.c:
	... this file, and...
	* testsuite/libgomp.oacc-c-c++-common/private-vars-loop-gang-5.c:
	... this file, and...
	* testsuite/libgomp.oacc-c-c++-common/private-vars-loop-gang-6.c:
	... this file, and...
	* testsuite/libgomp.oacc-c-c++-common/private-vars-loop-vector-1.c:
	... this file, and...
	* testsuite/libgomp.oacc-c-c++-common/private-vars-loop-vector-2.c:
	... this file, and...
	* testsuite/libgomp.oacc-c-c++-common/private-vars-loop-worker-1.c:
	... this file, and...
	* testsuite/libgomp.oacc-c-c++-common/private-vars-loop-worker-2.c:
	... this file, and...
	* testsuite/libgomp.oacc-c-c++-common/private-vars-loop-worker-3.c:
	... this file, and...
	* testsuite/libgomp.oacc-c-c++-common/private-vars-loop-worker-4.c:
	... this file, and...
	* testsuite/libgomp.oacc-c-c++-common/private-vars-loop-worker-5.c:
	... this file, and...
	* testsuite/libgomp.oacc-c-c++-common/private-vars-loop-worker-6.c:
	... this file, and...
	* testsuite/libgomp.oacc-c-c++-common/private-vars-loop-worker-7.c:
	... this file, and...
	* testsuite/libgomp.oacc-c-c++-common/private-vars-par-gang-2.c:
	... this file, and...
	* testsuite/libgomp.oacc-c-c++-common/private-vars-par-gang-3.c:
	... this file into...
	* testsuite/libgomp.oacc-c-c++-common/private-variables.c:
	... this new file.  Use dg-warning directives instead of
	specifying the -w compiler option.
	* testsuite/libgomp.oacc-fortran/private-vars-loop-gang-1.f90:
	Merge this file, and...
	* testsuite/libgomp.oacc-fortran/private-vars-loop-gang-2.f90:
	... this file, and...
	* testsuite/libgomp.oacc-fortran/private-vars-loop-gang-3.f90:
	... this file, and...
	* testsuite/libgomp.oacc-fortran/private-vars-loop-gang-6.f90:
	... this file, and...
	* testsuite/libgomp.oacc-fortran/private-vars-loop-vector-1.f90:
	... this file, and...
	* testsuite/libgomp.oacc-fortran/private-vars-loop-vector-2.f90:
	... this file, and...
	* testsuite/libgomp.oacc-fortran/private-vars-loop-worker-1.f90:
	... this file, and...
	* testsuite/libgomp.oacc-fortran/private-vars-loop-worker-2.f90:
	... this file, and...
	* testsuite/libgomp.oacc-fortran/private-vars-loop-worker-3.f90:
	... this file, and...
	* testsuite/libgomp.oacc-fortran/private-vars-loop-worker-4.f90:
	... this file, and...
	* testsuite/libgomp.oacc-fortran/private-vars-loop-worker-5.f90:
	... this file, and...
	* testsuite/libgomp.oacc-fortran/private-vars-loop-worker-6.f90:
	... this file, and...
	* testsuite/libgomp.oacc-fortran/private-vars-loop-worker-7.f90:
	... this file, and...
	* testsuite/libgomp.oacc-fortran/private-vars-par-gang-2.f90:
	... this file into...
	* testsuite/libgomp.oacc-fortran/private-variables.f90: ... this
	new file.  Use dg-warning directives instead of specifying the -w
	compiler option.
	* testsuite/libgomp.oacc-c-c++-common/routine-2.c: Remove file.
	* testsuite/libgomp.oacc-c-c++-common/routine-vec-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/routine-work-1.c: Likewise.
	* testsuite/libgomp.oacc-fortran/update-1-2.f90: Likewise.

2016-03-24  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/par-loop-comb-reduction-2.c:
	Make failure observable.  Add data clause next to parallel
	construct's reduction clause.

2016-03-11  Cesar Philippidis  <cesar@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/vprop.c: New test.

2016-01-22  Nathan Sidwell  <nathan@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/loop-auto-1.c: Adjust
	expected partitioning.

	* testsuite/libgomp.oacc-c-c++-common/atomic_capture-1.c: Don't
	assume atomic op ordering.
	* testsuite/libgomp.oacc-fortran/atomic_capture-1.f90: Likewise.

2016-01-22  James Norris  <jnorris@codesourcery.com>

	* oacc-mem.c (delete_copyout, update_dev_host): Fix device address.
	* testsuite/libgomp.oacc-c-c++-common/update-1.c: Additional tests.
	* testsuite/libgomp.oacc-c-c++-common/update-1-2.c: Likewise.
	* testsuite/libgomp.oacc-fortran/update-1.f90: New file.
	* testsuite/libgomp.oacc-fortran/update-1-2.f90: Likewise.

2016-01-22  Nathan Sidwell  <nathan@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/routine-1.c: Specify vector.
	* testsuite/libgomp.oacc-c-c++-common/routine-2.c: Likewise.

2016-01-21  Thomas Schwinge  <thomas@codesourcery.com>

	* target.c (GOMP_offload_register_ver)
	(GOMP_offload_unregister_ver, gomp_init_device)
	(gomp_unload_device, gomp_offload_target_available_p): Handle and
	document "avoid offloading" ("host_table == NULL").
	(resolve_device): Document "avoid offloading".
	* oacc-init.c (resolve_device): Likewise.
	* libgomp.texi (Enabling OpenACC): Likewise.
	* testsuite/libgomp.oacc-c-c++-common/avoid-offloading-1.c: New
	file.
	* testsuite/libgomp.oacc-c-c++-common/avoid-offloading-2.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/avoid-offloading-3.c:
	Likewise.
	* testsuite/libgomp.oacc-fortran/avoid-offloading-1.f: Likewise.
	* testsuite/libgomp.oacc-fortran/avoid-offloading-2.f: Likewise.
	* testsuite/libgomp.oacc-fortran/avoid-offloading-3.f: Likewise.
	* testsuite/libgomp.oacc-c++/non-scalar-data.C: Set
	"-foffload-force".
	* testsuite/libgomp.oacc-c-c++-common/abort-3.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/abort-4.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/default-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/deviceptr-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-alias-ipa-pta-2.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-alias-ipa-pta-3.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-alias-ipa-pta.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-empty.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-2.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-5.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-6.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-collapse.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-private-vars-local-worker-1.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-private-vars-local-worker-2.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-private-vars-local-worker-3.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-private-vars-local-worker-4.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-private-vars-local-worker-5.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-private-vars-loop-gang-1.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-private-vars-loop-gang-2.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-private-vars-loop-gang-3.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-private-vars-loop-gang-4.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-private-vars-loop-gang-5.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-private-vars-loop-gang-6.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-private-vars-loop-vector-1.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-private-vars-loop-vector-2.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-private-vars-loop-worker-1.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-private-vars-loop-worker-2.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-private-vars-loop-worker-3.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-private-vars-loop-worker-4.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-private-vars-loop-worker-5.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-private-vars-loop-worker-6.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-private-vars-loop-worker-7.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-reduction-1.c:
	Likewise.
	* testsuite/libgomp.oacc-fortran/default-1.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/if-1.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/kernels-acc-loop-reduction-2.f90:
	Likewise.
	* testsuite/libgomp.oacc-fortran/kernels-acc-loop-reduction.f90:
	Likewise.
	* testsuite/libgomp.oacc-fortran/kernels-collapse-3.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/kernels-collapse-4.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/kernels-private-vars-loop-gang-2.f90:
	Likewise.
	* testsuite/libgomp.oacc-fortran/kernels-private-vars-loop-gang-3.f90:
	Likewise.
	* testsuite/libgomp.oacc-fortran/kernels-private-vars-loop-gang-6.f90:
	Likewise.
	* testsuite/libgomp.oacc-fortran/kernels-private-vars-loop-vector-1.f90:
	Likewise.
	* testsuite/libgomp.oacc-fortran/kernels-private-vars-loop-vector-2.f90:
	Likewise.
	* testsuite/libgomp.oacc-fortran/kernels-private-vars-loop-worker-1.f90:
	Likewise.
	* testsuite/libgomp.oacc-fortran/kernels-private-vars-loop-worker-2.f90:
	Likewise.
	* testsuite/libgomp.oacc-fortran/kernels-private-vars-loop-worker-3.f90:
	Likewise.
	* testsuite/libgomp.oacc-fortran/kernels-private-vars-loop-worker-4.f90:
	Likewise.
	* testsuite/libgomp.oacc-fortran/kernels-private-vars-loop-worker-5.f90:
	Likewise.
	* testsuite/libgomp.oacc-fortran/kernels-private-vars-loop-worker-6.f90:
	Likewise.
	* testsuite/libgomp.oacc-fortran/kernels-private-vars-loop-worker-7.f90:
	Likewise.
	* testsuite/libgomp.oacc-fortran/kernels-reduction-1.f90:
	Likewise.

	* testsuite/libgomp.oacc-c-c++-common/asyncwait-1.c: Set
	"-ftree-parallelize-loops=32".
	* testsuite/libgomp.oacc-c-c++-common/combined-directives-1.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/default-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/deviceptr-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/host_data-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/if-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-alias-ipa-pta-2.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-alias-ipa-pta-3.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-alias-ipa-pta.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/nested-2.c: Likewise.
	* testsuite/libgomp.oacc-fortran/asyncwait-1.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/asyncwait-2.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/asyncwait-3.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/combined-directives-1.f90:
	Likewise.
	* testsuite/libgomp.oacc-fortran/default-1.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/deviceptr-1.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/if-1.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/kernels-acc-loop-reduction-2.f90:
	Likewise.
	* testsuite/libgomp.oacc-fortran/kernels-acc-loop-reduction.f90:
	Likewise.
	* testsuite/libgomp.oacc-fortran/kernels-map-1.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/non-scalar-data.f90: Likewise.

2016-01-20  Cesar Philippidis  <cesar@codesourcery.com>

	* testsuite/libgomp.oacc-c++/non-scalar-data.C: New test.

2016-01-20  Tom de Vries  <tom@codesourcery.com>

	* testsuite/libgomp.oacc-fortran/kernels-acc-loop-reduction-2.f90: New test.
	* testsuite/libgomp.oacc-fortran/kernels-acc-loop-reduction.f90: New test.

2016-01-15  Cesar Philippidis  <cesar@codesourcery.com>

	Backport from trunk:
	2016-01-15  Cesar Philippidis  <cesar@codesourcery.com>

	* testsuite/libgomp.oacc-fortran/kernels-data.f90: New test.

2016-01-12  James Norris  <jnorris@codesourcery.com>

	Backport from trunk:
	2016-01-12  James Norris  <jnorris@codesourcery.com>
	* libgomp.texi: Updates for OpenACC.

2016-01-11  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/firstprivate-2.c: Remove
	XFAIL marker.

2016-01-07  Cesar Philippidis  <cesar@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/reduction-6.c: New test.
	* testsuite/libgomp.oacc-fortran/reduction-7.f90: Add a test with
	an explicitly private reduction variable.

2016-01-07  James Norris  <jnorris@codesourcery.com>
	    Alexander Monakov <amonakov@ispras.ru>

	* plugin/plugin-nvptx.c (link_ptx): Remove link option.

2016-01-07  James Norris  <jnorris@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/declare-4.c: Fix test.

2016-01-06  Cesar Philippidis  <cesar@codesourcery.com>

	* testsuite/libgomp.oacc-fortran/pr68813.f90: New test.
	* testsuite/libgomp.oacc-fortran/reduction-7.f90: New test.

2016-01-05  Nathan Sidwell  <nathan@codesourcery.com>

	* plugin/plugin-nvptx.c (nvptx_exec): Read GOMP_OPENACC_DIM.
	* testsuite/libgomp.oacc-c-c++-common/loop-default-compile.c: New.
	* testsuite/libgomp.oacc-c-c++-common/loop-default-runtime.c: New.
	* testsuite/libgomp.oacc-c-c++-common/loop-default.h: New.
	* testsuite/libgomp.oacc-c-c++-common/loop-warn-1.c: New.
	* testsuite/libgomp.oacc-c-c++-common/loop-auto-1.c: Add -w.
	* testsuite/libgomp.oacc-c-c++-common/loop-g-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/loop-g-2.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/loop-red-g-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/loop-red-w-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/loop-red-w-2.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/loop-reduction-gang-np-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/loop-reduction-gv-np-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/loop-reduction-gw-np-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/loop-reduction-vector-p-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/loop-reduction-worker-p-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/loop-w-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/par-reduction-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/par-reduction-2.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/parallel-dims.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/parallel-reduction.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/private-vars-local-gang-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/private-vars-loop-gang-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/private-vars-loop-gang-2.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/private-vars-loop-gang-3.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/private-vars-loop-gang-4.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/private-vars-loop-gang-5.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/private-vars-loop-gang-6.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/private-vars-loop-worker-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/private-vars-par-gang-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/private-vars-par-gang-2.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/private-vars-par-gang-3.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/reduction-5.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/routine-4.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/routine-g-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/routine-w-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/routine-work-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/vec-single-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/vec-single-2.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/vec-single-3.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/vec-single-4.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/vec-single-5.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/vec-single-6.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/worker-partn-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/worker-partn-4.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/worker-partn-5.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/worker-single-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/worker-single-1a.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/worker-single-2.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/worker-single-3.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/worker-single-4.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/worker-single-5.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/worker-single-6.c: Likewise.
	* testsuite/libgomp.oacc-fortran/parallel-reduction.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/private-vars-loop-gang-1.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/private-vars-loop-gang-2.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/private-vars-loop-gang-3.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/private-vars-loop-gang-6.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/private-vars-loop-worker-1.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/private-vars-par-gang-2.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/reduction-1.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/reduction-5.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/reduction-6.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/routine-7.f90: Likewise.

2016-01-04  Nathan Sidwell  <nathan@codesourcery.com>

	* openacc.c (acc_on_device): Add routine pragma for C++ wrapper.
	* testsuite/libgomp.oacc-c-c++-common/acc-on-device-2.c: New.

2015-12-31  Nathan Sidwell  <nathan@acm.org>

	* testsuite/libgomp.oacc-c-c++-common/loop-red-w-2.c: Correct
	dg-additional-options syntax.
	* testsuite/libgomp.oacc-c-c++-common/loop-wv-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/loop-gwv-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/routine-v-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/loop-red-gwv-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/routine-gwv-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/routine-g-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/loop-v-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/loop-auto-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/routine-w-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/routine-wv-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/loop-red-v-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/loop-g-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/loop-w-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/loop-red-wv-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/loop-red-v-2.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/loop-g-2.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/loop-red-g-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/loop-red-w-1.c: Likewise.

2015-12-14  James Norris  <jnorris@codesourcery.com>

	* plugin/plugin-nvptx.c (struct map): Removed.
	(map_init, map_pop): Remove use of struct map. (map_push):
	Likewise and change argument list.
	* testsuite/libgomp.oacc-c-c++-common/mapping-1.c: New

2015-12-09  James Norris  <jnorris@codesourcery.com>

	* oacc-parallel.c (handle_ftn_pointers): New function.
	(GOACC_parallel_keyed, GOACC_data_start): Factor out Fortran pointer
	handling.
	* testsuite/libgomp.oacc-fortran/declare-1.f90: Add comment.
	* testsuite/libgomp.oacc-fortran/deviceptr-1.f90: Fix comment.

2015-12-08  James Norris  <jnorris@codesourcery.com>

	* testsuite/libgomp.oacc-fortran/kernels-map-1.f90: Add new test.

2015-12-08  Thomas Schwinge  <thomas@codesourcery.com>
	    James Norris  <jnorris@codesourcery.com>

	* libgomp.texi (CUDA Streams Usage): New chapter.

2015-12-08  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/routine-bind-nohost-1.c: New
	file.
	* testsuite/libgomp.oacc-c-c++-common/routine-nohost-1.c:
	Likewise.
	* testsuite/libgomp.oacc-fortran/routine-6.f90: XFAIL.

2015-12-06  James Norris  <jnorris@codesourcery.com>

	* oacc-parallel.c (GOACC_parallel_keyed, GOACC_data_start):
	Handle Fortran deviceptr clause combination.
	* testsuite/libgomp.oacc-fortran/deviceptr-1.f90: New test.
	* testsuite/libgomp.oacc-fortran/declare-1.f90: Remove erroneous test.

2015-12-05  Chung-Lin Tang  <cltang@codesourcery.com>

	* oacc-plugin.h (GOMP_PLUGIN_async_unmap_vars): Add int parameter.
	* oacc-plugin.c (GOMP_PLUGIN_async_unmap_vars): Add 'int async'
	parameter, use to set async stream around call to gomp_unmap_vars,
	call gomp_unmap_vars() with 'do_copyfrom' set to true.
	* plugin/plugin-nvptx.c (struct ptx_event): Add 'int val' field.
	(event_gc): Adjust event handling loop, collect PTX_EVT_ASYNC_CLEANUP
	events and call GOMP_PLUGIN_async_unmap_vars() for each of them.
	(event_add): Add int parameter, initialize 'val' field when
	adding new ptx_event struct.
	(nvptx_evec): Adjust event_add() call arguments.
	(nvptx_host2dev): Likewise.
	(nvptx_dev2host): Likewise.
	(nvptx_wait_async): Likewise.
	(nvptx_wait_all_async): Likewise.
	(GOMP_OFFLOAD_openacc_register_async_cleanup): Add async parameter,
	pass to event_add() call.
	* oacc-host.c (host_openacc_register_async_cleanup): Add 'int async'
	parameter.
	* oacc-mem.c (gomp_acc_remove_pointer): Adjust async case to
	call openacc.register_async_cleanup_func() hook.
	* oacc-parallel.c (GOACC_parallel_keyed): Likewise.
	* target.c (gomp_copy_from_async): Delete function.
	(gomp_map_vars): Remove async_refcount.
	(gomp_unmap_vars): Likewise.
	(gomp_load_image_to_device): Likewise.
	(omp_target_associate_ptr): Likewise.
	* libgomp.h (struct splay_tree_key_s): Remove async_refcount.
	(acc_dispatch_t.register_async_cleanup_func): Add int parameter.
	(gomp_copy_from_async): Remove.

2015-12-04  Cesar Philippidis  <cesar@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/{kernels-loop-4.c,
	kernels-private-vars-local-worker-1.c,
	kernels-private-vars-local-worker-2.c,
	kernels-private-vars-local-worker-3.c,
	kernels-private-vars-local-worker-4.c,
	kernels-private-vars-local-worker-5.c,
	kernels-private-vars-loop-gang-1.c,
	kernels-private-vars-loop-gang-2.c,
	kernels-private-vars-loop-gang-3.c,
	kernels-private-vars-loop-gang-4.c,
	kernels-private-vars-loop-gang-5.c,
	kernels-private-vars-loop-gang-6.c,
	kernels-private-vars-loop-vector-1.c,
	kernels-private-vars-loop-vector-2.c,
	kernels-private-vars-loop-worker-1.c,
	kernels-private-vars-loop-worker-2.c,
	kernels-private-vars-loop-worker-3.c,
	kernels-private-vars-loop-worker-4.c,
	kernels-private-vars-loop-worker-5.c,
	kernels-private-vars-loop-worker-6.c,
	kernels-private-vars-loop-worker-7.c,
	kernels-reduction-1.c}: New test.
	* testsuite/libgomp.oacc-c-c++-common/parallel-loop-1.c: Remove xfail,
	add tile clause test define PK as parallel.
	* testsuite/libgomp.oacc-c-c++-common/parallel-loop-1.h: Add tile
	clause test.
	* testsuite/libgomp.oacc-c-c++-common/parallel-loop-2.h: Replace
	the parallel construct text with a PK macro.
	* testsuite/libgomp.oacc-fortran/{kernels-collapse-3.f90,
	kernels-collapse-4.f90, kernels-loop-1.f90, kernels-map-1.f90,
	kernels-private-vars-loop-gang-1.f90,
	kernels-private-vars-loop-gang-2.f90,
	kernels-private-vars-loop-gang-3.f90,
	kernels-private-vars-loop-gang-6.f90,
	kernels-private-vars-loop-vector-1.f90,
	kernels-private-vars-loop-vector-2.f90,
	kernels-private-vars-loop-worker-1.f90,
	kernels-private-vars-loop-worker-2.f90,
	kernels-private-vars-loop-worker-3.f90,
	kernels-private-vars-loop-worker-4.f90,
	kernels-private-vars-loop-worker-5.f90,
	kernels-private-vars-loop-worker-6.f90,
	kernels-private-vars-loop-worker-7.f90,
	kernels-reduction-1.f90, parallel-loop-1.f90,
	private-vars-loop-gang-1.f90, private-vars-loop-gang-2.f90,
	private-vars-loop-gang-3.f90, private-vars-loop-gang-6.f90,
	private-vars-loop-vector-1.f90, private-vars-loop-vector-2.f90,
	private-vars-loop-worker-1.f90, private-vars-loop-worker-2.f90,
	private-vars-loop-worker-3.f90, private-vars-loop-worker-4.f90,
	private-vars-loop-worker-5.f90, private-vars-loop-worker-6.f90,
	private-vars-loop-worker-7.f90}: New tests.

2015-11-16  Nathan Sidwell  <nathan@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/reduction-cplx-dbl.c: Add
	worker & gang cases.
	* testsuite/libgomp.oacc-c-c++-common/reduction-cplx-flt.c: Likewise.

2015-11-13  Nathan Sidwell  <nathan@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/reduction-cplx-dbl.c: New.
	* testsuite/libgomp.oacc-c-c++-common/reduction-cplx-flt.c: New.

2015-11-12  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/firstprivate-2.c: Rename
	file to...
	* testsuite/libgomp.oacc-c-c++-common/firstprivate-4.c: ... this.

2015-11-11  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/firstprivate-1.c: Rename
	file to...
	* testsuite/libgomp.oacc-c-c++-common/firstprivate-3.c: ... this
	* testsuite/libgomp.oacc-c-c++-common/routine-wv-1.c: Rename file
	to...
	* testsuite/libgomp.oacc-c-c++-common/routine-wv-2.c: ... this.

2015-11-10  Nathan Sidwell  <nathan@codesourcery.com>

	* testsuite/libgomp.oacc-fortran/parallel-reduction.f90: Fix data
	missing data clause.
	* testsuite/libgomp.oacc-c-c++-common/parallel-reduction.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/par-reduction-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/par-loop-comb-reduction-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/par-reduction-2.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/par-loop-comb-reduction-3.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/par-loop-comb-reduction-4.c: Likewise.

2015-11-06  Tom de Vries  <tom@codesourcery.com>

	* testsuite/libgomp.oacc-fortran/kernels-loop-nest-independent.f95: New
	test.

2015-11-06  Tom de Vries  <tom@codesourcery.com>

	Revert:
	2015-07-14  Tom de Vries  <tom@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/kernels-independent.c: New test.

2015-11-06  Tom de Vries  <tom@codesourcery.com>

	revert:
	PR tree-optimization/65419
	2015-05-28  Tom de Vries  <tom@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/goacc-data-end.c: New test.

2015-10-30  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/acc-on-device.c: Restore
	dg-do compile directive.

	* testsuite/libgomp.oacc-c-c++-common/acc-on-device.c:
	De-duplicate file.

2015-10-29  Nathan Sidwell  <nathan@codesourcery.com>

	* openacc.h (enum acc_device_t): Ensure layout compatibility.
	(acc_on_device): Declare compatible with builtin and provide C++
	wrapper.
	* oacc-init.c (acc_on_device): Change arg type.
	* config/nvptx/oacc-init.c (acc_on_device): Likewise.
	* testsuite/libgomp.oacc-c-c++-common/acc-on-device.c: New.

2015-10-28  Cesar Philippidis  <cesar@codesourcery.com>

	* testsuite/libgomp.oacc-fortran/combined-directive-1.f90: Rename to...
	* testsuite/libgomp.oacc-fortran/combined-directives-1.f90: ... this.

2015-10-27  Cesar Philippidis  <cesar@codesourcery.com>

	* testsuite/libgomp.oacc-fortran/combdir-1.f90: Rename to ...
	* testsuite/libgomp.oacc-fortran/combined-directive-1.f90: ... this.
	Add a description of the test at the top of the file.

2015-10-20  Nathan Sidwell  <nathan@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/loop-g-1.c: New.
	* testsuite/libgomp.oacc-c-c++-common/loop-g-2.c: New.
	* testsuite/libgomp.oacc-c-c++-common/loop-gwv-1.c: New.
	* testsuite/libgomp.oacc-c-c++-common/loop-v-1.c: New.
	* testsuite/libgomp.oacc-c-c++-common/loop-w-1.c: New.
	* testsuite/libgomp.oacc-c-c++-common/loop-wv-1.c: New.

2015-10-19  Nathan Sidwell  <nathan@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/collapse-2.c: Force
	serialization.

2015-10-14  Tom de Vries  <tom@codesourcery.com>

	backport from trunk:
	PR tree-optimization/67476
	2015-10-13  Tom de Vries  <tom@codesourcery.com>

	* testsuite/libgomp.c/autopar-3.c: New test.
	* testsuite/libgomp.c/autopar-4.c: New test.
	* testsuite/libgomp.c/autopar-5.c: New test.
	* testsuite/libgomp.c/autopar-6.c: New test.
	* testsuite/libgomp.c/autopar-7.c: New test.
	* testsuite/libgomp.c/autopar-8.c: New test.

2015-10-12  James Norris  <jnorris@codesourcery.com>

	Backport from trunk:
	2015-10-12  James Norris  <jnorris@codesourcery.com>
	* testsuite/libgomp.oacc-c-c++-common/vector-loop.c: Fix loop
	initializer.

2015-10-12  Tom de Vries  <tom@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-2.c: New test.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-3.c: New test.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-4.c: New test.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-5.c: New test.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-6.c: New test.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq.c: New test.

2015-10-08  Tom de Vries  <tom@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-collapse.c: New test.

2015-09-29  James Norris  <jnorris@codesourcery.com>

	* testsuite/libgomp.oacc-fortran/routine-9.f90: New test.

2015-09-29  Nathan Sidwell  <nathan@codesourcery.com>

	* oacc-init.c (acc_on_device): Compile with optimization.
	* config/nvptx/oacc-init.c (acc_on_device): Compile with optimization.

2015-09-23  Cesar Philippidis  <cesar@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/gang-static-2.c: Test if
	static gang expressions containing variables work.
	* testsuite/libgomp.oacc-fortran/gang-static-1.f90: Likewise.

2015-09-23  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.oacc-fortran/reduction-5.f90: Remove XFAIL of
	execution test for -O0.

2015-09-22  Cesar Philippidis  <cesar@codesourcery.com>

	* testsuite/libgomp.oacc-fortran/dummy-array.f90: New test.
	* testsuite/libgomp.oacc-fortran/reference-reductions.f90: New test.

2015-09-18  Thomas Schwinge  <thomas@codesourcery.com>

	* libgomp.h (struct splay_tree_key_s): Remove dealloc_host member.
	Adjust all users.

	* testsuite/libgomp.oacc-fortran/reduction-5.f90: Extend.  XFAIL
	execution test for -O0.

2015-09-15  Nathan Sidwell  <nathan@codesourcery.com>

	* oacc-parallel.c (GOACC_parallel_keyed): Use GOMP_DIM constants.

2015-09-14  James Norris  <jnorris@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/declare-4.c: Update test.

2015-09-11  Cesar Philippidis  <cesar@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/parallel-reduction.c: Enclose
	one parallel reduction inside a data region.

2015-09-11  James Norris  <jnorris@codesourcery.com>

	* testsuite/libgomp.oacc-fortran/lib-12.f90: Update test.
	* testsuite/libgomp.oacc-fortran/lib-13.f90: Likewise.

2015-09-10  Nathan Sidwell  <nathan@codesourcery.com>

	* plutin/plugin-nvptx.c (ARRAYSIZE): Delete.
	(cuda_errlist): Delete.
	(cuda_error): Use cuGetErrorString.

2015-09-10  Nathan Sidwell  <nathan@codesourcery.com>

	* oacc-parallel.c (alloc_ganglocal_addrs): Delete.
	(GOACC_parallel_keyed): Do not call it.
	(GOACC_update): Remove GOMP_MAP_FORCE_TO_GANGLOCAL case.
	* target.c (gomp_map_vars): Remove GOMP_MAP_FORCE_TO_GANGLOCAL
	handling.

2015-09-02  Cesar Philippidis  <cesar@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/loop-reduction-gwv-np-2.c:
	Remove xfail.
	* testsuite/libgomp.oacc-c-c++-common/loop-reduction-gwv-np-3.c:
	Likwise.
	* testsuite/libgomp.oacc-c-c++-common/loop-reduction-gwv-np-4.c:
	Remove xfail.
	* testsuite/libgomp.oacc-c-c++-common/loop-reduction-vector-p-2.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/par-loop-comb-reduction-3.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/par-loop-comb-reduction-4.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/loop-reduction-wv-p-3.c:
	Likewise.  Initialize res because it's private.

2015-08-31  Nathan Sidwell  <nathan@codesourcery.com>

	* oacc-parallel.c (GOACC_register_static): Remove superfluous NULL
	check.

	* oacc-parallel.c (__goacc_host_ganglocal_ptr): Delete.
	(GOACC_get_ganglocal_ptr): Delete.
	(alloc_host_shared_mem, free_host_shared_mem): Delete.
	(GOACC_parallel_keyed): Remove shared_size param.
	(GOACC_parallel): Likewise.
	* libgomp_g.h (GOACC_parallel_keyed): Adjust prototype.
	* plugin/plugin-nvptx.c (nvptx_exec): Lose shared_size parameter.
	(GOMP_OFFLOAD_openacc_parallel): Likewise.
	* libgomp.map (GOACC_get_ganglocal_ptr): Remove.
	* libgomp.h (struct acc_dispatch_t): Adjust exec_func prototype.
	* oacc-host.c (host_openacc_exec): Lose shared_size parameter.

2015-08-28  Cesar Philippidis  <cesar@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/routine-4.c: Fix calls to
	acc routines.
	* testsuite/libgomp.oacc-fortran/routine-7.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/vector-routine.f90: Likewise.

2015-08-26  Cesar Philippidis  <cesar@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/reduction.h: New file.
	* testsuite/libgomp.oacc-c-c++-common/reduction-1.c: Update to check
	worker and vector reductions.
	* testsuite/libgomp.oacc-c-c++-common/reduction-2.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/reduction-3.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/reduction-4.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/reduction-5.c: Likewise.
	* testsuite/libgomp.oacc-fortran/reduction-1.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/reduction-2.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/reduction-3.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/reduction-4.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/reduction-5.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/reduction-6.f90: Likewise.

2015-08-25  Joseph Myers  <joseph@codesourcery.com>

	* plugin/configfrag.ac: Don't test for fnmatch.h or fnmatch.
	* configure, config.h.in: Regenerate.
	* target.c [PLUGIN_SUPPORT]: Don't include <fnmatch.h>.
	(offload_target_to_plugin_name): Use strstr and strncmp instead of
	fnmatch.

2015-08-24  Nathan Sidwell  <nathan@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/routine-wv-1.c: New.

2015-08-22  Nathan Sidwell  <nathan@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/routine-vec-1.c: New.
	* testsuite/libgomp.oacc-c-c++-common/routine-work-1.c: New.

2015-08-20  Thomas Schwinge  <thomas@codesourcery.com>
	    Joseph Myers  <joseph@codesourcery.com>

	* plugin/configfrag.ac (fnmatch.h): Check for header.
	(fnmatch): Check for function.
	(tgt_name): Do not set.
	(offload_targets): Separate with colons not commas.
	* config.h.in, configure: Regenerate.
	* env.c (initialize_env): Make static.  Remove TODO.
	* libgomp.h (gomp_offload_target_available_p): New prototype.
	* libgomp.map (GOACC_2.0.GOMP_4_BRANCH): Add
	GOMP_set_offload_targets.
	(INTERNAL): Remove.
	* libgomp_g.h (GOMP_set_offload_targets): New prototype.
	* oacc-init.c (resolve_device): Do not handle acc_device_host.
	Add comments.
	* target.c: Include <fnmatch.h>.
	(resolve_device): Use host fallback when offload data not
	available.
	(gomp_offload_target_available_p, offload_target_to_plugin_name)
	(gomp_offload_targets, gomp_offload_targets_init)
	(GOMP_set_offload_targets, gomp_plugin_prefix)
	(gomp_plugin_suffix): New.
	(gomp_load_plugin_for_device): Add gomp_debug call.
	(gomp_target_init): Usegomp_offload_targets instead of
	OFFLOAD_TARGETS.  Handle and rewrie colon-separated string.
	* testsuite/lib/libgomp.exp: Expect offload targets to be
	colon-separated.  Adjust matching of offload targets.  Don't
	generate constructor here.
	(libgomp_target_compile): Use GCC_UNDER_TEST.
	(check_effective_target_openacc_nvidia_accel_supported)
	(check_effective_target_openacc_host_selected): Adjust checks of
	offload target names.
	* testsuite/libgomp.c++/c++.exp: Do not set
	HAVE_SET_GXX_UNDER_TEST or GXX_UNDER_TEST.
	* testsuite/libgomp.c/c.exp: Do not append to
	libgomp_compile_options,
	* testsuite/libgomp.fortran/fortran.exp: Do not set
	GFORTRAN_UNDER_TEST or libgomp_compile_options.
	* testsuite/libgomp.graphite/graphite.exp: Do not append to
	libgomp_compile_options.
	* testsuite/libgomp.oacc-c++/c++.exp: Set SAVE_GCC_UNDER_TEST and
	GCC_UNDER_TEST.  Do not set HAVE_SET_GXX_UNDER_TEST and
	GXX_UNDER_TEST.  Do not append to ALWAYS_CFLAGS.  Adjust set of
	offload targets.  Use -foffload=.
	* testsuite/libgomp.oacc-c/c.exp: Do not append to
	libgomp_compile_options or ALWAYS_CFLAGS.  Adjust set of offload
	targets.  Use -foffload=.
	* testsuite/libgomp.oacc-fortran/fortran.exp: Do not set
	GFORTRAN_UNDER_TEST or append to libgomp_compile_options.  Do not
	append to ALWAYS_CFLAGS.  Adjust set of offload targets.  Use
	-foffload=.

2015-08-18  James Norris  <jnorris@codesourcery.com>

	* testsuite/libgomp.oacc-c++/declare-1.C: Update.
	* testsuite/libgomp.oacc-c-c++-common/default-1: Additional testing.
	* testsuite/libgomp.oacc-fortran/declare-1.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/default-1.f90: Likewise.

2015-08-17  Nathan Sidwell  <nathan@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/routine-1.c: Avoid
	uninteresting warning.
	* testsuite/libgomp.oacc-c-c++-common/routine-1.c: Likewise.

2015-08-17  Nathan Sidwell  <nathan@codesourcery.com>

	* testsuite/libgomp.c-c++-common/routine-2.c: Insert declaration.

2015-08-10  Thomas Schwinge  <thomas@codesourcery.com>

	* config/nvptx/critical.c: New file, replacing empty file.
	* config/nvptx/oacc-init.c: Likewise.
	* config/nvptx/openacc.f90: New file.

	Backport trunk r226760:

	2015-08-10  Thomas Schwinge  <thomas@codesourcery.com>
		    Jakub Jelinek  <jakub@redhat.com>

	* config/nvptx/affinity.c: New file.
	* config/nvptx/alloc.c: Likewise.
	* config/nvptx/bar.c: Likewise.
	* config/nvptx/barrier.c: Likewise.
	* config/nvptx/critical.c: Likewise.
	* config/nvptx/env.c: Likewise.
	* config/nvptx/error.c: Likewise.
	* config/nvptx/fortran.c: Likewise.
	* config/nvptx/iter.c: Likewise.
	* config/nvptx/iter_ull.c: Likewise.
	* config/nvptx/libgomp-plugin.c: Likewise.
	* config/nvptx/lock.c: Likewise.
	* config/nvptx/loop.c: Likewise.
	* config/nvptx/loop_ull.c: Likewise.
	* config/nvptx/mutex.c: Likewise.
	* config/nvptx/oacc-async.c: Likewise.
	* config/nvptx/oacc-cuda.c: Likewise.
	* config/nvptx/oacc-host.c: Likewise.
	* config/nvptx/oacc-init.c: Likewise.
	* config/nvptx/oacc-mem.c: Likewise.
	* config/nvptx/oacc-parallel.c: Likewise.
	* config/nvptx/oacc-plugin.c: Likewise.
	* config/nvptx/omp-lock.h: Likewise.
	* config/nvptx/ordered.c: Likewise.
	* config/nvptx/parallel.c: Likewise.
	* config/nvptx/proc.c: Likewise.
	* config/nvptx/ptrlock.c: Likewise.
	* config/nvptx/sections.c: Likewise.
	* config/nvptx/sem.c: Likewise.
	* config/nvptx/single.c: Likewise.
	* config/nvptx/splay-tree.c: Likewise.
	* config/nvptx/target.c: Likewise.
	* config/nvptx/task.c: Likewise.
	* config/nvptx/team.c: Likewise.
	* config/nvptx/time.c: Likewise.
	* config/nvptx/work.c: Likewise.
	* configure.ac: Don't probe pthreads support for host nvptx*-*-*.
	* configure: Regenerate.
	* configure.tgt (config_path): Set to "nvptx" for target
	nvptx*-*-*.

2015-08-04  Nathan Sidwell  <nathan@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/routine-1.c: Add warning.
	* testsuite/libgomp.oacc-c-c++-common/routine-2.c: Add warning.

2015-08-03  Nathan Sidwell  <nathan@codesourcery.com>

	* plugin/plugin-nvptx.c: Don't include dlfcn.h.
	(cuda_errlist): Constify.
	(errmsg):  Move into ...
	(cuda_error): ... here.  Make smaller.
	(_XSTR, _STR): Delete.
	(cuda_synames): Delete.
	(verify_device_library): Delete.
	(nvptx_init): Don't call it.

2015-08-03  Nathan Sidwell  <nathan@codesourcery.com>

	* testuite/libgomp.oacc-c-c++-common/gang-static-2.c: Use asm insert.

2015-08-01  Nathan Sidwell  <nathan@codesourcery.com>

	* openacc.h (acc_on_device): Take int and explain why.
	* oacc-init.c (acc_on_device): Likewise.

2015-08-01  Nathan Sidwell  <nathan@codesourcery.com>

	* openacc.h: Note why device 3 is missing.
	* openacc.f90: Likewise.
	* openacc_lib.h: Likewise.

2015-08-01  Nathan Sidwell  <nathan@codesourcery.com>

	* plugin/plugin-nvptx.c (GOMP_OFFLOAD_load_image_ver): Rename to ...
	(GOMP_OFFLOAD_load_image): ... here.  Swap version and ord args.
	Adjust version check and mesage.
	(GOMP_OFFLOAD_unload_image_ver): Rename to ...
	(GOMP_OFFLOAD_unload_image): ... here.  Swap version and ord args.
	* oacc-host.c: Include gomp-constants.h.
	(host_version): New.
	(host_load_image, host_unload_image): Add version arg.
	(host_dispatch): Adjust.
	* target.c (gomp_load_image_to_device): Swap version and devicep
	args. Adjust plugin load calling.  Adjust all callers.
	* target.c (gomp_unload_image_from_device): Swap version and devicep
	args. Adjust plugin unload calling. Adjust all callers.
	(load_plugin_for_device): Always look for version function and
	check it.  Adjust load and unload call lookup.
	* libgomp.h: Adjustt load and unload plugin fields.

2015-07-31  Thomas Schwinge  <thomas@codesourcery.com>

	* libgomp-plugin.h (enum offload_target_type): Remove
	OFFLOAD_TARGET_TYPE_HOST_NONSHM.
	* openacc.f90 (openacc_kinds): Remove acc_device_host_nonshm.
	* openacc.h (enum acc_device_t): Likewise.
	* openacc_lib.h: Likewise.
	* oacc-parallel.c (GOACC_parallel_keyed): Don't handle it.
	* oacc-init.c (name_of_acc_device_t): Likewise.
	(acc_on_device): Just use __builtin_acc_on_device.
	* testsuite/libgomp.oacc-c-c++-common/if-1.c: Don't forbit usage
	of acc_on_device builtin.
	* plugin/plugin-host.h: Remove file.
	* plugin/plugin-host.c: Likewise, but salvage some content into...
	* oacc-host.c: ... this file.
	* plugin/Makefrag.am: Don't build libgomp-plugin-host_nonshm.la.
	* plugin/configfrag.ac (offload_targets): Don't add host_nonshm.
	* Makefile.in: Regenerate.
	* configure: Likewise.
	* testsuite/lib/libgomp.exp
	(check_effective_target_openacc_host_nonshm_selected): Remove.
	(libgomp_init): Don't handle ACC_DEVICE_TYPE=host_nonshm.
	* testsuite/libgomp.oacc-c++/c++.exp: Likewise.
	* testsuite/libgomp.oacc-c/c.exp: Likewise.
	* testsuite/libgomp.oacc-fortran/fortran.exp: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/acc_on_device-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/firstprivate-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/private-vars-local-gang-1.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/private-vars-par-gang-2.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/worker-single-6.c: Likewise.
	* testsuite/libgomp.oacc-fortran/acc_on_device-1-1.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/acc_on_device-1-2.f: Likewise.
	* testsuite/libgomp.oacc-fortran/acc_on_device-1-3.f: Likewise.
	* testsuite/libgomp.oacc-fortran/data-2.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/private-vars-par-gang-2.f90:
	Likewise.

2015-07-29  Nathan Sidwell  <nathan@codesourcery.com>

	* plugin/plugin-nvptx.c (struct targ_ptx_obj): New.
	(struct nvptx_tdata): Move earlier, adjust.
	(link_ptx): Take targ_ptx_obj array and adjust.
	(GOMP_OFFLOAD_load_image_ver): Adjust link_ptx call.
	
2015-07-29  Nathan Sidwell  <nathan@codesourcery.com>

	* plugin/plugin-nvptx.c (nvptx_wait): Add debug print.
	* oacc-parallel.c (GOACC_parallel_keyed): Process separate ASYNC
	and WAIT tags.
	(GOACC_parallel): Adjust forwarding.

2015-07-29  Julian Brown  <julian@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/loop-reduction-*.c: New tests.
	* testsuite/par-reduction-*.c: New tests.
	* testsuite/libgomp.oacc-c-c++-common/par-loop-comb-reduction-*.c:
	New tests.

2015-07-28  Nathan Sidwell  <nathan@codesourcery.com>

	* libgomp.map: Add GOACC_parallel_keyed.
	* libgomp.h (struct acc_dispatch_t): Change exec_func parameters.
	* libgomp_g.h (GOACC_parallel): Replace with ...
	(GOACC_parallel_keyed): ... this.
	* oacc-parallel.c (goacc_wait): Take pointer to va_list.  Adjust
	all callers.
	(GOACC_parallel_keyed): Use varadic keyed interface for optional
	parameters.  Renamed from ...
	(GOACC_parallel): ... here.  Replace with forwarding fn.
	* plugin/plugin-host.c (GOMP_OFFLOAD_openacc_parallel): Adjust
	parameters.
	* plugin/plugin-nvptx.c (struct targ_fn_launch): New structure.
	(targ_fn_descriptor): Point to targ_fn_launch instance.
	(nvptx_exec): Adjust parameters.  Process compute dimensions.
	(struct nvptx_tdata): Adjust type.
	(GOMP_OFFLOAD_load_image_ver): Adjust function handling.
	(GOMP_OFFLOAD_openacc_parallel): Adjust.

2015-07-28  Tom de Vries  <tom@codesourcery.com>

	backport from trunk:
	2015-07-28  Tom de Vries  <tom@codesourcery.com>

	* testsuite/libgomp.c/uns-outer-4.c: New test.

2015-07-28  Tom de Vries  <tom@codesourcery.com>

	PR tree-optimization/46193
	* testsuite/libgomp.c/pr46193.c: New test.

2015-07-27  James Norris  <jnorris@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/routine-3.c: Add XFAIL.
	* testsuite/libgomp.oacc-c-c++-common/routine-5.c: Likewise.
	* testsuite/libgomp.oacc-fortran/routine-6.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/routine-8.f90: Likewise.

2015-07-27  Nathan Sidwell  <nathan@codesourcery.com>

	* libgomp.map: Rename GOMP_offload_{,un}register_2 to
	GOMP_offload_{,un}register_ver.
	* target.c (gomp_load_image_to_device): Check version function to
	determine interface to plugin.
	(gomp_unload_image_from_device): Likewise.
	(GOMP_offload_register_2): Rename to ...
	(GOMP_offload_register_ver): ... here.
	(GOMP_offload_unregister_2): Rename to ...
	(GOMP_offload_unregister_ver): ... here.
	(GOMP_offload_register, GOMP_offload_unregister): Adjust
	forwarding.
	(gomp_load_plugin_for_device): Reimplement DLSYM & DLSYM_OPT
	macros.  Look for versioning function and check it.  Fetch
	versioning loader and unloader if available.
	* libgomp.h (gomp_device_descr): Add version function field.  Put
	loader and unloader fields in unions.
	* plugin/plugin-nvptx.c (GOMP_OFFLOAD_version): New.
	(GOMP_OFFLOAD_load_image_2): Renamed to ...
	(GOMP_OFFLOAD_load_image_ver): ... here.
	(GOMP_OFFLOAD_unload_image_2): Renamed to ...
	(GOMP_OFFLOAD_unload_image_ver): ... here.
	(GOMP_OFFLOAD_load_image, GOMP_OFFLOAD_unload_image): Delete.
	* oacc-host.c (host_dispatch): Adjust.

2015-07-25  Nathan Sidwell  <nathan@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/reduction-2.c: Copy lresult,
	not result for logical reductions.
	* testsuite/libgomp.oacc-c-c++-common/reduction-3.c: Likewise.
	* testsuite/libgomp.oacc-fortran/data-2.f90: Add present clauses
	to parallels.
	* testsuite/libgomp.oacc-fortran/lib-14.f90: Likewise.

2015-07-24  James Norris  <jnorris@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/routine-3.c: New test.
	* testsuite/libgomp.oacc-c-c++-common/routine-4.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/routine-5.c: Likewise.
	* testsuite/libgomp.oacc-fortran/routine-5.f90: Update test.
	* testsuite/libgomp.oacc-fortran/routine-6.f90: New test.
	* testsuite/libgomp.oacc-fortran/routine-7.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/routine-8.f90: Likewise.

2015-07-24  James Norris  <jnorris@codesourcery.com>

	* target.c (gomp_load_plugin_for_device): Fix variable initialization.

2015-07-24  Nathan Sidwell  <nathan@codesourcery.com>

	* target.c (GOMP_offload_register_2): Add missing const.

2015-07-24  Cesar Philippidis  <cesar@codesourcery.com>

	* testsuite/libgomp.c/pr66714.c: New test.
	* testsuite/libgomp.oacc-fortran/vector-routine.f90: New test.

2015-07-24  Nathan Sidwell  <nathan@codesourcery.com>

	* plugin/plugin-nvptx.c: Include gomp-constants.h.
	(GOMP_OFFLOAD_load_image): Replace with stub function.  Move bulk
	to ....
	(GOMP_OFFLOAD_load_image_2): ... here.  Add version argument and
	check it.
	(GOMP_OFFLOAD_unload_image): Replace with stub function.  Move bulk
	to ....
	(GOMP_OFFLOAD_unload_image_2): ... here.  Add version argument and
	check it.
	* libgomp.map: Add 4.0.2 version.
	* target.c (offload_image_descr): Add versionn field.
	(gomp_offload_image_to_device): Add version argument.  Forward to
	load_image_func_2 if available.  Improve load mismatch diagnostic.
	(GOMP_offload_regster): Make stub function, move bulk to ...
	(GOMP_offload_register_2): ... here.  Process version argument.
	(GOMP_offload_unregister): Make stub function, move bulk to ...
	(GOMP_offload_unregister_2): ... here.  Process version argument.
	(gomp_init_device): Process version field.
	(gomp_load_plugin_for_device): Search for load_image_2 and
	unload_image_2 entry points.
	* libgomp.h (gomp_device_descr) Add load_image_2 and
	unload_image_2 fields.

2015-07-23  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.oacc-c++/c++.exp: Run ttests with
	gcc-dg-runtest.
	* testsuite/libgomp.oacc-c/c.exp: Likewise.

2015-07-22  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/lib-1.c: Remove explicit
	acc_device_nvidia usage.
	* testsuite/libgomp.oacc-c-c++-common/lib-10.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-2.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-9.c: Likewise.

	* oacc-init.c (acc_shutdown): Call gomp_init_targets_once.
	* testsuite/libgomp.oacc-c-c++-common/lib-8.c: New file.

	* testsuite/libgomp.oacc-c-c++-common/lib-3.c: Resolve XFAIL.

2015-07-21  James Norris  <jnorris@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/asyncwait-1.c: Additional tests.
	* testsuite/libgomp.oacc-c-c++-common/if-1.c: Likewise.
	* testsuite/libgomp.oacc-fortran/asyncwait-1.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/asyncwait-2.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/asyncwait-3.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/if-1.f90: Likewise.

2015-07-21  James Norris  <jnorris@codesourcery.com>

	* oacc-init.c (acc_shutdown_1): Replace use of gomp_free_memmap with
	gomp_unmap_vars.
	* target-init.c (gomp_load_image_to_device): Fix initialization.
	(gomp_free_memmap): Remove.

2015-07-21  Nathan Sidwell  <nathan@codesourcery.com>

	* target.c (gomp_offload_image_to_device): Rename to ...
	(gomp_load_image_to_device): ... here.
	(GOMP_offload_register): Adjust call.
	(gomp_init_device): Likewise.
	(gomp_unload_image_from_device): New.  Broken out of ...
	(GOMP_offload_unregister): ... here.  Call it.
	(gomp_unload_device): New.
	* libgomp.h (gomp_unload_device): Declare.
	* oacc-init.c (acc_shutdown_1): Unload from device before deleting
	mem maps.

2015-07-21  Thomas Schwinge  <thomas@codesourcery.com>

	* libgomp_g.h (GOACC_kernels): Remove.

2015-07-20  Nathan Sidwell  <nathan@codesourcery.com>

	* oacc-parallel.c (GOACC_parallel): Move variadic handling into
	wait=-specific if.
	(GOACC_enter_exit_data, GOACC_update): Use consistent num_waits
	!=0 condition.
	(goacc_waits): Move !num_waits handling to ...
	(GOACC_wait): ... here, the only caller that might have zero waits.

	* plugin/plugin-nvptx.c (struct targ_fn_descriptor): Move later.
	(struct ptx_image_data): Move earlier, add fns field.
	(struct ptx_device): Add images and image_lock fields.
	(ptx_images, ptx_image_lock): Delete.
	(nvptx_open_device): Initialize images and image_lock fields.
	(nvptx_close_device): Destroy image_lock.
	(GOMP_OFFLOAD_load_image): Register image to device-specific fields.
	(GOMP_OFFLOAD_unload_image): Unregister image from device-specific
	fields.

2015-07-19  Nathan Sidwell  <nathan@codesourcery.com>

	* oacc-parallel.c (GOACC_kernels): Delete.
	* libgomp.map: Remove GOACC_kernels.

2015-07-17  Nathan Sidwell  <nathan@codesourcery.com>

	* target.c (GOMP_offload_register): Use int for device type arg.
	(GOMP_offload_unregister): Likewise.

	* target.c (struct_offload_image_descr): Constify host_table.
	(gomp_offload_image_to_device): Likewise.
	(GOMP_offload_register, GOMP_offload_unregister): Likewise.

2015-07-17  Nathan Sidwell  <nathan@codesourcery.com>

	* libgomp.h (gomp_device_descr): Constify target data arguments.
	* target.c (struct offload_image_descr): Constify target_data.
	(gomp_offload_image_to_device): Likewise.
	(GOMP_offload_register): Likewise.
	(GOMP_offload_unrefister): Likewise.
	* plugin/plugin-host.c (GOMP_OFFLOAD_load_image,
	GOMP_OFFLOAD_unload_image): Constify target data.
	* plugin/plugin-nvptx.c (struct ptx_image_data): Constify target data.
	(GOMP_OFFLOAD_load_image, GOMP_OFFLOAD_unload_image): Likewise.

2015-07-17  Cesar Philippidis  <cesar@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/firstprivate-2.c: Remove
	omp pragma.

2015-07-17  Tom de Vries  <tom@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/gang-static-1.c (test): Change
	return type to void.

2015-07-17  Tom de Vries  <tom@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/vec-partn-3.c (main): Add missing
	parentheses.

2015-07-17  Thomas Schwinge  <thomas@codesourcery.com>
	    Cesar Philippidis  <cesar@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/worker-partn-8.c: New file.

2015-07-17  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/private-vars-loop-gang-5.c:
	Remove XFAIL.

2015-07-15  Nathan Sidwell  <nathan@codesourcery.com>

	* plugin/plugin-nvptx.c (nvptx_exec): Show grid dimensions in
	debug message.

2015-07-15  Tom de Vries  <tom@codesourcery.com>

	* testsuite/libgomp.oacc-fortran/kernels-loop-nest-independent.f95: New
	test.

2015-07-15  James Norris  <jnorris@codesourcery.com>

	* testsuite/libgomp.oacc-fortran/combdir-1.f90: New test.
	* testsuite/libgomp.oacc-fortran/private-vars-par-gang-2.f90: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/combdir-1.c: Likewise.

2015-07-14  James Norris  <jnorris@codesourcery.com>

	* testsuite/libgomp.oacc-fortran/kernels-independent.f90: New test.

2015-07-14  Tom de Vries  <tom@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/kernels-independent.c: New test.

2015-07-13  Nathan Sidwell  <nathan@codesourcery.com>

	* plugin/plugin-nvptx.c (link_ptx): Constify string argument.
	Workaround driver library const error.
	(struct nvptx_tdata, nvptx_tdata_t): New.
	(GOMP_OFFLOAD_load_image): Use struct for target_data's real
	type.

2015-07-13  James Norris  <jnorris@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/declare-1.c: Add test.

2015-07-13  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.oacc-c++/declare-1.C (foo): Initialize a.

	* testsuite/libgomp.oacc-c-c++-common/private-vars-loop-gang-5.c:
	Add XFAIL.

2015-07-12  Tom de Vries  <tom@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-nest.c: New test.

2015-07-10  James Norris  <jnorris@codesourcery.com>

	* oacc-parallel.c (GOACC_parallel GOACC_data_start): Constrain
	iterations.

2015-07-10  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/parallel-loop-1.c: Add
	XFAIL.
	* testsuite/libgomp.oacc-c-c++-common/private-vars-local-worker-3.c:
	Remove XFAIL.
	* testsuite/libgomp.oacc-c-c++-common/private-vars-local-worker-4.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/private-vars-local-worker-5.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/private-vars-loop-gang-2.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/private-vars-loop-gang-4.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/private-vars-loop-gang-5.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/private-vars-loop-gang-6.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/private-vars-loop-worker-5.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/private-vars-loop-worker-6.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/private-vars-loop-worker-7.c:
	Likewise.

2015-07-08  James Norris  <jnorris@codesourcery.com>

	* oacc-parallel.c (GOACC_parallel GOACC_data_start): Handle Fortran
	deviceptr clause.

2015-07-07  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.oacc-c++/c++.exp (check_effective_target_c):
	Remove procedure.
	* testsuite/libgomp.oacc-c/c.exp (check_effective_target_c):
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/private-vars-local-worker-1.c:
	Remove/tune XFAILs.
	* testsuite/libgomp.oacc-c-c++-common/private-vars-local-worker-2.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/private-vars-local-worker-4.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/private-vars-loop-gang-3.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/private-vars-loop-worker-2.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/private-vars-loop-worker-3.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/private-vars-loop-worker-4.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/private-vars-par-gang-3.c:
	Likewise.

	* testsuite/libgomp.oacc-c-c++-common/reduction-4.c:
	dg-xfail-run-if openacc_nvidia_accel_selected.

2015-06-24  James Norris  <jnorris@codesourcery.com>

	* testsuite/libgomp.oacc-fortran/if-1.c: Fix syntax.

2015-07-01  Tom de Vries  <tom@codesourcery.com>

	PR tree-optimization/66716
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-g.c: New test.

2015-07-01  Chung-Lin Tang  <cltang@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/reduction-4.c (main): Correct
	the names of reduction variables in '&&' and '||' tests.
	* testsuite/libgomp.oacc-c-c++-common/parallel-loop-2.h:
	Remove uses of the firstprivate clause, remove FIXME comment.

2015-07-01  Tom de Vries  <tom@codesourcery.com>

	* oacc-init.c (acc_init_1): Move base_dev NULL test to before use.
	* testsuite/lib/libgomp.exp
	(check_effective_target_openacc_nvidia_accel_supported): New proc.
	* testsuite/libgomp.oacc-c-c++-common/lib-93.c: New test.

2015-07-01  Tom de Vries  <tom@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/lib-62.c: Only run for nvidia.

2015-06-30  Tom de Vries  <tom@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/goacc-data-end.c: Remove
	dg-options "-O2" setting.
	* testsuite/libgomp.oacc-c-c++-common/routine-1.c: Replace dg-options
	with dg-additional-options.
	* testsuite/libgomp.oacc-c-c++-common/routine-2.c: Same.

2015-06-30  Tom de Vries  <tom@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-2.c: Drop "-O2" in
	dg-options and replace dg-options with dg-additional-options.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-3.c: Same.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-data-2.c: Same.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-data-enter-exit-2.c:
	Same.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-data-enter-exit.c:
	Same.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-data-update.c: Same.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-data.c: Same.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-mod-not-zero.c: Same.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-n.c: Same.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop.c: Same.
	* testsuite/libgomp.oacc-c-c++-common/kernels-parallel-loop-data-enter-exit.c:
	Same.
	* testsuite/libgomp.oacc-c-c++-common/kernels-reduction.c: Same.

2015-06-30  Tom de Vries  <tom@codesourcery.com>

	backport from trunk:
	2015-06-30  Tom de Vries  <tom@codesourcery.com>

	* testsuite/libgomp.oacc-c++/c++.exp: Set DEFAULT_CFLAGS to -O2 if not
	already set.  Use DEFAULT_CFLAGS in dg-runtest.
	* testsuite/libgomp.oacc-c-c++-common/collapse-3.c: Remove dg-options
	"-O2".

2015-06-30  Tom de Vries  <tom@codesourcery.com>

	* testsuite/libgomp.fortran/parloops-exit-first-loop-alt-2.f95: New test.
	* testsuite/libgomp.fortran/parloops-exit-first-loop-alt.f95: New test.

2015-06-30  Tom de Vries  <tom@codesourcery.com>

	PR tree-optimization/66642
	* testsuite/libgomp.c/parloops-exit-first-loop-alt-3.c (main): Test low
	iteration count case.
	* testsuite/libgomp.c/parloops-exit-first-loop-alt.c (init): New
	function, factor out of ...
	(main): ... here.  Test low iteration count case.

2015-06-30  Tom de Vries  <tom@codesourcery.com>

	backport from trunk:
	2015-06-30  Tom de Vries  <tom@codesourcery.com>

	PR tree-optimization/66652
	* testsuite/libgomp.c/parloops-exit-first-loop-alt-3.c (f): Rewrite
	using restrict pointers.
	(main): Add arguments to calls to f.
	* testsuite/libgomp.c/parloops-exit-first-loop-alt.c: Same.

	2015-06-23  Tom de Vries  <tom@codesourcery.com>

	* testsuite/libgomp.c/parloops-exit-first-loop-alt-3.c (main): Use
	abort.
	* testsuite/libgomp.c/parloops-exit-first-loop-alt-4.c (main): Same.

	2015-06-13  Tom de Vries  <tom@codesourcery.com>

	* testsuite/libgomp.c/parloops-exit-first-loop-alt-4.c: New test.

	* testsuite/libgomp.c/parloops-exit-first-loop-alt-2.c: Add comment.
	* testsuite/libgomp.c/parloops-exit-first-loop-alt.c: Same.
	* testsuite/libgomp.c/parloops-exit-first-loop-alt-3.c: Add comment.
	(N): Define.
	(main): Use N instead of hardcoded constants.

2015-06-30  Tom de Vries  <tom@codesourcery.com>

	Revert:
	2015-06-18  Tom de Vries  <tom@codesourcery.com>

	* testsuite/libgomp.fortran/parloops-exit-first-loop-alt-2.f95: New test.
	* testsuite/libgomp.fortran/parloops-exit-first-loop-alt.f95: New test.

2015-06-24  James Norris  <jnorris@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/declare-1.c: Additional
	testing.
	* testsuite/libgomp.oacc-c-c++-common/declare-5.c: New test.

2015-06-23  James Norris  <jnorris@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/deviceptr-1.c: Additional
	testing.

2015-06-22  Nathan Sidwell  <nathan@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/gang-static-2.c: Replace
	GOACC_ctaid builtin with GOACC_id.

2015-06-19  Tom de Vries  <tom@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/kernels-reduction.c: New test.

2015-06-18  James Norris  <jnorris@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/default-1.c: New file.
	* testsuite/libgomp.oacc-fortran/default-1.f90: Likewise.

2015-06-18  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.oacc-c++/c++.exp (check_effective_target_c):
	New procedure.
	* testsuite/libgomp.oacc-c/c.exp (check_effective_target_c):
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/private-vars-local-worker-1.c:
	Tune XFAILs.
	* testsuite/libgomp.oacc-c-c++-common/private-vars-local-worker-2.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/private-vars-local-worker-4.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/private-vars-loop-gang-3.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/private-vars-loop-gang-4.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/private-vars-loop-worker-2.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/private-vars-loop-worker-3.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/private-vars-loop-worker-4.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/private-vars-loop-worker-5.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/private-vars-par-gang-3.c:
	Likewise.

2015-06-18  Tom de Vries  <tom@codesourcery.com>

	* testsuite/libgomp.fortran/parloops-exit-first-loop-alt-2.f95: New test.
	* testsuite/libgomp.fortran/parloops-exit-first-loop-alt.f95: New test.

2015-06-17  Cesar Philippidis  <cesar@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/gang-static-2.c: Update
	the expected behavior for gang(static:*).

2015-06-17  Julian Brown  <julian@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/private-vars-par-gang-{1,2,3}.c:
	New tests.
	* testsuite/libgomp.oacc-c-c++-common/private-vars-local-gang-1.c:
	New test.
	* testsuite/libgomp.oacc-c-c++-common/
	private-vars-loop-gang-{1,2,3,4,5,6}.c: New tests.
	* testsuite/libgomp.oacc-c-c++-common/
	private-vars-loop-worker-{1,2,3,4,5,6,7}.c: New tests.
	* testsuite/libgomp.oacc-c-c++-common/
	private-vars-local-worker-{1,2,3,4,5}.c: New tests.
	* testsuite/libgomp.oacc-c-c++-common/
	private-vars-loop-vector-{1,2}.c: New tests.

2015-06-15  Julian Brown  <julian@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/worker-partn-5.c: Remove
	XFAIL.
	* testsuite/libgomp.oacc-c-c++-common/worker-partn-6.c: Likewise.

2015-06-11  Cesar Philippidis  <cesar@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/gang-static-1.c: New test.
	* testsuite/libgomp.oacc-c-c++-common/gang-static-2.c: New test.
	* testsuite/libgomp.oacc-fortran/gang-static-1.f90: New test.

2015-06-10  James Norris  <jnorris@codesourcery.com>

	* testsuite/libgomp.oacc-fortran/atomic_rw-1.f90: New file.

2015-06-10  James Norris  <jnorris@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/atomic_rw-1.c: New file.

2015-06-10  Cesar Philippidis  <cesar@codesourcery.com>

	* testsuite/libgomp.oacc-c++/this.C: New test.

2015-06-08  James Norris  <jnorris@codesourcery.com>

	* libgomp.map: Add GOACC_declare and GOACC_register_static.
	* oacc-init.c (acc_shutdown_1): Add call to acc_deallocate_static.
	(acc_init): Add call to acc_allocate_static.
	* oacc-int.h (goacc_allocate_static, goacc_deallocate_static):
	New declarations.
	* oacc-parallel.c (oacc_static): New structure.
	(oacc_statics): New variable.
	(goacc_allocate_static, goacc_deallocate_static, GOACC_register_static,
	GOACC_declare): New functions.
	* testsuite/libgomp.oacc-c++/declare-1.C: New file.
	* testsuite/libgomp.oacc-c-c++-common/declare-1.c: New file.
	* testsuite/libgomp.oacc-c-c++-common/declare-2.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/declare-3.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/declare-4.c: Likewise.
	* testsuite/libgomp.oacc-fortran/declare-1.f90: Update test.
	* testsuite/libgomp.oacc-fortran/declare-2.f90: New file. 
	* testsuite/libgomp.oacc-fortran/declare-3.f90: Likewise. 
	* testsuite/libgomp.oacc-fortran/declare-4.f90: Likewise. 
	* testsuite/libgomp.oacc-fortran/declare-5.f90: Likewise. 

2015-06-04  Julian Brown  <julian@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/worker-single-{1,1a,2,3,4,5,6}.c:
	New tests.
	* testsuite/libgomp.oacc-c-c++-common/worker-partn-{1,2,3,4,5,6,7}.c:
	New tests.

2015-06-03  Cesar Philippidis  <cesar@codesourcery.com>

	libgomp/
	* testsuite/libgomp.oacc-c-c++-common/vector-broadcast.c: New test.

2015-05-28  Tom de Vries  <tom@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-3.c: New test.

2015-05-28  Tom de Vries  <tom@codesourcery.com>

	PR tree-optimization/65443
	* testsuite/libgomp.c/parloops-exit-first-loop-alt-2.c: New test.
	* testsuite/libgomp.c/parloops-exit-first-loop-alt-3.c: New test.
	* testsuite/libgomp.c/parloops-exit-first-loop-alt.c: New test.

2015-05-28  Tom de Vries  <tom@codesourcery.com>

	PR tree-optimization/65419
	* testsuite/libgomp.oacc-c-c++-common/goacc-data-end.c: New test.

2015-05-28  Julian Brown  <julian@codesourcery.com>

	PR libgomp/65742

	* oacc-init.c (plugin/plugin-host.h): Include.
	(acc_on_device): Check whether we're in an offloaded region for
	host_nonshm
	plugin. Don't use __builtin_acc_on_device.
	* plugin/plugin-host.c (GOMP_OFFLOAD_openacc_parallel): Set
	nonshm_exec flag in thread-local data.
	(GOMP_OFFLOAD_openacc_create_thread_data): Allocate thread-local
	data for host_nonshm plugin.
	(GOMP_OFFLOAD_openacc_destroy_thread_data): Free thread-local data
	for host_nonshm plugin.
	* plugin/plugin-host.h: New.

2015-05-18  Cesar Philippidis  <cesar@codesourcery.com>

	* testsuite/libgomp.oacc-c/gwv.c: Delete.

2015-05-14  Cesar Philippidis  <cesar@codesourcery.com>

	* oacc-mem.c (gomp_acc_remove_pointer): Fix a memory leak preventing
	target_mem_desc.to_free from being deallocated with acc exit data.
	* oacc-parallel.c (find_pset): Remove.
	(find_pointer): New function.
	(GOACC_enter_exit_data): Handle pointer maps with
	gomp_acc_insert_pointer and gomp_acc_remove_pointer.

2015-05-13  Thomas Schwinge  <thomas@codesourcery.com>

        * env.c (initialize_env): Remove static attribute.
	* libgomp.map (INTERNAL): Export initialize_env.
	* testsuite/lib/libgomp.exp (libgomp_init): Build a few object
	files to pre-set environment variables.
	(ALWAYS_CFLAGS): Add constructor-setenv-defaults.o to ldflags.
	(libgomp_target_compile): Don't set the compiler.
	* testsuite/libgomp.c++/c++.exp (GXX_UNDER_TEST): Provide default.
	(libgomp_compile_options): Set the compiler.
	* testsuite/libgomp.c/c.exp (libgomp_compile_options): Set the
	compiler.
	* testsuite/libgomp.fortran/fortran.exp (GFORTRAN_UNDER_TEST):
	Provide default.
	(libgomp_compile_options): Set the compiler.
	* testsuite/libgomp.graphite/graphite.exp
	(libgomp_compile_options): Set the compiler.
	* testsuite/libgomp.oacc-c++/c++.exp (SAVE_GCC_UNDER_TEST)
	(GCC_UNDER_TEST): Don't set.
	(GXX_UNDER_TEST): Provide default.
	(libgomp_compile_options): Set the compiler.
	(ALWAYS_CFLAGS): Add the respective
	constructor-setenv-ACC_DEVICE_TYPE-$offload_target_openacc.o to
	ldflags.
	(ACC_DEVICE_TYPE): Don't set.
	* testsuite/libgomp.oacc-c/c.exp (libgomp_compile_options): Set
	the compiler.
	(ALWAYS_CFLAGS): Add the respective
	constructor-setenv-ACC_DEVICE_TYPE-$offload_target_openacc.o to
	ldflags.
	(ACC_DEVICE_TYPE): Don't set.
	* testsuite/libgomp.oacc-fortran/fortran.exp
	(libgomp_compile_options): Set the compiler.
	(ALWAYS_CFLAGS): Add the respective
	constructor-setenv-ACC_DEVICE_TYPE-$offload_target_openacc.o to
	ldflags.
	(ACC_DEVICE_TYPE): Don't set.

2015-05-13  Cesar Philippidis  <cesar@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/routine-1.c: Remove
	-fno-exceptions.
	* testsuite/libgomp.oacc-c-c++-common/routine-2.c: Likewise.

2015-05-13  Thomas Schwinge  <thomas@codesourcery.com>
	    Bernd Schmidt  <bernds@codesourcery.com>
	    Cesar Philippidis  <cesar@codesourcery.com>
	    Chung-Lin Tang  <cltang@codesourcery.com>
	    James Norris  <jnorris@codesourcery.com>
	    Joseph Myers  <joseph@codesourcery.com>
	    Julian Brown  <julian@codesourcery.com>
	    Tom de Vries  <tom@codesourcery.com>

	* libgomp.h (splay_tree_key_s): Add dealloc_host member.  Adjust
	all users.
	* libgomp.map (GOACC_2.0.GOMP_4_BRANCH): Add GOACC_deviceptr,
	GOACC_get_ganglocal_ptr.
	* libgomp_g.h (GOACC_get_ganglocal_ptr): New prototype.
	* oacc-mem.c (GOACC_deviceptr): New function.
	* oacc-parallel.c (__goacc_host_ganglocal_ptr): New static
	variable.
	(GOACC_get_ganglocal_ptr, alloc_host_shared_mem)
	(free_host_shared_mem, alloc_ganglocal_addrs): New functions.
	(GOACC_parallel, GOACC_kernels): Use them.  Add shared_size formal
	parameter.  Adjust all users.
	(GOACC_parallel): Remove num_workers check.
	(GOACC_enter_exit_data, GOACC_update): Handle more mapping kinds.
	(GOACC_get_num_threads, GOACC_get_thread_num): Add gang, worker,
	vector formal parameters.  Adjust all users.
	* plugin/plugin-host.c (GOMP_OFFLOAD_openacc_parallel): Add
	shared_size formal parameter.  Adjust all users.
	* plugin/plugin-nvptx.c (nvptx_exec)
	(GOMP_OFFLOAD_openacc_parallel): Add shared_size formal parameter.
	Adjust all users.
	* target.c (gomp_map_vars, gomp_unmap_vars)
	(gomp_offload_image_to_device): Update for OpenACC.
	* testsuite/libgomp.oacc-c++/template-reduction.C: Update.
	* testsuite/libgomp.oacc-c-c++-common/collapse-2.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/data-2.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/reduction-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/reduction-2.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/reduction-3.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/reduction-4.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/reduction-5.c: Likewise.
	* testsuite/libgomp.oacc-fortran/collapse-5.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/collapse-6.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/collapse-7.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/collapse-8.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/data-2.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/reduction-1.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/reduction-2.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/reduction-3.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/reduction-4.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/reduction-5.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/reduction-6.f90: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/enter-data.c: New file.
	* testsuite/libgomp.oacc-c-c++-common/firstprivate-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/firstprivate-2.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/host_data-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/host_data-2.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/parallel-loop-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/parallel-loop-1.h: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/parallel-loop-2.h: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/parallel-reduction.c:
	Likewise.
	* testsuite/libgomp.oacc-c/gwv.c: Likewise.
	* testsuite/libgomp.oacc-fortran/firstprivate-1.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/host_data-1.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/if-1.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/implicit-firstprivate-ref.f90:
	Likewise.
	* testsuite/libgomp.oacc-fortran/parallel-reduction.f90: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/reduction-initial-1.c:
	Remove file.

2015-05-13  Thomas Schwinge  <thomas@codesourcery.com>
	    Bernd Schmidt  <bernds@codesourcery.com>
	    Cesar Philippidis  <cesar@codesourcery.com>

	* oacc-ptx.h: Remove file.
	* plugin/plugin-nvptx.c: Don't include it.
	(link_ptx): Accept a length argument.  Don't add predefined bits of
	PTX code.  Look for NUL characters as file boundaries in the input
	and link the multiple PTX files.
	(GOMP_OFFLOAD_load_image): Get the size of PTX code from the table
	and pass it to link_ptx.
	* testsuite/libgomp.fortran/fortran.exp (lang_link_flags): Add
	"-Xoffload -lgfortran -Xoffload -lm".
	* testsuite/libgomp.oacc-fortran/fortran.exp (lang_link_flags):
	Likewise.

2015-05-11  Thomas Schwinge  <thomas@codesourcery.com>
	    Bernd Schmidt  <bernds@codesourcery.com>
	    Cesar Philippidis  <cesar@codesourcery.com>
	    Chung-Lin Tang  <cltang@codesourcery.com>
	    James Norris  <jnorris@codesourcery.com>
	    Joseph Myers  <joseph@codesourcery.com>
	    Julian Brown  <julian@codesourcery.com>
	    Tom de Vries  <tom@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/clauses-1.c: Update.
	* testsuite/libgomp.oacc-c-c++-common/data-2.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/data-3.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-69.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-70.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-71.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-72.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-73.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-74.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-75.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-76.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-77.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-78.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-79.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-80.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-81.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-82.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-83.c: Likewise.
	* testsuite/libgomp.oacc-fortran/data-1.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/data-2.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/data-3.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/data-4-2.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/data-4.f90: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/subr.h: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/subr.ptx: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/timer.h: Remove file.
	* testsuite/libgomp.oacc-c-c++-common/kernels-1.c: Move common
	code from here...
	* testsuite/libgomp.oacc-c-c++-common/parallel-1.c: ..., and
	here...
	* testsuite/libgomp.oacc-c-c++-common/data-clauses.h: ... into
	this new file.
	* testsuite/libgomp.oacc-c++/template-reduction.C: New test.
	* testsuite/libgomp.oacc-c-c++-common/atomic_capture-1.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/atomic_capture-2.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/atomic_update-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/routine-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/routine-2.c: Likewise.
	* testsuite/libgomp.oacc-fortran/atomic_capture-1.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/atomic_update-1.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/cache-1.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/clauses-1.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/declare-1.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/lib-12.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/lib-13.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/lib-14.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/lib-15.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/routine-5.f90: Likewise.

2015-05-11  Thomas Schwinge  <thomas@codesourcery.com>
	    Cesar Philippidis  <cesar@codesourcery.com>

	* oacc-ptx.h (GOMP_ATOMIC_PTX): New macro.
	* plugin/plugin-nvptx.c (link_ptx): Link it in.

2015-05-11  James Norris  <jnorris@codesourcery.com>

	* oacc-mem.c (update_dev_host): Add missing initialization.

2015-04-27  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.fortran/fortran.exp (DG_TORTURE_OPTIONS):
	Don't add -fno-var-tracking next to any -g usage.
	* testsuite/libgomp.oacc-fortran/fortran.exp (DG_TORTURE_OPTIONS):
	Likewise.

2015-04-21  Tom de Vries  <tom@codesourcery.com>
	    Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-data-2.c: New
	test.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-data-enter-exit-2.c:
	New test.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-data-enter-exit.c:
	New test.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-data-update.c:
	New test.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-data.c: New
	test.
	* testsuite/libgomp.oacc-c-c++-common/kernels-parallel-loop-data-enter-exit.c:
	New test.
	* testsuite/libgomp.oacc-fortran/kernels-loop-data-2.f95: New
	test.
	* testsuite/libgomp.oacc-fortran/kernels-loop-data-enter-exit-2.f95:
	New test.
	* testsuite/libgomp.oacc-fortran/kernels-loop-data-enter-exit.f95:
	New test.
	* testsuite/libgomp.oacc-fortran/kernels-loop-data-update.f95: New
	test.
	* testsuite/libgomp.oacc-fortran/kernels-loop-data.f95: New test.
	* testsuite/libgomp.oacc-fortran/kernels-parallel-loop-data-enter-exit.f95:
	New test.

	* testsuite/libgomp.oacc-fortran/kernels-loop-2.f95: New test.
	* testsuite/libgomp.oacc-fortran/kernels-loop.f95: New test.

	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-2.c: New test.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop.c: New test.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-n.c: New test.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-mod-not-zero.c:
	New test.

2015-03-13  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.fortran/fortran.exp (DG_TORTURE_OPTIONS): Add
	-fno-var-tracking next to any -g usage.
	* testsuite/libgomp.oacc-fortran/fortran.exp (DG_TORTURE_OPTIONS):
	Likewise.

2015-01-12  Thomas Schwinge  <thomas@codesourcery.com>

	* plugin/plugin-host.c [HOST_NONSHM_PLUGIN]: Don't include "libgomp.h".
	* plugin/plugin-nvptx.c: Likewise.  Include <stdbool.h>.
	* plugin/Makefrag.am (libgomp_plugin_nvptx_la_LIBADD)
	(libgomp_plugin_host_nonshm_la_LIBADD): Append "libgomp.la".
	* Makefile.in: Regenerate.

	* env.c: Don't include "libgomp_target.h".
	* libgomp-plugin.c: Likewise.
	* oacc-async.c: Likewise.
	* oacc-cuda.c: Likewise.
	* oacc-init.c: Likewise.
	* oacc-mem.c: Likewise.
	* oacc-parallel.c: Likewise.
	* oacc-plugin.c: Likewise.
	* plugin/plugin-host.c: Likewise.
	* plugin/plugin-nvptx.c: Likewise.
	* target.c: Likewise.
	* libgomp_target.h: Remove file after merging its content into...
	* libgomp-plugin.h: ... this file.  Adjust all users.

	* plugin/plugin-nvptx.c (struct ptx_device): Turn stream_lock
	member into a pthread_mutex_t.  Adjust all users.
	(ptx_event_lock): Likewise.
	* libgomp-plugin.c (GOMP_PLUGIN_mutex_init)
	(GOMP_PLUGIN_mutex_destroy, GOMP_PLUGIN_mutex_lock)
	(GOMP_PLUGIN_mutex_unlock): Remove.
	* libgomp-plugin.h (GOMP_PLUGIN_mutex_init)
	(GOMP_PLUGIN_mutex_destroy, GOMP_PLUGIN_mutex_lock)
	(GOMP_PLUGIN_mutex_unlock): Likewise.
	* libgomp.map (GOMP_PLUGIN_1.0): Remove GOMP_PLUGIN_mutex_init,
	GOMP_PLUGIN_mutex_destroy, GOMP_PLUGIN_mutex_lock,
	GOMP_PLUGIN_mutex_unlock.

2014-12-22  Thomas Schwinge  <thomas@codesourcery.com>

	* libgomp.c (struct gomp_device_descr): Add lock member.
	* oacc-host.c (goacc_host_init): Initialize it.
	* target.c (gomp_target_init): Likewise.
	(gomp_init_dev_tables): Remove function.
	(GOMP_target, GOMP_target_data, GOMP_target_update): Instead of
	calling gomp_init_dev_tables, separate device and memory mapping
	initilization, guarded by appropriate locking.  Check (immutable)
	device capabilities early.

	* oacc-init.c (lazy_open, acc_shutdown_1): Lock mem_map when in
	use.

	* target.c (num_devices_openmp): New variable.
	(gomp_get_num_devices): Use it.
	(gomp_target_init): Initialize it, and sort the devices array
	appropriately.

	* libgomp.h (struct gomp_device_descr): Remove id member.  Update
	all users.

	* libgomp.h (gomp_init_tables): Remove const qualifier from struct
	gomp_device_descr.  Change all users.
	* oacc-int.h (base_dev, goacc_register): Likewise.
	* oacc-init.c (dispatchers, resolve_device, acc_init_1)
	(lazy_init): Likewise.

	* libgomp.h (gomp_free_memmap): Take a pointer to a struct
	gomp_memory_mapping instead of a pointer to a struct
	gomp_device_descr.  Change all users.

	* libgomp.h (struct gomp_device_descr): Move target_data member...
	(struct acc_dispatch_t): ... into here.  Change all users.

	* target.c (GOMP_target_update): To initialize, call
	gomp_init_dev_tables instead of gomp_init_device.

	* target.c (gomp_map_vars) <GOMP_MAP_TO_PSET>: Revert earlier
	changes.

	* libgomp.h (TARGET_CAP_SHARED_MEM, TARGET_CAP_NATIVE_EXEC)
	(TARGET_CAP_OPENMP_400, TARGET_CAP_OPENACC_200): Remove, and
	instead...
	* libgomp_target.h (GOMP_OFFLOAD_CAP_SHARED_MEM)
	(GOMP_OFFLOAD_CAP_NATIVE_EXEC, GOMP_OFFLOAD_CAP_OPENMP_400)
	(GOMP_OFFLOAD_CAP_OPENACC_200): ... add these new definitions.
	Change all users.

	* plugin/plugin-nvptx.c (GOMP_OFFLOAD_get_name): Return "nvptx".
	* oacc-init.c (resolve_device): Update for that using...
	(get_openacc_name): ... this new function.

	* testsuite/libgomp-test-support.exp.in
	(offload_additional_options, offload_additional_lib_paths): Don't
	set.
	* configure.ac: Instantiate testsuite/libgomp-test-support.pt.exp
	instead of testsuite/libgomp-test-support.exp.
	* testsuite/Makefile.am (libgomp-test-support.exp): New rule.
	(all-local): Depend on it.
	* configure: Regenerate.
	* testsuite/Makefile.in: Likewise.

2014-12-17  Thomas Schwinge  <thomas@codesourcery.com>
	    Tom de Vries  <tom@codesourcery.com>

	* target.c (GOMP_target, GOMP_target_data, GOMP_target_update):
	Prevent NULL pointer dereference.

	* testsuite/lib/libgomp.exp: Set offload_targets_s, and
	offload_targets_s_openacc.
	(check_effective_target_openacc_nvidia_accel_selected): Look for
	global offload_target_openacc instead of ACC_DEVICE_TYPE
	environment variable.
	* testsuite/libgomp.oacc-c++/c++.exp: Loop through
	offload_targets_s_openacc.
	* testsuite/libgomp.oacc-c/c.exp: Likewise.
	* testsuite/libgomp.oacc-fortran/fortran.exp: Likewise.

2014-12-17  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/Makefile.am: Don't export OFFLOAD_TARGETS,
	OFFLOAD_ADDITIONAL_OPTIONS, and OFFLOAD_ADDITIONAL_LIB_PATHS...
	* testsuite/libgomp-test-support.exp.in: ..., and instead set
	offload_targets, offload_additional_options, and
	offload_additional_lib_paths here.  Update all users.

	* testsuite/libgomp.oacc-c++/c++.exp
	(check_effective_target_oacc_c): Remove, and ...
	* testsuite/libgomp.oacc-c/c.exp (check_effective_target_oacc_c):
	... likewise.  Update all users.

2014-12-17  Thomas Schwinge  <thomas@codesourcery.com>
	    James Norris  <jnorris@codesourcery.com>
	    Cesar Philippidis  <cesar@codesourcery.com>
	    Tom de Vries  <tom@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/abort-3.c: New file.
	* testsuite/libgomp.oacc-c-c++-common/abort-4.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/asyncwait-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/collapse-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/collapse-2.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/collapse-3.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-empty.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/parallel-empty.c: Likewise.
	* testsuite/libgomp.oacc-fortran/collapse-1.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/collapse-2.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/collapse-3.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/collapse-4.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/collapse-5.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/collapse-6.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/collapse-7.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/collapse-8.f90: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/collapse-4.c: Update.
	* testsuite/libgomp.oacc-c/collapse-4.c: Remove.

2014-12-17  James Norris  <jnorris@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/subr.h: New file.
	* testsuite/libgomp.oacc-c-c++-common/subr.cu: Remove.

2014-12-17  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.oacc-c++/c++.exp: Don't add -flto to
	ALWAYS_CFLAGS.
	* testsuite/libgomp.oacc-c/c.exp: Likewise.
	* testsuite/libgomp.oacc-fortran/fortran.exp: Likewise.
	* oacc-parallel.c (GOACC_parallel): Update error message.

	* libgomp_g.h: Move internal stuff from here...
	* libgomp_target.h: ..., and here...
	* libgomp.h: ... into here.

	* Makefile.am: Don't add ../include/gomp-constants.h to
	nodist_libsubinclude_HEADERS.

	* openacc.h: Don't include "gomp-constants.h".

	* oacc-parallel.c (dump_var): Remove.

2014-12-17  Thomas Schwinge  <thomas@codesourcery.com>
	    Julian Brown  <julian@codesourcery.com>
	    David Malcolm  <dmalcolm@redhat.com>

	* configure.ac: Rename from GNU OpenMP Runtime Library to GNU
	Offloading and Multi Processing Runtime Library.  Change all
	users.

2014-12-17  Thomas Schwinge  <thomas@codesourcery.com>
	    Julian Brown  <julian@codesourcery.com>

	* plugin/Makefile.am: Rework into...
	* plugin/Makefrag.am: ... this new file, and
	* plugin/configure.ac: rework into...
	* plugin/configfrag.ac: ... this new file.  Change all users.
	* configure.ac: Move plugin/offloading handling...
	* plugin/configfrag.ac: ... here.

	* env.c (initialize_env): Don't look for GCC_ACC_NOTIFY but for
	GOMP_DEBUG.  Document it in the libgomp manual.
	* libgomp-plugin.h: Rename GOMP_PLUGIN_notify to
	GOMP_PLUGIN_debug.  Change all users.
	* libgomp.h: Rename goacc_notify_var to gomp_debug_var,
	gomp_vnotify to gomp_vdebug, and gomp_notify to gomp_debug.
	Change all users.  Add kind argument to gomp_vdebug and
	gomp_debug.  Change all users.

	* libgomp_g.h: Remove names of formal parameters.

	* libgomp_target.h: Rename ACC_dispatch_t to acc_dispatch_t.
	Change all users.
	* oacc-init.c: Rename _acc_init to acc_init_1, and _acc_shutdown
	to acc_shutdown_1.  Change all users.
	* oacc-int.h: Rename ACC_register to goacc_register,
	ACC_runtime_initialize to goacc_runtime_initialize,
	ACC_save_and_set_bind to goacc_save_and_set_bind, ACC_restore_bind
	to goacc_restore_bind, and ACC_lazy_initialize to
	goacc_lazy_initialize.  Change all users.
	* plugin/plugin-nvptx.c: Rename cuErrorList to cuda_errlist,
	cuErrorMsg to cuda_error, cuSymNames to cuda_symnames, PTX_inited
	to ptx_inited, PTX_stream to ptx_stream, PTX_device to ptx_device,
	PTX_event to ptx_event, PTX_event_type to ptx_event_type, PTX_init
	to nvptx_init, , PTX_fini to nvptx_fini, PTX_open_device to
	nvptx_open_device, PTX_close_device to nvptx_close_device,
	PTX_get_num_devices to nvptx_get_num_devices, PTX_exec to
	nvptx_exec, PTX_alloc to nvptx_alloc, PTX_free to nvptx_free,
	PTX_host2dev to nvptx_host2dev, PTX_dev2host to nvptx_dev2host,
	PTX_set_async to nvptx_set_async, PTX_async_test to
	nvptx_async_test, PTX_async_test_all to nvptx_async_test_all,
	PTX_wait to nvptx_wait, PTX_wait_async to nvptx_wait_async,
	PTX_wait_all to nvptx_wait_all, PTX_wait_all_async to
	nvptx_wait_all_async, PTX_get_current_cuda_device to
	nvptx_get_current_cuda_device, PTX_get_current_cuda_context to
	nvptx_get_current_cuda_context, PTX_get_cuda_stream to
	nvptx_get_cuda_stream, PTX_set_cuda_stream to
	nvptx_set_cuda_stream.  Change all users.

	* oacc-parallel.c (GOACC_kernels): Pass 0 instead of num_waits in
	GOACC_parallel invocation.

	* plugin/plugin-host.c: Remove all DEBUG code.
	* plugin/plugin-nvptx.c: Likewise.

	* plugin/plugin-host.c (GOMP_OFFLOAD_get_caps): Don't claim
	TARGET_CAP_OPENMP_400.

	* testsuite/libgomp.oacc-c-c++-common/lib-11.c: Restrict to target
	openacc_nvidia_accel_selected.

	* testsuite/libgomp.oacc-c-c++-common/lib-38.c: Remove wrong
	check.

	* testsuite/libgomp.oacc-c-c++-common/lib-9.c: Fix wrong check.

2014-11-14  Tom de Vries  <tom@codesourcery.com>

	* Makefile.am: Add missing dependency "openacc.mod: openacc.lo".
	* Makefile.in: Regenerate.

2014-11-14  Tom de Vries  <tom@codesourcery.com>

	* configure.tgt: Handle case that $enable_linux_futex is empty.

2014-11-14  Thomas Schwinge  <thomas@codesourcery.com>

	* libgomp.texi (Reporting Bugs): Mention the "openacc" Bugzilla
	keyword.

2014-11-13  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/context-2.c: Fix data
	clause.

	* target.c (gomp_map_vars_existing): Error out if "force"
	semantics.
	(gomp_map_vars): Actually pass kinds to gomp_map_vars_existing.
	Remove FIXMEs.
	* testsuite/libgomp.oacc-c-c++-common/data-already-1.c: New file.
	* testsuite/libgomp.oacc-c-c++-common/data-already-2.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/data-already-3.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/data-already-4.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/data-already-5.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/data-already-6.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/data-already-7.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/data-already-8.c: Likewise.
	* testsuite/libgomp.oacc-fortran/data-already-1.f: Likewise.
	* testsuite/libgomp.oacc-fortran/data-already-2.f: Likewise.
	* testsuite/libgomp.oacc-fortran/data-already-3.f: Likewise.
	* testsuite/libgomp.oacc-fortran/data-already-4.f: Likewise.
	* testsuite/libgomp.oacc-fortran/data-already-5.f: Likewise.
	* testsuite/libgomp.oacc-fortran/data-already-6.f: Likewise.
	* testsuite/libgomp.oacc-fortran/data-already-7.f: Likewise.
	* testsuite/libgomp.oacc-fortran/data-already-8.f: Likewise.

2014-11-12  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/collapse-4.c: New file.
	* testsuite/libgomp.oacc-c/collapse-4.c: Turn into an execution
	test, check result.
	* testsuite/libgomp.oacc-c-c++-common/data-2.c: Update.
	* testsuite/libgomp.oacc-c-c++-common/data-3.c: Likewise.

2014-11-11  Thomas Schwinge  <thomas@codesourcery.com>

	* plugin-nvptx.c: Remove.

2014-11-07  Tom de Vries  <tom@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/lib-66.c: Skip for shared memory
	accelerators.
	(main):  Use acc_device_default instead of acc_device_nvidia.

2014-11-06  Julian Brown  <julian@codesourcery.com>

	* oacc-init.c (resolve_device, _acc_init): Fix init_device_func
	hook naming.
	* plugin/plugin-host.c (GOMP_OFFLOAD_openacc_avail): Remove.
	(host_dispatch): Don't set avail_func hook.
	* plugin/configure.ac (libgomp-test-support.exp): Add to
	AC_CONFIG_FILES.
	* plugin/configure: Regenerate.
	* testsuite/libgomp-test-support.exp.in: Move from here...
	* plugin/libgomp-test-support.exp.in: ...to here.
	* plugin/Makefile.in: Regenerate.
	* testsuite/lib/libgomp.exp (libgomp-test-support.exp): Find in
	plugin dir, for now.
	* testsuite/Makefile.in: Regenerate.
	* configure.ac (testsuite/libgomp-test-support.exp): Remove from
	AC_CONFIG_FILES.
	* config.h.in: Regenerate.
	* configure: Regenerate.

2014-11-05  Julian Brown  <julian@codesourcery.com>

	* Makefile.am (SUBDIRS): Add plugin.
	(DIST_SUBDIRS): Define.
	(libgomp_plugin_nvptx_*): Remove nvptx support from here.
	(libgomp_plugin_host_nonshm_*): Likewise.
	* Makefile.in: Regenerate.
	* configure: Regenerate.
	* oacc-host.c: Replace with #include of plugin/plugin-host.c code,
	move implementation to the latter.
	* plugin/plugin-host.c: New file.
	* plugin-nvptx.c: Copy to...
	* plugin/plugin-nvptx.c: New file.
	* plugin/Makefile.am: New.
	* plugin/Makefile.in: Regenerate.
	* plugin/aclocal.m4: Regenerate.
	* plugin/configure: Regenerate.

2014-11-05  Julian Brown  <julian@codesourcery.com>

	* oacc-host.c: Add GOMP_OFFLOAD_ prefix for plugin hooks. Rename
	device_init to init_device, device_fini to fini_device,
	offload_register to register_image and remove extraneous "device_"
	from device_alloc, device_free, device_dev2host, device_host2dev and
	device_run.
	(host_dispatch): Use new names for hooks.
	* oacc-init.c: Use new names for hooks, throughout.
	* plugin-nvptx.c: Likewise.
	* target.c: Likewise.
	(gomp_load_plugin_for_device): Likewise. Look for new hook names.
	* target.h (gomp_device_descr): Use new hook names.

2014-11-05  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/update-1-2.c: New file.
	* testsuite/libgomp.oacc-fortran/data-4-2.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/data-4.f90: In one instance, use
	the self clause instead of host clause.

	* testsuite/libgomp.oacc-c/cache-1.c: Remove directives that are
	expected to fail, and rename the file to...
	* testsuite/libgomp.oacc-c-c++-common/cache-1.c: ... this.
	* testsuite/libgomp.oacc-c++/cache-1.C: Remove file.

2014-11-05  James Norris  <jnorris@codesourcery.com>

	* testsuite/libgomp.oacc-c/cache-1.c: New file.
	* testsuite/libgomp.oacc-c++/cache-1.C: Likewise.

2014-11-05  Thomas Schwinge  <thomas@codesourcery.com>
	    James Norris  <jnorris@codesourcery.com>

	* testsuite/libgomp.oacc-c++/c++.exp: Enable
	libgomp.oacc-c-c++-common testing.
	* testsuite/libgomp.oacc-c/c.exp: Likewise.
	* testsuite/libgomp.oacc-c/abort-2.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/abort-2.c: ... this.
	* testsuite/libgomp.oacc-c/abort.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/abort.c: ... this.
	* testsuite/libgomp.oacc-c/acc_on_device-1.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/acc_on_device-1.c: ... this.
	* testsuite/libgomp.oacc-c/clauses-1.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/clauses-1.c: ... this.
	* testsuite/libgomp.oacc-c/clauses-2.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/clauses-2.c: ... this.
	* testsuite/libgomp.oacc-c/context-1.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/context-1.c: ... this.
	* testsuite/libgomp.oacc-c/context-2.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/context-2.c: ... this.
	* testsuite/libgomp.oacc-c/context-3.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/context-3.c: ... this.
	* testsuite/libgomp.oacc-c/context-4.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/context-4.c: ... this.
	* testsuite/libgomp.oacc-c/data-1.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/data-1.c: ... this.
	* testsuite/libgomp.oacc-c/data-2.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/data-2.c: ... this.
	* testsuite/libgomp.oacc-c/data-3.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/data-3.c: ... this.
	* testsuite/libgomp.oacc-c/deviceptr-1.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/deviceptr-1.c: ... this.
	* testsuite/libgomp.oacc-c/if-1.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/if-1.c: ... this.
	* testsuite/libgomp.oacc-c/kernels-1.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/kernels-1.c: ... this.
	* testsuite/libgomp.oacc-c/lib-1.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-1.c: ... this.
	* testsuite/libgomp.oacc-c/lib-10.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-10.c: ... this.
	* testsuite/libgomp.oacc-c/lib-11.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-11.c: ... this.
	* testsuite/libgomp.oacc-c/lib-12.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-12.c: ... this.
	* testsuite/libgomp.oacc-c/lib-13.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-13.c: ... this.
	* testsuite/libgomp.oacc-c/lib-14.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-14.c: ... this.
	* testsuite/libgomp.oacc-c/lib-15.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-15.c: ... this.
	* testsuite/libgomp.oacc-c/lib-16.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-16.c: ... this.
	* testsuite/libgomp.oacc-c/lib-17.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-17.c: ... this.
	* testsuite/libgomp.oacc-c/lib-18.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-18.c: ... this.
	* testsuite/libgomp.oacc-c/lib-19.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-19.c: ... this.
	* testsuite/libgomp.oacc-c/lib-2.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-2.c: ... this.
	* testsuite/libgomp.oacc-c/lib-20.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-20.c: ... this.
	* testsuite/libgomp.oacc-c/lib-21.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-21.c: ... this.
	* testsuite/libgomp.oacc-c/lib-22.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-22.c: ... this.
	* testsuite/libgomp.oacc-c/lib-23.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-23.c: ... this.
	* testsuite/libgomp.oacc-c/lib-24.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-24.c: ... this.
	* testsuite/libgomp.oacc-c/lib-25.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-25.c: ... this.
	* testsuite/libgomp.oacc-c/lib-26.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-26.c: ... this.
	* testsuite/libgomp.oacc-c/lib-27.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-27.c: ... this.
	* testsuite/libgomp.oacc-c/lib-28.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-28.c: ... this.
	* testsuite/libgomp.oacc-c/lib-29.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-29.c: ... this.
	* testsuite/libgomp.oacc-c/lib-3.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-3.c: ... this.
	* testsuite/libgomp.oacc-c/lib-30.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-30.c: ... this.
	* testsuite/libgomp.oacc-c/lib-31.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-31.c: ... this.
	* testsuite/libgomp.oacc-c/lib-32.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-32.c: ... this.
	* testsuite/libgomp.oacc-c/lib-33.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-33.c: ... this.
	* testsuite/libgomp.oacc-c/lib-34.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-34.c: ... this.
	* testsuite/libgomp.oacc-c/lib-35.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-35.c: ... this.
	* testsuite/libgomp.oacc-c/lib-36.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-36.c: ... this.
	* testsuite/libgomp.oacc-c/lib-37.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-37.c: ... this.
	* testsuite/libgomp.oacc-c/lib-38.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-38.c: ... this.
	* testsuite/libgomp.oacc-c/lib-39.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-39.c: ... this.
	* testsuite/libgomp.oacc-c/lib-4.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-4.c: ... this.
	* testsuite/libgomp.oacc-c/lib-40.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-40.c: ... this.
	* testsuite/libgomp.oacc-c/lib-41.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-41.c: ... this.
	* testsuite/libgomp.oacc-c/lib-42.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-42.c: ... this.
	* testsuite/libgomp.oacc-c/lib-43.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-43.c: ... this.
	* testsuite/libgomp.oacc-c/lib-44.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-44.c: ... this.
	* testsuite/libgomp.oacc-c/lib-45.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-45.c: ... this.
	* testsuite/libgomp.oacc-c/lib-46.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-46.c: ... this.
	* testsuite/libgomp.oacc-c/lib-47.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-47.c: ... this.
	* testsuite/libgomp.oacc-c/lib-48.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-48.c: ... this.
	* testsuite/libgomp.oacc-c/lib-49.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-49.c: ... this.
	* testsuite/libgomp.oacc-c/lib-5.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-5.c: ... this.
	* testsuite/libgomp.oacc-c/lib-50.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-50.c: ... this.
	* testsuite/libgomp.oacc-c/lib-51.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-51.c: ... this.
	* testsuite/libgomp.oacc-c/lib-52.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-52.c: ... this.
	* testsuite/libgomp.oacc-c/lib-53.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-53.c: ... this.
	* testsuite/libgomp.oacc-c/lib-54.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-54.c: ... this.
	* testsuite/libgomp.oacc-c/lib-55.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-55.c: ... this.
	* testsuite/libgomp.oacc-c/lib-56.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-56.c: ... this.
	* testsuite/libgomp.oacc-c/lib-57.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-57.c: ... this.
	* testsuite/libgomp.oacc-c/lib-58.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-58.c: ... this.
	* testsuite/libgomp.oacc-c/lib-59.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-59.c: ... this.
	* testsuite/libgomp.oacc-c/lib-6.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-6.c: ... this.
	* testsuite/libgomp.oacc-c/lib-60.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-60.c: ... this.
	* testsuite/libgomp.oacc-c/lib-61.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-61.c: ... this.
	* testsuite/libgomp.oacc-c/lib-62.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-62.c: ... this.
	* testsuite/libgomp.oacc-c/lib-63.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-63.c: ... this.
	* testsuite/libgomp.oacc-c/lib-64.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-64.c: ... this.
	* testsuite/libgomp.oacc-c/lib-65.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-65.c: ... this.
	* testsuite/libgomp.oacc-c/lib-66.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-66.c: ... this.
	* testsuite/libgomp.oacc-c/lib-67.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-67.c: ... this.
	* testsuite/libgomp.oacc-c/lib-68.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-68.c: ... this.
	* testsuite/libgomp.oacc-c/lib-69.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-69.c: ... this.
	* testsuite/libgomp.oacc-c/lib-7.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-7.c: ... this.
	* testsuite/libgomp.oacc-c/lib-70.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-70.c: ... this.
	* testsuite/libgomp.oacc-c/lib-71.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-71.c: ... this.
	* testsuite/libgomp.oacc-c/lib-72.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-72.c: ... this.
	* testsuite/libgomp.oacc-c/lib-73.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-73.c: ... this.
	* testsuite/libgomp.oacc-c/lib-74.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-74.c: ... this.
	* testsuite/libgomp.oacc-c/lib-75.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-75.c: ... this.
	* testsuite/libgomp.oacc-c/lib-76.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-76.c: ... this.
	* testsuite/libgomp.oacc-c/lib-77.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-77.c: ... this.
	* testsuite/libgomp.oacc-c/lib-78.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-78.c: ... this.
	* testsuite/libgomp.oacc-c/lib-79.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-79.c: ... this.
	* testsuite/libgomp.oacc-c/lib-80.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-80.c: ... this.
	* testsuite/libgomp.oacc-c/lib-81.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-81.c: ... this.
	* testsuite/libgomp.oacc-c/lib-82.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-82.c: ... this.
	* testsuite/libgomp.oacc-c/lib-83.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-83.c: ... this.
	* testsuite/libgomp.oacc-c/lib-84.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-84.c: ... this.
	* testsuite/libgomp.oacc-c/lib-85.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-85.c: ... this.
	* testsuite/libgomp.oacc-c/lib-86.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-86.c: ... this.
	* testsuite/libgomp.oacc-c/lib-87.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-87.c: ... this.
	* testsuite/libgomp.oacc-c/lib-88.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-88.c: ... this.
	* testsuite/libgomp.oacc-c/lib-89.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-89.c: ... this.
	* testsuite/libgomp.oacc-c/lib-9.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-9.c: ... this.
	* testsuite/libgomp.oacc-c/lib-90.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-90.c: ... this.
	* testsuite/libgomp.oacc-c/lib-91.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-91.c: ... this.
	* testsuite/libgomp.oacc-c/lib-92.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/lib-92.c: ... this.
	* testsuite/libgomp.oacc-c/nested-1.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/nested-1.c: ... this.
	* testsuite/libgomp.oacc-c/nested-2.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/nested-2.c: ... this.
	* testsuite/libgomp.oacc-c/offset-1.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/offset-1.c: ... this.
	* testsuite/libgomp.oacc-c/parallel-1.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/parallel-1.c: ... this.
	* testsuite/libgomp.oacc-c/pointer-align-1.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/pointer-align-1.c: ... this.
	* testsuite/libgomp.oacc-c/present-1.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/present-1.c: ... this.
	* testsuite/libgomp.oacc-c/present-2.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/present-2.c: ... this.
	* testsuite/libgomp.oacc-c/reduction-1.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/reduction-1.c: ... this.
	* testsuite/libgomp.oacc-c/reduction-2.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/reduction-2.c: ... this.
	* testsuite/libgomp.oacc-c/reduction-3.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/reduction-3.c: ... this.
	* testsuite/libgomp.oacc-c/reduction-4.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/reduction-4.c: ... this.
	* testsuite/libgomp.oacc-c/reduction-5.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/reduction-5.c: ... this.
	* testsuite/libgomp.oacc-c/reduction-initial-1.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/reduction-initial-1.c: ... this.
	* testsuite/libgomp.oacc-c/subr.cu: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/subr.cu: ... this.
	* testsuite/libgomp.oacc-c/subr.ptx: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/subr.ptx: ... this.
	* testsuite/libgomp.oacc-c/timer.h: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/timer.h: ... this.
	* testsuite/libgomp.oacc-c/update-1.c: Rename to...
	* testsuite/libgomp.oacc-c-c++-common/update-1.c: ... this.

2014-11-05  Thomas Schwinge  <thomas@codesourcery.com>

	* libgomp.texi: Update for OpenACC.

	* target.h (struct ACC_dispatch_t): Remove avail_func.  Update all
	users.
	* oacc-host.c (openacc_avail): Likewise.
	* plugin-nvptx.c (PTX_avail, openacc_avail): Likewise.
	* libgomp.texi (acc_get_num_devices): Revise.

	* testsuite/libgomp.oacc-c/goacc_kernels.c: Remove file.
	* testsuite/libgomp.oacc-c/goacc_parallel.c: Remove file.

2014-11-04  Cesar Philippidis  <cesar@codesourcery.com>

	* testsuite/libgomp.oacc-fortran/routine-1.f90: New test.
	* testsuite/libgomp.oacc-fortran/routine-2.f90: New test.
	* testsuite/libgomp.oacc-fortran/routine-3.f90: New test.
	* testsuite/libgomp.oacc-fortran/routine-4.f90: New test.

2014-11-04  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.oacc-c/reduction-initial-1.c
	[ACC_DEVICE_TYPE_host_nonshm]: Remove special-casing for N.

2014-11-03  Cesar Philippidis  <cesar@codesourcery.com>
	    Thomas Schwinge  <thomas@codesourcery.com>

	* libgomp.map (GOACC_get_thread_num): Declare.
	(GOACC_get_num_threads): Declare.
	* libgomp_g.h (GOACC_get_thread_num): Declare.
	(GOACC_get_num_threads): Declare.
	* oacc-parallel.c (GOACC_parallel): Handle num_gangs.
	(GOACC_get_num_threads): New function.
	(GOACC_get_thread_num): New function.
	* oacc-ptx.h: New file.
	* plugin-nvptx.c (ABORT_PTX): Remove macro. Move to oacc-ptx.h.
	(ACC_ON_DEVICE_PTX): Likewise.
	(link_ptx): Also link ptx code defined by GOACC_INTERNAL_PTX.
	(PTX_exec): Handle gangs/CTAs.
	* testsuite/libgomp.oacc-c/reduction-1.c: New test.
	* testsuite/libgomp.oacc-c/reduction-2.c: New test.
	* testsuite/libgomp.oacc-c/reduction-3.c: New test.
	* testsuite/libgomp.oacc-c/reduction-4.c: New test.
	* testsuite/libgomp.oacc-c/reduction-5.: New test.
	* testsuite/libgomp.oacc-c/reduction-initial-1.c: New test.
	* testsuite/libgomp.oacc-fortran/reduction-1.f90: New test.
	* testsuite/libgomp.oacc-fortran/reduction-2.f90: New test.
	* testsuite/libgomp.oacc-fortran/reduction-3.f90: New test.
	* testsuite/libgomp.oacc-fortran/reduction-4.f90: New test.
	* testsuite/libgomp.oacc-fortran/reduction-5.f90: New test.
	* testsuite/libgomp.oacc-fortran/reduction-6.f90: New test.

2014-11-03  Cesar Philippidis  <cesar@codesourcery.com>

	* libgomp.map (GOACC_enter_exit_data): Declare as global.
	* libgomp_g.h (GOACC_enter_exit_data): Declare.
	(GOACC_update): Declare.
	(gomp_acc_insert_pointer): Declare.
	(gomp_acc_remove_pointer): Declare.
	* oacc-mem.c (gomp_acc_insert_pointer): New function.
	(gomp_acc_remove_pointer): New function.
	* oacc-parallel.c (find_pset): New function.
	(GOACC_enter_exit_data): New function.
	(GOACC_update): Handle GOMP_MAP_TO_PSET.
	* testsuite/libgomp.oacc-c/data-2.c: New test.
	* testsuite/libgomp.oacc-c/data-3.c: New test.
	* testsuite/libgomp.oacc-fortran/data-1.f90: New test.
	* testsuite/libgomp.oacc-fortran/data-2.f90: New test.
	* testsuite/libgomp.oacc-fortran/data-3.f90: New test.
	* testsuite/libgomp.oacc-fortran/data-4.f90: New test.

2014-10-31  Cesar Philippidis  <cesar@codesourcery.com>

	* testsuite/libgomp.oacc-fortran/asyncwait-1.f90: New test.
	* testsuite/libgomp.oacc-fortran/asyncwait-2.f90: New test.
	* testsuite/libgomp.oacc-fortran/asyncwait-3.f90: New test.

2014-10-31  Thomas Schwinge  <thomas@codesourcery.com>

	* configure.ac (CUDA_DRIVER_INCLUDE, CUDA_DRIVER_LIB): New
	substituted variables.
	(testsuite/libgomp-test-support.exp): Instantiate file.
	* Makefile.in: Regenerate.
	* configure: Likewise.
	* testsuite/Makefile.in: Likewise.
	* testsuite/libgomp-test-support.exp.in: New file.
	* testsuite/lib/libgomp.exp: Load it.
	(libgomp_init): For build-tree testing, add the CUDA paths to
	ALWAYS_CFLAGS and always_ld_library_path.

2014-10-30  Julian Brown  <julian@codesourcery.com>

	* target.c (gomp_map_vars): Remove MM argument.
	(GOMP_target, GOMP_target_data): Update calls to gomp_map_vars.
	* oacc-mem.c (acc_map_data, present_create_copy): Update calls to
	gomp_map_vars.
	* oacc-parallel.c (GOACC_parallel, GOACC_data_start): Likewise.
	* target.h (gomp_map_vars): Update prototype.

2014-10-30  Julian Brown  <julian@codesourcery.com>

	* oacc-host.c (DEBUG): Remove undefine.
	* plugin-nvptx.c (DEBUG, DISABLE_ASYNC): Remove comment-out macro
	definitions.
	* target.c (dump_mappings): Remove debugging function.

2014-10-30  Julian Brown  <julian@codesourcery.com>

	* target.c (gomp_load_plugin_for_device): Only call get_caps once.
	(gomp_find_available_plugins): ...and don't call it again here.

2014-10-30  Julian Brown  <julian@codesourcery.com>

	* env.c (goacc_notify_var): New.
	(initialize_env): Use above instead of
	gomp_global_icv.acc_notify_var.
	* error.c (gomp_vnotify): Use goacc_notify_var.
	(gomp_notify): Fix formatting.
	* libgomp.h (gomp_task_icv): Remove acc_notify_var field.
	(goacc_notify_var): Add extern declaration.

2014-10-30  Julian Brown  <julian@codesourcery.com>

	* env.c (goacc_parse_device_num): Remove.
	(initialize_env): Use parse_int instead of goacc_parse_device_num.
	* oacc-init.c (lazy_open): Add bounds check for device number.

2014-10-30  Julian Brown  <julian@codesourcery.com>

	* env.c (oacc-int.h): Include.
	* libgomp-plugin.h (GOMP_PLUGIN_async_unmap_vars): Don't declare
	here.
	* libgomp.map (PLUGIN_1.0): Add GOMP_PLUGIN_acc_thread symbol.
	* oacc-async.c (oacc-int.h): Include.
	(acc_async_test, acc_async_test_all, acc_wait, acc_wait_async)
	(acc_wait_all, acc_wait_all_async): Use base_dev not ACC_dev.
	* oacc-cuda.c (oacc-int.h): Include.
	(acc_get_current_cuda_device, acc_get_current_cuda_context)
	(acc_get_cuda_stream): Use base_dev not ACC_dev.
	(acc_set_cuda_stream): Call ACC_lazy_initialize, use base_dev not
	ACC_dev.
	* oacc-host.c (oacc-plugin.h, oacc-int.h): Include one or the
	other, depending on HOST_NONSHM_PLUGIN setting.
	(openacc_create_thread_data, openacc_destroy_thread_data): New.
	(host_dispatch): Initialize create_thread_data_func,
	destroy_thread_data_func hooks.
	* oacc-init.c (oacc-int.h): Include.
	(acc_device_lock): Make static.
	(ACC_dev, ACC_handle, handle_num, struct ACC_context, ACC_contexts):
	Remove.
	(base_dev, goacc_threads, goacc_thread_lock, goacc_cleanup_key):
	Add.
	(goacc_tls_data, goacc_tls_key): Define one or the other, depending
	on HAVE_TLS setting.
	(dispatchers): Add comment.
	(ACC_register): Only register 0th device.
	(close_handle): Remove.
	(_acc_init): Add comment. Don't use ACC_dev.
	(goacc_new_thread, goacc_destroy_thread): New.
	(lazy_open): Update comment. Remove code relating to contexts and
	memory maps. Create thread-specific data if necessary.
	(acc_init): Use base_dev not ACC_dev.
	(_acc_shutdown): Don't call close_handle. Use base_dev not ACC_dev.
	Free target-specific TLS data and close devices that are open at
	the time of shutdown.
	(lazy_init): Add comment. Use base_dev not ACC_dev.
	(lazy_init_and_open): Add comment. Use base_dev not ACC_dev.
	(acc_get_num_devices, acc_get_device_type, acc_get_device_num): Use
	base_dev not ACC_dev.
	(acc_set_device_num): Likewise. If switching device number,
	de-associate previous device number from the current thread, but do
	not close the device.
	(acc_on_device): Check type for device for current thread, not
	ACC_dev.
	(ACC_runtime_initialize): Initialize goacc_tls_key,
	goacc_cleanup_key, base_dev, goacc_threads, goacc_thread_lock. Don't
	initialize ACC_contexts.
	(saved_bound_dev): Remove.
	(ACC_save_and_set_bind, ACC_restore_bind): Use goacc_thread.
	(ACC_lazy_initialize): Use base_dev, goacc_thread instead of
	ACC_dev, ACC_memmap.
	* oacc-int.h (struct ACC_dispatch_t): Don't declare here.
	(struct goacc_thread): New.
	(goacc_tls_data): Define for HAVE_TLS.
	(goacc_tls_key): Define for !HAVE_TLS.
	(goacc_thread): New (versions with and without HAVE_TLS).
	(ACC_mem_open, ACC_mem_close, ACC_resolve_device, ACC_dev)
	(ACC_handle, struct memmap_t, ACC_memmap): Remove.
	(base_dev): Add extern declaration.
	* oacc-mem.c (oacc-int.h, assert.h): Include.
	(ACC_memmap, ACC_mem_open, ACC_mem_close): Remove.
	(lookup_host): Change memmap_t argument to struct
	gomp_memory_mapping.
	(lookup_dev): Change memmap_t argument to struct target_mem_desc.
	Use list_count not refcount for iterating over mapped elements.
	(acc_malloc): Use base_dev not ACC_dev.
	(acc_free): Update call to lookup_dev. Use base_dev not ACC_dev.
	(acc_memcpy_to_device, acc_memcpy_from_device): Use base_dev not
	ACC_dev.
	(acc_deviceptr, acc_is_present): Update call to lookup_host.
	(acc_hostptr): Update call to lookup_dev.
	(acc_map_data): Look up thread device instead of using ACC_dev,
	update calls to lookup_host, lookup_dev. Use data environment in
	device descriptor.
	(acc_unmap_data): Update call to lookup_host. Remove mapped data
	from data environment not ACC_memmap.
	(present_create_copy): Update call to lookup_host. Use data
	environment instead of list in ACC_memmap.
	(delete_copyout): Update call to lookup_host. Look up device in
	current thread info instead of using ACC_dev.
	(update_dev_host): Look up device in current thread info instead of
	using ACC_dev.
	* oacc-parallel.c (oacc-int.h): Include.
	(struct devgeom, devgeom, dump_devaddrs): Remove.
	(select_acc_device): Call ACC_lazy_initialize earlier.
	(GOACC_parallel): Use device for current thread instead of ACC_dev.
	Use memory map from current device.
	(GOACC_data_start): Likewise. Use thread info block for mapped data.
	(GOACC_data_end): Use thread info block for mapped data.
	(goacc_wait): Use device for current thread instead of ACC_dev.
	(GOACC_update): Likewise. Formatting fixes.
	* oacc-plugin.c (ACC_plugin_register): Remove.
	(oacc-int.h): Include.
	(GOMP_PLUGIN_acc_thread): New.
	* oacc-plugin.h (target.h): Don't include.
	(ACC_plugin_register): Remove.
	(GOMP_PLUGIN_async_unmap_vars, GOMP_PLUGIN_acc_thread): Add extern
	declarations.
	* plugin-nvptx.c (oacc-plugin.h): Include.
	(current_stream, PTX_dev, PTX_devices): Remove.
	(struct nvptx_thread): New.
	(nvptx_thread): New function.
	(select_stream_for_async): Locate ptx_dev in device-specific TLS
	data instead of using TLS PTX_dev variable.
	(PTX_init): Don't initialize PTX_devices.
	(PTX_open_device): Remove PTX_devices list handling. Tweak context
	initialization.
	(PTX_close_device): Remove PTX_devices list handling. Find PTX
	device info via function argument instead of global TLS variable.
	(PTX_get_num_devices): Make callable when backend has not been
	initialized.
	(event_gc): Find PTX device info, current stream via nvptx_thread.
	(event_add, PTX_exec, PTX_host2dev, PTX_dev2host)
	(PTX_async_test_all, PTX_wait_all, PTX_wait_all_async)
	(PTX_get_current_cuda_device, PTX_get_current_cuda_context)
	(PTX_get_cuda_stream, PTX_set_cuda_stream, openacc_close_device)
	(openacc_set_device_num, openacc_register_async_cleanup)
	(openacc_async_set_async): Likewise.
	(openacc_create_thread_data, openacc_destroy_thread_data): New.
	* target.c (oacc-int.h): Include.
	(gomp_fini_device): Split out memory-map freeing into...
	(gomp_free_memmap): ...this new function.
	(gomp_load_plugin_for_device): Initialize
	openacc.create_thread_data_func, openacc.destroy_thread_data_func
	hooks.
	(gomp_find_available_plugins): Initialize one target_device_descr
	per physical device.
	* target.h (oacc-int.h): Don't include.
	(ACC_dispatch_t): Declare here. Add data_environ, ord fields.
	Update comment for mem_map field.
	(gomp_free_memmap): Add prototype.

2014-10-28  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.oacc-c/c.exp (ld_library_path, ALWAYS_CFLAGS):
	Don't refer to CUDA installation in /opt/nvidia/cuda-5.5/.

	* oacc-init.c: Don't use <sys/queue.h>'s SLIST_*.
	* plugin-nvptx.c: Likewise.

2014-10-23  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.oacc-c/reduction-initial-1.c: New file.

2014-10-20  Cesar Philippidis  <cesar@codesourcery.com>

	* (GOACC_update): Declare.

2014-10-20  Julian Brown  <julian@codesourcery.com>

	* oacc-host.c (openacc_register_async_cleanup): New.
	(host_dispatch): Initialise register_async_cleanup_func entry.
	* oacc-int.h (struct ACC_dispatch_t): Add
	register_async_cleanup_func hook.
	* oacc-parallel.c (GOACC_parallel): Call
	register_async_cleanup_func hook after queuing asynchronous
	copy-back.
	* plugin-nvptx.c (enum PTX_event_type): Add PTX_EVT_ASYNC_CLEANUP.
	(struct PTX_event): Remove tgt field.
	(event_gc): Don't do async cleanup in PTX_EVT_KNL, do it in
	PTX_EVT_ASYNC_CLEANUP instead.
	(event_add): Remove tgt argument. Support PTX_EVT_ASYNC_CLEANUP
	events.
	(PTX_exec, PTX_host2dev, PTX_dev2host, PTX_wait_async)
	(PTX_wait_all_async): Update calls to event_add.
	(openacc_register_async_cleanup): New.
	(PTX_async_test): Call event_gc on success path.
	(PTX_async_test_all): Likewise.
	* target.c (gomp_load_plugin_for_device): Initialise
	register_async_cleanup hook.

2014-10-20  Julian Brown  <julian@codesourcery.com>

	* Makefile.am (AM_CPPFLAGS): Fix search path for locating
	gomp-constants.h.
	* Makefile.in: Regenerate.

2014-10-20  Julian Brown  <julian@codesourcery.com>

	* libgomp-plugin.c (gomp_plugin_*): Rename to...
	(GOMP_PLUGIN_*): This.
	* libgomp-plugin.h: Likewise.
	* libgomp.map: Likewise.
	* oacc-host.c (GOMP): Use GOMP_PLUGIN_ in macro expansion.
	* oacc-plugin.c (gomp_plugin_*): Rename to...
	(GOMP_PLUGIN_*): This.
	* plugin-nvptx.c: Likewise.

2014-10-17  Thomas Schwinge  <thomas@codesourcery.com>
	    James Norris  <jnorris@codesourcery.com>

	* libgomp.texi: Outline documentation for OpenACC.

2014-10-17  James Norris  <jnorris@codesourcery.com>
	    Thomas Schwinge  <thomas@codesourcery.com>
	    Tom de Vries  <tom@codesourcery.com>
	    Cesar Philippidis  <cesar@codesourcery.com>

	* testsuite/Makefile.in: Regenerated.
	* testsuite/lib/libgomp.exp
	(check_effective_target_openacc_nvidia_accel_present)
	(check_effective_target_openacc_nvidia_accel_selected): New
	functions.
	* testsuite/libgomp.oacc-fortran/fortran.exp: New exp file.
	* testsuite/libgomp.oacc-fortran/*.f: New tests.
	* testsuite/libgomp.oacc-fortran/*.f90: Likewise.
	* testsuite/libgomp.oacc-c/c.exp: New exp file.
	* testsuite/libgomp.oacc-c/subr.ptx: New file.
	* testsuite/libgomp.oacc-c/subr.cu: New file.
	* testsuite/libgomp.oacc-c/timer.h: New file.
	* testsuite/libgomp.oacc-c/*.c: New tests.
	* testsuite/libgomp.oacc-c++/c++.exp: New exp file.

2014-10-17  Nathan Sidwell  <nathan@codesourcery.com>
	    James Norris  <jnorris@codesourcery.com>
	    Thomas Schwinge  <thomas@codesourcery.com>
	    Tom de Vries  <tom@codesourcery.com>
	    Julian Brown  <julian@codesourcery.com>

	* Makefile.am (AM_CPPFLAGS): Search in ../include also.
	(libgomp_plugin_nvptx_version_info, libgomp_plugin_nvptx_la_SOURCES)
	(libgomp_plugin_nvptx_la_CPPFLAGS, libgomp_plugin_nvptx_la_LDFLAGS)
	(libgomp_plugin_nvptx_la_LIBADD)
	(libgomp_plugin_nvptx_la_LIBTOOLFLAGS): Set variables if
	PLUGIN_NVPTX is defined.
	(toolexeclib_LTLIBRARIES): Add nonshm-host
	and (conditionally) nvidia plugins.
	(libgomp_plugin_nonshm_host_version_info)
	(libgomp_plugin_nonshm_host_la_SOURCES)
	(libgomp_plugin_nonshm_host_la_CPPFLAGS)
	(libgomp_plugin_nonshm_host_la_LDFLAGS)
	(libgomp_plugin_nonshm_host_la_LIBTOOLFLAGS): Set variables.
	(libgomp_la_SOURCES): Add oacc-parallel.c, splay-tree.c,
	oacc-host.c, oacc-init.c, oacc-mem.c, oacc-async.c, oacc-plugin.c,
	oacc-cuda.c, libgomp-plugin.c.
	(nodist_libsubinclude_HEADERS): Add openacc.h,
	../include/gomp-constants.h.
	* Makefile.in: Regenerate.
	* config.h.in: Regenerate.
	* configure.ac: Add TODOs for OpenACC in various places.
	(CUDA_DRIVER_CPPFLAGS, CUDA_DRIVER_LDFLAGS): Initialize.
	(--with-cuda-driver, --with-cuda-driver-include)
	(--with-cuda-driver-lib, --enable-offload-targets): Implement new
	options.
	(PLUGIN_NVPTX, PLUGIN_NVPTX_CPPFLAGS, PLUGIN_NVPTX_LDFLAGS)
	(PLUGIN_NVPTX_LIBS): Initialize variables.
	* configure: Regenerate.
	* env.c (target.h): Include.
	(goacc_device_num, goacc_device_type): New globals.
	(goacc_parse_device_num, goacc_parse_device_type): New functions.
	(initialize_env): Parse GCC_ACC_NOTIFY, ACC_DEVICE_TYPE,
	ACC_DEVICE_NUM environment variables.
	* error.c (gomp_verror, gomp_vfatal, gomp_vnotify, gomp_notify):
	New functions.
	(gomp_fatal): Make global.
	* libgomp.h (stdarg.h): Include.
	(struct gomp_memory_mapping): Forward declaration.
	(struct gomp_task_icv): Add acc_notify_var member.
	(goacc_device_num, goacc_device_type): Add extern declarations.
	(gomp_vnotify, gomp_notify, gomp_verror, gomp_vfatal): Add
	prototypes.
	(gomp_init_targets_once): Add prototype.
	* libgomp.map (OACC_2.0): New symbol version. Add public acc_*
	interface functions.
	(PLUGIN_1.0): New symbol version. Add gomp plugin interface
	functions.
	* libgomp_g.h (GOACC_kernels, GOACC_parallel): Update prototypes.
	(GOACC_wait): Add prototype.
	* target.c (limits.h, stdbool.h, stdlib.h): Don't include.
	(oacc-plugin.h, gomp-constants.h, stdio.h, assert.h): Include.
	(splay_tree_node, splay_tree, splay_tree_key, target_mem_desc)
	(splay_tree_key_s, enum target_type, gomp_device_descr): Don't
	declare here.
	(splay-tree.h): Include.
	(target.h): Include.
	(splay_compare): Change linkage to hidden not static.
	(gomp_init_targets_once): New function.
	(gomp_get_num_devices): Use above.
	(dump_mappings): New function (for debugging).
	(get_kind): New function.
	(gomp_map_vars): Add gomp_memory_mapping (mm), is_openacc
	parameters. Change KINDS to void *. Use lock from memory map
	not device. Use macros from gomp-constants.h instead of
	hard-coded values. Support OpenACC-specific mappings.
	(gomp_copy_from_async): New function.
	(gomp_unmap_vars): Add DO_COPYFROM argument. Only copy memory
	back from device if it is true. Use lock from memory map not
	device.
	(gomp_update): Add mm, is_openacc args. Use lock from
	memory map not device. Use macros from gomp-constants.h not
	hard-coded values.
	(gomp_register_image_for_device): Add forward
	declaration.
	(GOMP_offload_register): Change TARGET_DATA type to
	void **. Check realloc result.
	(gomp_init_device): Change linkage to hidden not static. Tweak mem
	map location.
	(gomp_fini_device): New function.
	(GOMP_target): Adjust lazy initialization, check target
	capabilities for OpenMP 4.0 support. Add locking around splay tree
	lookup. Add new arg to gomp_unmap_vars call.
	(GOMP_target_data): Tweak lazy initialization. Add new args to
	gomp_map_vars, gomp_unmap_vars calls.
	(GOMP_target_update): Tweak lazy initialization. Add new args to
	gomp_update call.
	(gomp_load_plugin_for_device): Initialize device_fini and
	OpenACC-specific plugin hooks.
	(gomp_register_images_for_device): Rename to...
	(gomp_register_image_for_device): This, and register a single
	device only, and only if it has not already had images registered.
	(gomp_find_available_plugins): Rearrange to fix plugin loading and
	initialization for OpenACC. Prefer a device with
	TARGET_CAP_OPENMP_400 for OpenMP.
	* target.h: New file.
	* splay-tree.h: Move bulk of implementation to...
	* splay-tree.c: New file.
	* libgomp-plugin.c: New file.
	* libgomp-plugin.h: New file.
	* oacc-async.c: New file.
	* oacc-cuda.c: New file.
	* oacc-host.c: New file.
	* oacc-init.c: New file.
	* oacc-mem.c: New file.
	* oacc-parallel.c: New file.
	* oacc-plugin.c: New file.
	* plugin-nvptx.c: New file.
	* oacc-int.h: New file.
	* openacc.f90: New file.
	* openacc.h: New file.
	* openacc_lib.h: New file.

2014-10-09  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.oacc-c/collapse-4.c: New file, moved from
	gcc/testsuite/gcc.dg/goacc/collapse.c.

2014-09-23  Thomas Schwinge  <thomas@codesourcery.com>

	* libgomp.map (OACC_2.0): Add acc_on_device, acc_on_device_.
	* fortran.c: Include "openacc.h".
	(acc_on_device_): New function.
	* oacc-parallel.c: Include "openacc.h".
	(acc_on_device): New function.
	* openacc.f90 (acc_device_kind, acc_device_none)
	(acc_device_default, acc_device_host, acc_device_not_host): New
	parameters.
	(acc_on_device): New function declaration.
	* openacc_lib.h (acc_device_kind, acc_device_none)
	(acc_device_default, acc_device_host, acc_device_not_host): New
	parameters.
	(acc_on_device): New function declaration.
	* openacc.h (acc_device_t): New enum.
	(acc_on_device): New function declaration.
	* testsuite/libgomp.oacc-c/acc_on_device-1.c: New file.
	* testsuite/libgomp.oacc-fortran/acc_on_device-1-1.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/acc_on_device-1-2.f: Likewise.
	* testsuite/libgomp.oacc-fortran/acc_on_device-1-3.f: Likewise.

2014-07-09  Thomas Schwinge  <thomas@codesourcery.com>
	    Jakub Jelinek  <jakub@redhat.com>

	* target.c (gomp_map_vars, gomp_unmap_vars, gomp_update): Support
	NULL mappings as well as mapping kind OMP_CLAUSE_MAP_TO_PSET.
	Also, some code reformatting.

2014-06-06  Thomas Schwinge  <thomas@codesourcery.com>
	    James Norris  <jnorris@codesourcery.com>

	* libgomp.map (GOACC_2.0): Add GOACC_update.
	* oacc-parallel.c (GOACC_update): New function.

2014-03-18  Ilya Verbin  <ilya.verbin@intel.com>

	* libgomp.map (GOMP_4.0.1): New symbol version.
	Add GOMP_offload_register.
	* plugin-host.c (device_available): Replace with:
	(get_num_devices): This.
	(get_type): New.
	(offload_register): Ditto.
	(device_init): Ditto.
	(device_get_table): Ditto.
	(device_run): Ditto.
	* target.c (target_type): New enum.
	(offload_image_descr): New struct.
	(offload_images, num_offload_images): New globals.
	(struct gomp_device_descr): Remove device_available_func.
	Add type, is_initialized, get_type_func, get_num_devices_func,
	offload_register_func, device_init_func, device_get_table_func,
	device_run_func.
	(mapping_table): New struct.
	(GOMP_offload_register): New function.
	(gomp_init_device): Ditto.
	(GOMP_target): Add device initialization and lookup for target fn.
	(GOMP_target_data): Add device initialization.
	(GOMP_target_update): Ditto.
	(gomp_load_plugin_for_device): Take handles for get_type,
	get_num_devices, offload_register, device_init, device_get_table,
	device_run functions.
	(gomp_register_images_for_device): New function.
	(gomp_find_available_plugins): Add registration of offload images.

2014-03-18  Thomas Schwinge  <thomas@codesourcery.com>

	* libgomp_g.h (GOACC_kernels, GOACC_parallel): Add three
	additional int arguments.
	* oacc-parallel.c (GOACC_kernels, GOACC_parallel): Handle these.
	* testsuite/libgomp.oacc-c/goacc_kernels.c: Adjust.
	* testsuite/libgomp.oacc-c/goacc_parallel.c: Likewise.

2014-02-28  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.oacc-c/goacc_kernels.c: New file.
	* testsuite/libgomp.oacc-c/kernels-1.c: Likewise.
	* testsuite/libgomp.oacc-c/parallel-1.c: Add one missing test.

	* libgomp.map (GOACC_2.0): Add GOACC_kernels.
	* libgomp_g.h (GOACC_kernels): New prototype.
	* oacc-parallel.c (GOACC_kernels): New function.

2014-02-21  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.oacc-c/data-1.c: New file.

	* libgomp.map (GOACC_2.0): Add GOACC_data_end, GOACC_data_start.
	* libgomp_g.h (GOACC_data_start, GOACC_data_end): New prototypes.
	* oacc-parallel.c (GOACC_data_start, GOACC_data_end): New
	functions.

2014-02-20  Thomas Schwinge  <thomas@codesourcery.com>

	* target.c (gomp_load_plugin_for_device): Don't call dlcose if
	dlopen failed.

2014-02-20  Thomas Schwinge  <thomas@codesourcery.com>
	    James Norris  <jnorris@codesourcery.com>

	* plugin-host.c: New file.
	* target.c (struct gomp_device_descr): Add device_alloc_func,
	device_free_func, device_dev2host_func, device_host2dev_func
	members.
	(gomp_load_plugin_for_device): Load these.
	(gomp_map_vars, gomp_unmap_tgt, gomp_unmap_vars, gomp_update): Use
	these.
	(resolve_device, gomp_find_available_plugins): Remove ID 257 hack.

2014-02-17  Ilya Verbin  <ilya.verbin@intel.com>

	* target.c (gomp_map_vars_existing): Don't update copy_from for the
	existing mappings.

2014-01-28  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.oacc-c/parallel-1.c: Extend.

2013-12-18  Thomas Schwinge  <thomas@codesourcery.com>

	* libgomp_g.h (GOACC_parallel): Switch kinds array to unsigned
	short.
	* oacc-parallel.c (GOACC_parallel): Likewise, and catch
	unsupported kinds.

2013-11-08  Thomas Schwinge  <thomas@codesourcery.com>

	libgomp/
	* target.c (gomp_find_available_plugins): Don't skip device 257
	setup.

2013-11-07  Thomas Schwinge  <thomas@codesourcery.com>

	* oacc-parallel.c: New file.
	* Makefile.am (libgomp_la_SOURCES): Add it.
	* Makefile.in: Regenerate.
	* libgomp.map (GOACC_2.0): Add GOACC_parallel.
	* libgomp_g.h (GOACC_parallel): New declaration.
	* testsuite/libgomp.oacc-c/goacc_parallel.c: New file.
	* testsuite/libgomp.oacc-c/parallel-1.c: New file.

	* libgomp.map (GOACC_2.0): New symbol version.

	* openacc.f90 (openacc_version): New integer parameter.
	* openacc_lib.h (openacc_version): Likewise.
	* testsuite/libgomp.oacc-fortran/openacc_version-1.f: New file.
	* testsuite/libgomp.oacc-fortran/openacc_version-2.f90: Likewise.

	* libgomp.map (OACC_2.0): New symbol version.
	* Makefile.am (nodist_libsubinclude_HEADERS): Add openacc.h.
	(nodist_finclude_HEADERS): Add openacc_lib.h, openacc.f90,
	openacc.mod, and openacc_kinds.mod.
	(openacc_kinds.mod): New target.
	(%.mod): New target, generalized from omp_lib.mod.
	* Makefile.in: Regenerate.
	* openacc.f90: New file.
	* openacc.h: Likewise.
	* openacc_lib.h: Likewise.
	* testsuite/libgomp.oacc-c++/c++.exp: Likewise.
	* testsuite/libgomp.oacc-c/c.exp: Likewise.
	* testsuite/libgomp.oacc-c/lib-1.c: Likewise.
	* testsuite/libgomp.oacc-fortran/fortran.exp: Likewise.
	* testsuite/libgomp.oacc-fortran/lib-1.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/lib-2.f: Likewise.
	* testsuite/libgomp.oacc-fortran/lib-3.f: Likewise.

	Backport from trunk, r204519:

	* testsuite/lib/libgomp.exp (libgomp_init): Don't add -fopenmp to
	ALWAYS_CFLAGS.
	* testsuite/libgomp.c++/c++.exp (ALWAYS_CFLAGS): Add -fopenmp.
	* testsuite/libgomp.c/c.exp (ALWAYS_CFLAGS): Likewise.
	* testsuite/libgomp.fortran/fortran.exp (ALWAYS_CFLAGS): Likewise.
	* testsuite/libgomp.graphite/graphite.exp (ALWAYS_CFLAGS):
	Likewise.

	Backport from trunk, r204518:

	* libgomp_g.h: Include <stddef.h> for size_t.

	Backport from trunk, r204517:

	* libgomp.spec.in: Update comment about libgomp's dependencies.
	* configure.ac: Likewise.
	* configure: Regenerate.

2013-10-10  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.c++/udr-6.C: Remove UDR + on type F.

2013-10-08  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.c/thread-limit-1.c (main): Check if
	cnt isn't bigger than 6 at any point in time, sleep 10ms after
	incrementing it and then atomically decrement.
	* testsuite/libgomp.c/thread-limit-2.c (main): Likewise.

	* libgomp.h (struct gomp_team): Add task_queued_count field.
	Add comments about task_{,queued_,running_}count.
	* team.c (gomp_new_team): Clear task_queued_count.
	* task.c (GOMP_task): Increment task_queued_count.
	(gomp_task_run_pre): Decrement task_queued_count.  If it is
	decremented to zero, call gomp_team_barrier_clear_task_pending.
	(gomp_task_run_post_handle_dependers): Increment task_queued_count.
	(gomp_barrier_handle_tasks): Don't call
	gomp_team_barrier_clear_task_pending here.

	* testsuite/libgomp.c/udr-2.c (main): Remove unused variable i.
	* testsuite/libgomp.c/udr-3.c (main): Initialize i to 0.
	* testsuite/libgomp.c++/udr-8.C (main): Likewise.

	* testsuite/libgomp.c/affinity-1.c (min_cpusetsize): New variable.
	(pthread_getaffinity_np): Set it when setting contig_cpucount.
	(print_affinity): Use it for size, only use sysconf value if that is not
	set and if it is smaller than sizeof (cpu_set_t), use sizeof (cpu_set_t).

2013-10-07  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.c/affinity-1.c (main): Fork even if
	contig_cpucount is > 8.

	PR libgomp/58642
	* config/linux/proc.c: Include errno.h.
	(gomp_get_cpuset_size): New variable.
	(gomp_cpuset_popcount): Add cpusetsize argument, use it instead of
	gomp_cpuset_size.
	(gomp_init_num_threads): If CPU_ALLOC_SIZE is defined and
	pthread_getaffinity_np returned EINVAL, increase gomp_cpuset_size
	and retry.  After successful pthread_getaffinity_np copy
	gomp_cpuset_size to gomp_get_cpuset_size and try to find out
	minimum gomp_cpuset_size that covers all the CPUs set in gomp_cpusetp.
	(get_num_procs): Pass gomp_get_cpuset_size rather than gomp_cpuset_size
	to pthread_getaffinity_np, adjust gomp_cpuset_popcount caller.
	* config/linux/proc.h (gomp_cpuset_popcount): Add cpusetsize argument.
	* config/linux/affinity.c (gomp_affinity_finalize_place_list,
	gomp_affinity_init_level): Adjust gomp_cpuset_popcount callers.
	* testsuite/libgomp.c/affinity-1.c (pthread_getaffinity_np): Set
	contig_cpucount from the first successful pthread_getaffinity_np
	call, rather than just first call.

2013-10-04  Jakub Jelinek  <jakub@redhat.com>

	* libgomp.h (struct gomp_task_icv): Add thread_limit_var.
	(gomp_thread_limit_var, gomp_remaining_threads_count,
	gomp_remaining_threads_lock): Remove.
	(gomp_managed_threads_lock): New variable.
	(struct gomp_thread_pool): Add threads_busy field.
	(gomp_free_thread): New prototype.
	* parallel.c (gomp_resolve_num_threads): Adjust for
	thread_limit now being in icv->thread_limit_var.  Use
	UINT_MAX instead of ULONG_MAX as infinity.  If not nested,
	just return minimum of max_num_threads and icv->thread_limit_var
	and if thr->thread_pool, set threads_busy to the returned value.
	Otherwise, don't update atomically gomp_remaining_threads_count,
	but instead thr->thread_pool->threads_busy.
	(GOMP_parallel_end): Adjust for thread_limit now being in
	icv->thread_limit_var.  Use UINT_MAX instead of ULONG_MAX as
	infinity.  Adjust threads_busy in the pool rather than
	gomp_remaining_threads_count.  Remember team->nthreads and call
	gomp_team_end before adjusting threads_busy, if not nested
	afterwards, just set it to 1 non-atomically.
	* team.c (gomp_thread_start): Clear thr->thread_pool and
	thr->task before returning.
	(gomp_free_pool_helper): Clear thr->thread_pool and thr->task
	before calling pthread_exit.
	(gomp_free_thread): No longer static.  Use
	gomp_managed_threads_lock instead of gomp_remaining_threads_lock.
	(gomp_team_start): Set thr->thread_pool->threads_busy to
	nthreads immediately after creating new pool.  Use
	gomp_managed_threads_lock instead of gomp_remaining_threads_lock.
	(gomp_team_end): Use gomp_managed_threads_lock instead of
	gomp_remaining_threads_lock.
	(initialize_team): Don't call gomp_sem_init here.
	* env.c (gomp_global_icv): Initialize thread_limit_var field.
	(gomp_thread_limit_var, gomp_remaining_threads_count,
	gomp_remaining_threads_lock): Remove.
	(gomp_managed_threads_locks): New variable.
	(handle_omp_display_env): Adjust for thread_limit var being
	in gomp_global_icv.
	(initialize_env): Likewise.  If user provided value is > INT_MAX,
	set gomp_global_icv.thread_limit_var to UINT_MAX (infinity).
	Initialize gomp_managed_threads_lock instead of
	gomp_remaining_threads_lock.
	(omp_get_thread_limit): Adjust for thread_limit var in
	icv->thread_limit_var.
	* target.c: Include limits.h.
	(resolve_device): If device_id is < -1, return NULL.
	(gomp_map_vars): Make sure tgt->array, tgt->to_free, tgt->tgt_start,
	tgt->tgt_end and k->copy_from aren't left uninitialized.
	(GOMP_target): Arrange for host callback to be performed in a
	separate initial thread and contention group, inheriting ICVs from
	gomp_global_icv etc.
	(GOMP_teams): Adjust thread_limit_var ICV.
	* testsuite/libgomp.c/affinity-1.c (main): Call omp_set_dynamic (0).
	* testsuite/libgomp.c/target-3.c: New test.
	* testsuite/libgomp.c/target-4.c: New test.
	* testsuite/libgomp.c/target-5.c: New test.
	* testsuite/libgomp.c/target-6.c: New test.
	* testsuite/libgomp.c/target-7.c: New test.
	* testsuite/libgomp.c/thread-limit-1.c: New test.
	* testsuite/libgomp.c/thread-limit-2.c: New test.
	* testsuite/libgomp.c/thread-limit-3.c: New test.

	* libgomp.h (struct gomp_team_state): Add place_partition_off
	and place_partition_len fields.
	(struct gomp_task_icv): Add bind_var field.
	(gomp_bind_var_list, gomp_bind_var_list_len, gomp_places_list,
	gomp_places_list_len): New extern decls.
	(struct gomp_thread): Add place field.
	(gomp_cpu_affinity, gomp_cpu_affinity_len): Remove.
	(gomp_init_thread_affinity): Add place argument.
	(gomp_affinity_alloc, gomp_affinity_init_place, gomp_affinity_add_cpus,
	gomp_affinity_remove_cpu, gomp_affinity_copy_place,
	gomp_affinity_same_place, gomp_affinity_finalize_place_list,
	gomp_affinity_init_level, gomp_affinity_print_place): New prototypes.
	(gomp_team_start): Add flags argument.
	* team.c (struct gomp_thread_start_data): Add place field.
	(gomp_thread_start): Initialize thr->place.
	(gomp_team_start): Add flags argument.  Handle OpenMP 4.0 affinity.
	* env.c (gomp_global_icv): Initialize bind_var field.
	(gomp_cpu_affinity, gomp_cpu_affinity_len): Remove.
	(gomp_bind_var_list, gomp_bind_var_list_len, gomp_places_list,
	gomp_places_list_len): New variables.
	(parse_bind_var, parse_one_place, parse_places_var): New functions.
	(parse_affinity): Rewritten to construct OMP_PLACES list with unit
	sized places.
	(handle_omp_display_env): Remove proc_bind argument.  Set display
	to true for OMP_DISPLAY_ENV=true.  Print 201307 instead of 201107
	as _OPENMP.  Enhance printing of OMP_PROC_BIND, add printing
	of OMP_PLACES, don't print anything for GOMP_CPU_AFFINITY.
	(initialize_env): Use parse_bind_var to parse OMP_PROC_BIND
	instead of parse_boolean.  Use parse_places_var for OMP_PLACES
	parsing.  Don't call parse_affinity if OMP_PLACES has been
	successfully parsed (and call gomp_init_affinity in that case).
	Adjust handle_omp_display_env caller.
	(omp_get_proc_bind): Return bind_var ICV.
	* config/posix/affinity.c (gomp_init_thread_affinity): Add place
	argument.
	(gomp_affinity_alloc, gomp_affinity_init_place, gomp_affinity_add_cpus,
	gomp_affinity_remove_cpu, gomp_affinity_copy_place,
	gomp_affinity_same_place, gomp_affinity_finalize_place_list,
	gomp_affinity_init_level, gomp_affinity_print_place): New stubs.
	* config/linux/proc.c (gomp_cpuset_popcount): Fix up check extern decl.
	(gomp_init_num_threads): If HAVE_PTHREAD_AFFINITY_NP isn't defined,
	fix up sizeof argument.  Free and clear gomp_cpusetp if it didn't
	contain any logical CPUs.
	(get_num_procs): Check gomp_places_list instead of gomp_cpu_affinity.
	* config/linux/affinity.c: Include errno.h, stdio.h and string.h.
	(affinity_counter): Remove.
	(CPU_CLR_S): Define if CPU_ALLOC_SIZE is not defined.
	(gomp_init_affinity): Rewritten, if gomp_places_list is NULL, try
	silently create OMP_PLACES=threads, if it is non-NULL afterwards,
	bind current thread to the first place.
	(gomp_init_thread_affinity): Rewritten.  Add place argument, just
	pthread_setaffinity_np to gomp_places_list[place].
	(gomp_affinity_alloc, gomp_affinity_init_place, gomp_affinity_add_cpus,
	gomp_affinity_remove_cpu, gomp_affinity_copy_place,
	gomp_affinity_same_place, gomp_affinity_finalize_place_list,
	gomp_affinity_init_level, gomp_affinity_print_place): New functions.
	* parallel.c (GOMP_parallel_start): Adjust gomp_team_start caller.
	(GOMP_parallel): Likewise, pass through flags parameter to it.
	* sections.c (GOMP_parallel_sections_start): Adjust gomp_team_start
	caller.
	(GOMP_parallel_sections): Likewise, pass through flags parameter to it.
	* loop.c (gomp_parallel_loop_start): Add flags argument, pass it through
	to gomp_team_start.
	(GOMP_parallel_loop_static_start, GOMP_parallel_loop_dynamic_start,
	GOMP_parallel_loop_guided_start, GOMP_parallel_loop_runtime_start):
	Adjust gomp_parallel_loop_start callers.
	(GOMP_parallel_loop_static, GOMP_parallel_loop_dynamic,
	GOMP_parallel_loop_guided, GOMP_parallel_loop_runtime): Likewise, pass
	through flags parameter to it.
	* testsuite/libgomp.c/affinity-1.c: New test.
	* testsuite/libgomp.c++/affinity-1.C: New test.

2013-10-01  Jakub Jelinek  <jakub@redhat.com>

	PR libgomp/57298
	* config/linux/proc.c (gomp_cpuset_size, gomp_cpusetp): New variables.
	(gomp_cpuset_popcount): Use CPU_COUNT_S if available, or CPU_COUNT if
	gomp_cpuset_size is sizeof (cpu_set_t).  Use gomp_cpuset_size instead
	of sizeof (cpu_set_t) to determine number of iterations.
	(gomp_init_num_threads): Initialize gomp_cpuset_size and gomp_cpusetp
	here, use gomp_cpusetp instead of &cpuset and pass gomp_cpuset_size
	instead of sizeof (cpu_set_t) to pthread_getaffinity_np.
	(get_num_procs): Don't call pthread_getaffinity_np if gomp_cpusetp
	is NULL.  Use gomp_cpusetp instead of &cpuset and pass gomp_cpuset_size
	instead of sizeof (cpu_set_t) to pthread_getaffinity_np.
	* config/linux/proc.h (gomp_cpuset_popcount): Add attribute_hidden.
	(gomp_cpuset_size, gomp_cpusetp): Declare.
	* config/linux/affinity.c (CPU_ISSET_S, CPU_ZERO_S, CPU_SET_S): Define
	if CPU_ALLOC_SIZE isn't defined.
	(gomp_init_affinity): Don't call pthread_getaffinity_np here, instead
	use gomp_cpusetp computed by gomp_init_num_threads.  Use CPU_*_S
	variants of macros with gomp_cpuset_size as set size, for cpusetnew
	use alloca for it if CPU_ALLOC_SIZE is defined, otherwise local
	fixed size variable.
	(gomp_init_thread_affinity): Use CPU_*_S variants of macros with
	gomp_cpuset_size as set size, for cpuset use alloca for it if
	CPU_ALLOC_SIZE is defined, otherwise local fixed size variable.

2013-09-27  Jakub Jelinek  <jakub@redhat.com>

	* libgomp.h: Include stdlib.h.
	(struct gomp_task_depend_entry,
	struct gomp_dependers_vec): New types.
	(struct gomp_task): Add dependers, depend_hash, depend_count,
	num_dependees and depend fields.
	(struct gomp_taskgroup): Add num_children field.
	(gomp_finish_task): Free depend_hash if non-NULL.
	* libgomp_g.h (GOMP_task): Add depend argument.
	* hashtab.h: New file.
	* task.c: Include hashtab.h.
	(hash_entry_type): New typedef.
	(htab_alloc, htab_free, htab_hash, htab_eq): New inlines.
	(gomp_init_task): Clear dependers, depend_hash and depend_count
	fields.
	(GOMP_task): Add depend argument, handle depend clauses.  Increment
	num_children field in taskgroup.
	(gomp_task_run_pre): Don't increment task_running_count here,
	nor clear task_pending bit.
	(gomp_task_run_post_handle_depend_hash,
	gomp_task_run_post_handle_dependers,
	gomp_task_run_post_handle_depend): New functions.
	(gomp_task_run_post_remove_parent): Clear in_taskwait before
	signalling corresponding semaphore.
	(gomp_task_run_post_remove_taskgroup): Decrement num_children
	field and make the decrement to 0 MEMMODEL_RELEASE operation,
	rather than storing NULL to taskgroup->children.  Clear
	in_taskgroup_wait before signalling corresponding semaphore.
	(gomp_barrier_handle_tasks): Move task_running_count increment
	and task_pending bit clearing here.  Call
	gomp_task_run_post_handle_depend.  If more than one new tasks
	have been queued, wake other threads if needed.
	(GOMP_taskwait): Call gomp_task_run_post_handle_depend.  If more
	than one new tasks have been queued, wake other threads if needed.
	After waiting on taskwait_sem, enter critical section again.
	(GOMP_taskgroup_start): Initialize num_children field.
	(GOMP_taskgroup_end): Check num_children instead of children
	before critical section.  If children is NULL, but num_children
	is non-zero, wait on taskgroup_sem.  Call
	gomp_task_run_post_handle_depend.  If more than one new tasks have
	been queued, wake other threads if needed.  After waiting on
	taskgroup_sem, enter critical section again.
	* testsuite/libgomp.c/depend-1.c: New test.
	* testsuite/libgomp.c/depend-2.c: New test.
	* testsuite/libgomp.c/depend-3.c: New test.
	* testsuite/libgomp.c/depend-4.c: New test.

2013-09-26  Jakub Jelinek  <jakub@redhat.com>

	PR libgomp/58482
	* testsuite/libgomp.c/simd-6.c: New test.
	* testsuite/libgomp.c++/simd-8.C: New test.

2013-09-25  Jakub Jelinek  <jakub@redhat.com>

	* parallel.c (GOMP_cancellation_point, GOMP_cancel): Handle
	GIMPLE_CANCEL_TASKGROUP cancellation.
	* libgomp.h (struct gomp_task): Add next_taskgroup, prev_taskgroup,
	taskgroup and copy_ctors_done fields.
	(struct gomp_taskgroup): New type.
	* task.c (gomp_init_task): Initialize copy_ctors_done and taskgroup
	fields.
	(GOMP_task): Don't start a new thread also if it's taskgroup has
	been cancelled.  Set copy_ctors_done field if needed.  Initialize
	taskgroup field.  If copy_ctors_done and already cancelled, don't
	discard the task.  If taskgroup is non-NULL, enqueue the task
	into taskgroup queue.
	(gomp_task_run_pre, gomp_task_run_post_remove_parent,
	gomp_task_run_post_remove_taskgroup): New inline functions.
	(gomp_barrier_handle_tasks, GOMP_taskwait): Use them.
	(GOMP_taskgroup_start, GOMP_taskgroup_end): Implement taskgroup
	support.
	* testsuite/libgomp.c++/cancel-parallel-1.C: New test.
	* testsuite/libgomp.c++/cancel-parallel-2.C: New test.
	* testsuite/libgomp.c++/cancel-parallel-3.C: New test.
	* testsuite/libgomp.c++/cancel-for-1.C: New test.
	* testsuite/libgomp.c++/cancel-for-1.C: New test.
	* testsuite/libgomp.c++/cancel-taskgroup-1.C: New test.
	* testsuite/libgomp.c++/cancel-taskgroup-2.C: New test.
	* testsuite/libgomp.c++/cancel-taskgroup-3.C: New test.
	* testsuite/libgomp.c++/cancel-test.h: New file.
	* testsuite/libgomp.c++/cancel-sections-1.C: New test.
	* testsuite/libgomp.c++/taskgroup-1.C: New test.
	* testsuite/libgomp.c/cancel-taskgroup-1.c: New test.
	* testsuite/libgomp.c/cancel-taskgroup-2.c: New test.
	* testsuite/libgomp.c/taskgroup-1.c: New test.
	* testsuite/libgomp.c/cancel-parallel-3.c (do_some_work): Use
	void return type.

2013-09-24  Richard Henderson  <rth@redhat.com>
	    Jakub Jelinek  <jakub@redhat.com>

	* libgomp.map (GOMP_4.0): Export GOMP_barrier_cancel,
	GOMP_loop_end_cancel, GOMP_sections_end_cancel.
	* parallel.c (GOMP_cancellation_point): Add WHICH argument, do nothing
	if gomp_cancel_var is false, handle workshare and parallel
	cancellation point, add ialias.
	(GOMP_cancel): Add WHICH and DO_CANCEL arguments, do nothing if
	gomp_cancel_var is false, call GOMP_cancellation_point if DO_CANCEL
	is false, handle workshare and parallel cancellation.
	* config/posix/bar.c (gomp_barrier_init): Clear cancellable field.
	(gomp_team_barrier_wait_end): Clear BAR_CANCELLED from state.
	Set work_share_cancelled to 0 on last thread, use __atomic_load_n.
	(gomp_team_barrier_wait_cancel_end, gomp_team_barrier_wait_cancel,
	gomp_team_barrier_cancel): New functions.
	* config/posix/bar.h (gomp_barrier_t): Add cancellable field.
	(BAR_CANCELLED): Define.
	(BAR_INCR): Set to 8.
	(gomp_team_barrier_wait_cancel, gomp_team_barrier_wait_cancel_end,
	gomp_team_barrier_cancel): New prototypes.
	(gomp_barrier_wait_start): Preserve BAR_CANCELLED bit.
	(gomp_barrier_wait_cancel_start, gomp_team_barrier_wait_final,
	gomp_team_barrier_cancelled): New inline functions.
	* config/linux/bar.c (gomp_team_barrier_wait_end): Clear BAR_CANCELLED
	from state where needed.  Set work_share_cancelled to 0 on last thread.
	(gomp_team_barrier_wait_final, gomp_team_barrier_wait_cancel_end,
	gomp_team_barrier_wait_cancel, gomp_team_barrier_cancel): New
	functions.
	* config/linux/bar.h (gomp_barrier_t): Add awaited_final field.
	(BAR_CANCELLED): Define.
	(BAR_INCR): Set to 8.
	(gomp_barrier_init): Initialize awaited_final field.
	(gomp_team_barrier_wait_final, gomp_team_barrier_wait_cancel,
	gomp_team_barrier_wait_cancel_end, gomp_team_barrier_cancel): New
	prototypes.
	(gomp_barrier_wait_start): Preserve BAR_CANCELLED bit.
	(gomp_barrier_wait_cancel_start, gomp_team_barrier_wait_final_start,
	gomp_team_barrier_cancelled): New inline functions.
	* work.c (gomp_work_share_end, gomp_work_share_end_nowait): Set
	team->work_shares_to_free to thr->ts.work_share before calling
	free_work_share.
	(gomp_work_share_end_cancel): New function.
	* team.c (gomp_thread_start): Use gomp_team_barrier_wait_final
	instead of gomp_team_barrier_wait.
	(gomp_new_team): Initialize work_shares_to_free, work_share_cancelled
	and team_cancelled fields.
	(gomp_team_end): Use gomp_team_barrier_wait_final instead of
	gomp_team_barrier_wait.  If team->team_cancelled, call
	gomp_fini_worshare on ws chain starting at team->work_shares_to_free
	rather than thr->ts.work_share.
	* env.c (gomp_global_icv): Initialize target_data field.
	(gomp_cancel_var): New global variable.
	(handle_omp_display_env): Print cancel-var ICV.
	(initialize_env): Parse OMP_CANCELLATION env var.
	(omp_get_cancellation): Return gomp_cancel_var.
	* barrier.c (GOMP_barrier_cancel): New function.
	* libgomp.h (gomp_cancel_var): New extern decl.
	(struct gomp_team): Add work_shares_to_free, work_share_cancelled
	and team_cancelled fields.
	(gomp_cancel_kind): New enum.
	(gomp_work_share_end_cancel): New prototype.
	* libgomp_g.h (GOMP_barrier_cancel, GOMP_loop_end_cancel,
	GOMP_sections_end_cancel): New prototypes.
	(GOMP_cancel, GOMP_cancellation_point): Adjust prototypes.
	* task.c (GOMP_task): If gomp_team_barrier_cancelled, don't
	queue or start new tasks.
	(gomp_barrier_handle_tasks): If gomp_team_barrier_cancelled,
	don't start any new tasks, just free all tasks.
	* sections.c (GOMP_sections_end_cancel): New function.
	* loop.c (GOMP_loop_end_cancel): New function.
	* testsuite/libgomp.c/cancel-parallel-1.c: New test.
	* testsuite/libgomp.c/cancel-parallel-2.c: New test.
	* testsuite/libgomp.c/cancel-parallel-3.c: New test.
	* testsuite/libgomp.c/cancel-for-1.c: New test.
	* testsuite/libgomp.c/cancel-for-2.c: New test.
	* testsuite/libgomp.c/cancel-sections-1.c: New test.

2013-09-23  Michael Zolotukhin  <michael.v.zolotukhin@intel.com>

	* configure.ac: Add checks for plugins support.
	* config.h.in: Regenerated.
	* configure: Regenerated.
	* target.c (struct target_mem_desc): Add device_descr field.
	(devices): New.
	(num_devices): New.
	(struct gomp_device_descr): New.
	(gomp_get_num_devices): Call gomp_target_init.
	(resolve_device): Return device_descr instead of int.
	(gomp_map_vars): Add devicep argument and update the function
	accordingly.
	(gomp_unmap_tgt): Likewise.
	(gomp_unmap_vars): Likewise.
	(gomp_update): Likewise.
	(GOMP_target): Use device_descr struct.
	(GOMP_target_data): Likewise.
	(GOMP_target_update): Likewise.
	(gomp_check_plugin_file_name): New.
	(gomp_load_plugin_for_device): New.
	(gomp_find_available_plugins): New.
	(gomp_target_init): New.

2013-09-19  Jakub Jelinek  <jakub@redhat.com>

	* libgomp_g.h (GOMP_target): Change 3rd argument to const void *.
	(GOMP_target_data, GOMP_target_update): Add openmp_target argument.
	* target.c (GOMP_target): Change fnname argument to openmp_target,
	with const void * type.
	(GOMP_target_data, GOMP_target_update): Add openmp_target argument.

	* testsuite/libgomp.c/simd-4.c: New test.
	* testsuite/libgomp.c/simd-5.c: New test.
	* testsuite/libgomp.c/udr-1.c: New test.
	* testsuite/libgomp.c/udr-2.c: New test.
	* testsuite/libgomp.c/udr-3.c: New test.
	* testsuite/libgomp.c++/udr-9.C: New test.

2013-09-18  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.c++/simd-4.C: New test.
	* testsuite/libgomp.c++/simd-5.C: New test.
	* testsuite/libgomp.c++/simd-6.C: New test.
	* testsuite/libgomp.c++/simd-7.C: New test.
	* testsuite/libgomp.c++/udr-1.C: New test.
	* testsuite/libgomp.c++/udr-2.C: New test.
	* testsuite/libgomp.c++/udr-3.C: New test.
	* testsuite/libgomp.c++/udr-4.C: New test.
	* testsuite/libgomp.c++/udr-5.C: New test.
	* testsuite/libgomp.c++/udr-6.C: New test.
	* testsuite/libgomp.c++/udr-7.C: New test.
	* testsuite/libgomp.c++/udr-8.C: New test.

2013-09-16  Jakub Jelinek  <jakub@redhat.com>

	* splay-tree.h: New file.
	* target.c: Include stdbool.h.
	(splay_tree_node, splay_tree, splay_tree_key): New typedefs.
	(struct target_mem_desc, struct splay_tree_key_s): New structures.
	(splay_compare): New inline function.
	(gomp_get_num_devices): New function.
	(resolve_device): Use default_device_var ICV.  Add temporarily
	magic testing device number 257.
	(dev_splay_tree, dev_env_lock): New variables.
	(gomp_map_vars_existing, gomp_map_vars, gomp_unmap_tgt,
	gomp_unmap_vars, gomp_update): New functions.
	(GOMP_target, GOMP_target_data, GOMP_target_end_data,
	GOMP_target_update): Add support for magic testing device number 257.
	* libgomp.h (struct target_mem_desc): Forward declare.
	(struct gomp_task_icv): Add default_device_var and target_data.
	(gomp_get_num_devices): New prototype.
	* env.c (gomp_global_icv): Add default_device_var initializer.
	(parse_int): New function.
	(handle_omp_display_env): Print OMP_DEFAULT_DEVICE.
	(initialize_env): Initialize default_device_var.
	(omp_set_default_device): Set default_device_var ICV.
	(omp_get_default_device): Query default_device_var ICV.
	(omp_get_num_devices): Call gomp_get_num_devices.
	(omp_get_num_teams, omp_get_team_num, omp_is_initial_device): Add
	comments.

2013-09-13  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/58392
	* testsuite/libgomp.c/pr58392.c: New test.

2013-09-06  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.c/target-2.c: New test.
	* testsuite/libgomp.c++/target-3.C: New test.

2013-09-05  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.c++/target-2.C: New test.
	* testsuite/libgomp.c++/target-2-aux.cc: New file.

	* libgomp.map (GOMP_4.0): Add GOMP_target, GOMP_target_data,
	GOMP_target_end_data, GOMP_target_update and GOMP_teams.
	* Makefile.am (libgomp_la_SOURCES): Add target.c.
	* Makefile.in: Regenerated.
	* target.c: New file.
	* libgomp_g.h (GOMP_target, GOMP_target_data,
	GOMP_target_end_data, GOMP_target_update, GOMP_teams): New prototypes.
	* testsuite/libgomp.c++/for-11.C (main): Uncomment
	#pragma omp target teams directive.
	* testsuite/libgomp.c/for-3.c (main): Likewise.
	* testsuite/libgomp.c++/target-1.C: New test.
	* testsuite/libgomp.c/target-1.c: New test.

2013-07-06  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.c/for-3.c: New test.
	* testsuite/libgomp.c/simd-1.c: New test.
	* testsuite/libgomp.c/simd-2.c: New test.
	* testsuite/libgomp.c/simd-3.c: New test.

2013-07-05  Richard Henderson  <rth@redhat.com>

	* config/linux/bar.c (gomp_team_barrier_wait_end): Remove one more
	hard-coded constant.

2013-07-03  Richard Henderson  <rth@redhat.com>

	* config/linux/bar.h (BAR_TASK_PENDING, BAR_WAS_LAST,
	BAR_WAITING_FOR_TASK, BAR_INCR): New.
	(gomp_barrier_wait_start, gomp_barrier_last_thread, 
	gomp_team_barrier_set_task_pending,
	gomp_team_barrier_clear_task_pending,
	gomp_team_barrier_set_waiting_for_tasks,
	gomp_team_barrier_waiting_for_tasks,
	gomp_team_barrier_done): Use them.
	* config/linux/bar.c (gomp_barrier_wait_end,
	gomp_barrier_wait_last, gomp_team_barrier_wait_end): Likewise.
	* config/posix/bar.h, config/posix/bar.c: Similarly.

2013-07-03  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.c++/atomic-14.C: Adjust for stricter atomic
	seq_cst parser.
	* testsuite/libgomp.c++/atomic-15.C: Likewise.
	* testsuite/libgomp.c/atomic-17.c: Likewise.

2013-06-28  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.c++/simd-1.C: New test.
	* testsuite/libgomp.c++/simd-2.C: New test.
	* testsuite/libgomp.c++/simd-3.C: New test.

2013-06-21  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.c/for-1.h: New file.
	* testsuite/libgomp.c/for-2.h: New file.
	* testsuite/libgomp.c/for-1.c: New test.
	* testsuite/libgomp.c/for-2.c: New test.
	* testsuite/libgomp.c++/for-9.C: New test.
	* testsuite/libgomp.c++/for-10.C: New test.
	* testsuite/libgomp.c++/for-11.C: New test.

2013-06-12  Jakub Jelinek  <jakub@redhat.com>

	* fortran.c (omp_is_initial_device): Add ialias_redirect.
	(omp_is_initial_device_): New function.
	* omp_lib.f90.in (omp_is_initial_device): New interface.
	* omp.h.in (omp_is_initial_device): New prototype.
	* libgomp.map (omp_is_initial_device, omp_is_initial_device_):
	Export @@OMP_4.0.
	* env.c (omp_is_initial_device): New function.  Add ialias for it.
	* omp_lib.h.in (omp_is_initial_device): New external.

	* omp_lib.f90.in (omp_get_dynamic, omp_get_nested,
	omp_in_parallel, omp_get_max_threads, omp_get_num_procs,
	omp_get_num_threads, omp_get_thread_num, omp_get_thread_limit,
	omp_set_max_active_levels, omp_get_max_active_levels,
	omp_get_level, omp_get_ancestor_thread_num,
	omp_get_team_size, omp_get_active_level, omp_in_final,
	omp_get_cancellation, omp_get_default_device,
	omp_get_num_devices, omp_get_num_teams, omp_get_team_num): Remove
	useless use omp_lib_kinds.

2013-04-30  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.c/atomic-17.c: New test.
	* testsuite/libgomp.c++/atomic-14.C: New test.
	* testsuite/libgomp.c++/atomic-15.C: New test.

2013-04-10  Jakub Jelinek  <jakub@redhat.com>

	* libgomp.map (omp_get_cancellation, omp_get_cancellation_,
	omp_get_proc_bind, omp_get_proc_bind_, omp_set_default_device,
	omp_set_default_device_, omp_set_default_device_8_,
	omp_get_default_device, omp_get_default_device_,
	omp_get_num_devices, omp_get_num_devices_, omp_get_num_teams,
	omp_get_num_teams_, omp_get_team_num, omp_get_team_num_): Export
	@@OMP_4.0.
	(GOMP_cancel, GOMP_cancellation_point, GOMP_parallel_loop_dynamic,
	GOMP_parallel_loop_guided, GOMP_parallel_loop_runtime,
	GOMP_parallel_loop_static, GOMP_parallel_sections, GOMP_parallel,
	GOMP_taskgroup_start, GOMP_taskgroup_end): Export @@GOMP_4.0.
	* parallel.c (GOMP_parallel_end): Add ialias.
	(GOMP_parallel, GOMP_cancel, GOMP_cancellation_point): New
	functions.
	* omp.h.in (omp_proc_bind_t): New typedef.
	(omp_get_cancellation, omp_get_proc_bind, omp_set_default_device,
	omp_get_default_device, omp_get_num_devices, omp_get_num_teams,
	omp_get_team_num): New prototypes.
	* env.c (omp_get_cancellation, omp_get_proc_bind,
	omp_set_default_device, omp_get_default_device, omp_get_num_devices,
	omp_get_num_teams, omp_get_team_num): New functions.
	* fortran.c (ULP, STR1, STR2, ialias_redirect): Removed.
	(omp_get_cancellation_, omp_get_proc_bind_, omp_set_default_device_,
	omp_set_default_device_8_, omp_get_default_device_,
	omp_get_num_devices_, omp_get_num_teams_, omp_get_team_num_): New
	functions.
	* libgomp.h (ialias_ulp, ialias_str1, ialias_str2, ialias_redirect,
	ialias_call): Define.
	* libgomp_g.h (GOMP_parallel_loop_static, GOMP_parallel_loop_dynamic,
	GOMP_parallel_loop_guided, GOMP_parallel_loop_runtime, GOMP_parallel,
	GOMP_cancel, GOMP_cancellation_point, GOMP_taskgroup_start,
	GOMP_taskgroup_end, GOMP_parallel_sections): New prototypes.
	* task.c (GOMP_taskgroup_start, GOMP_taskgroup_end): New functions.
	* sections.c (GOMP_parallel_sections): New function.
	* loop.c (GOMP_parallel_loop_static, GOMP_parallel_loop_dynamic,
	GOMP_parallel_loop_guided, GOMP_parallel_loop_runtime): New
	functions.
	(GOMP_parallel_end): Add ialias_redirect.
	* omp_lib.f90.in (omp_proc_bind_kind, omp_proc_bind_false,
	omp_proc_bind_true, omp_proc_bind_master, omp_proc_bind_close,
	omp_proc_bind_spread): New params.
	(omp_get_cancellation, omp_get_proc_bind, omp_set_default_device,
	omp_get_default_device, omp_get_num_devices, omp_get_num_teams,
	omp_get_team_num): New interfaces.
	* omp_lib.h.in (omp_proc_bind_kind, omp_proc_bind_false,
	omp_proc_bind_true, omp_proc_bind_master, omp_proc_bind_close,
	omp_proc_bind_spread): New params.
	(omp_get_cancellation, omp_get_proc_bind, omp_set_default_device,
	omp_get_default_device, omp_get_num_devices, omp_get_num_teams,
	omp_get_team_num): New externals.

2013-03-20  Tobias Burnus  <burnus@net-b.de>

	* libgomp.texi (Environment Variables): Minor cleanup,
	update section refs to OpenMP 4.0rc2.
	(OMP_DISPLAY_ENV, GOMP_SPINCOUNT): Document these
	environment variables.

2013-03-20  Tobias Burnus  <burnus@net-b.de>

	* env.c (handle_omp_display_env): New function.
	(initialize_env): Use it.

2013-03-20  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.c/atomic-14.c: Add parens to make it valid.
	* testsuite/libgomp.c/atomic-15.c: New test.
	* testsuite/libgomp.c/atomic-16.c: New test.

	* testsuite/libgomp.c++/atomic-10.C: New test.
	* testsuite/libgomp.c++/atomic-11.C: New test.
	* testsuite/libgomp.c++/atomic-12.C: New test.
	* testsuite/libgomp.c++/atomic-13.C: New test.

Copyright (C) 2013-2016 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Local Variables:
mode: change-log
change-log-default-name: "ChangeLog.gomp"
End:
